#+TITLE: Pytis TODO items
#+SEQ_TODO: FEEDBACK VERIFY TODO | DONE CANCELLED

* CHYBY [7/17] [41%]
  :PROPERTIES:
  :COOKIE_DATA: todo recursive
  :END:

** VERIFY Chyba při vyvolání tiskové sestavy

   Při vyvolání formuláře přes Enter nebo Space v BrowseFormu a následného
   vyvolání tiskové sestavy vyskočí chybové okno.

** FEEDBACK Deadlock při zamykání

   Mějme tabulku T1, kde políčko p1 má "references=C1 ON UPDATE CASCADE".  Při
   otevření editačního formuláře nad T1 dojde k uzamčení T1.  Pokud nad tímto
   editačním formulářem otevřeme číselník C1 a provedeme editaci referenčního
   sloupce (většinou klíčového) v záznamu referovaném z uzamčeného řádku T1,
   dojde k dead-locku, protože databáze nemůže provést "ON UPDATE CASCADE".

   Návrh řešení:

   Evidovat v datovém rozhraní zamknuté sloupce tabulek odkazovaných v
   REFERENCES.  Při lock_record do této evidence přidat všechny sloupce v
   odkazovaných tabulkách, které jsou z uzamykané tabulky odkazovány, pokud mají
   nastaveno ON UPDATE CASCADE (při unlock_record je opět odebrat).

   Díky tomu by bylo možné při zápisu do datového objektu zjistit, jestli není
   některý ze sloupců aktualizované tabulky v této evidenci a např. vyvolat
   výjimku a předejít tím zatuhnutí.

   Dále by bylo možné tuto informaci z datového objektu nějak vytáhnout a
   např. učinit příslušné políčko needitovatelné.

** TODO Zamrznutí aplikace při použití tlačítek s EVT_UPDATE_UI ve formulářích

   Pokud ve funkci `wx_button()' povolím navázání `EVT_UPDATE_UI' pro
   aktualizaci stavu tlačítka v závislosti na dostupnosti příkazu, dojde při
   uzavření jakéhokoliv dialogu nad otevřeným editačním formulářem (ve kterém je
   takové tlačítko použito) k zatuhnutí celé aplikace (Formulář přestane
   reagovat, celé okno je zašedlé).  Aby k tomu nedocházelo, je příslušný kód
   nyní zablokován, ale bude potřeba to nějak dořešit, aby tlačítka mohla
   dynamicky reagovat na změnu dostupnosti příkazů...

** VERIFY Upozornit na duplicitní název pojmenovaného filtru

   Při ukládání pojmenovaného filtru upozornit, že filtr se stejným jménem už
   existuje.

** VERIFY Příkaz PRINT v tiskovém menu nefunguje mimo BrowseForm

   Tiskové menu je zobrazeno pro všechny formuláře ale příkaz PRINT je ošetřen
   jen pro BrowseForm.

** VERIFY Kombinace default, computer a prefill

   Při použití prefillu při zobrazení formuláře pro nový záznam by měl mít
   computer přednost před default, pokud jsou v prefillu políčka, na kterých
   computer závisí.  Jinak má přednost default a computer se použije až během
   editace.

** FEEDBACK Zapamatovaná pozice oddělovače dualformu

   Momentálně se počíátá se stejnou velikostí okna při dalším startu aplikace.
   Např. při maximalizaci okna ale dojde k uložení pozice a při dalším startu
   je okno aplikace jinak veliké a oddělovač se zobrazí mimo...

** DONE Zkopírovat obsah buňky nefunguje s češtinou.
   CLOSED: [2017-03-02 Thu 20:54]

   Projevuje se pouze na Windowsech přes Cygwin.

** VERIFY Aktualizace políčka `data-changed' ve stavové řádce.

   Po vložení záznamu je zobrazeno, že data nejsou ok i ve formuláři, ze
   kterého byla změna provedena.

** VERIFY Zobrazování nápovědy položek menu ve stavové řádce.

   Nepodařilo se zatím zprovoznit v kontextovém menu vstupního políčka v režimu
   inline editace, v kontextovém menu vstupního políčka v ShowFormu a v
   kontextovém menu záhlaví sloupce.

** DONE Vyhledávání někdy skočí na záznam následující za hledaným.
   CLOSED: [2017-03-02 Thu 20:55]

   Popisovaný problém se běžně neprojevuje.  Například v zakázkách při
   vyhledávání podle kódu zakázky však bylo toto chování hlášeno, ale po
   restartu aplikace nešlo zreprodukovat.

** VERIFY Problém s notifikačním threadem při startu aplikace

   Při volání funkce v rámci Application.Init, která pracuje nad daty v databázi
   (např. insert_new_user nebo obecně operace nad DBConfig), hlásí notification
   thread na pozadí chybové hlášení AttributeError pro atribut connection.

*** DONE Oprava Range políček při exportu
    CLOSED: [2016-03-02 Wed 15:47]


*** DONE Opravit odkazy na sloupce tabulkových funkcí v gensqlalchemy
    CLOSED: [2017-03-02 Thu 21:38]

         class TableFunction(sql.SQLPyFunction):
             name = 'pseudotable'
             arguments = (sql.Argument('n', pytis.data.Integer()),)
             result_type = (sql.Column('x', pytis.data.Integer()),
                            sql.Column('y', pytis.data.Integer()),
                            sql.Column('z', pytis.data.Integer()),)
             multirow = True
             stability = 'immutable'
             packagenames = ()

             @staticmethod
             def pseudotable(n):
                 result = []
                 for i in range(1, n + 1):
                     for j in range(1, n + 1):
                         result.append([i, j, i * j])
                 return result


         class TableFunctionView(sql.SQLView):
             name = 'function_view'
             @classmethod
             def query(class_):
                 f = sql.t.TableFunction(4)
                 ff = sql.t.TableFunction.alias('ff')
                 return sqlalchemy.select([ff.c.x], from_obj=[f])
             depends_on = (TableFunction,)

          Řešení:

          Vyřešeno pomocí commitu: "New method `SQLFunction.from_clause' in gensqlalchemy".

*** DONE Opravit chyby v remote wrapperech
    CLOSED: [2016-08-23 Tue 16:11] DEADLINE: <2016-08-19 Fri>

    V tuto chvíli nefunguje např. otevření přílohy.

*** DONE Po ukončení IDLE spojení nelze vyskočit z formuláře
    CLOSED: [2017-03-02 Thu 21:38]

    Po ukončení spojení kvůli idle transaction na serveru nelze vyskočit z
    náhledu, protože se datové rozhraní stále snaží o akci nad spojením... Bylo
    by záhadno mít možnost daný řádkový náhled uzavřít.

*** DONE Rozumnější hláška při uzavření transakce serverem
    CLOSED: [2017-03-02 Thu 21:38]

   Bylo by zajímavé pokusit se o rozumnější podobu uživatelské hlášky, pokud
   dojde k uzavření transakce serverem.

** FEEDBACK Pokud má not null políčko prázdný číselník, nelze pokračovat
   
   Číselník může být prázdný např. i kvůli runtime_filteru.  Když potom
   uživatel do políčka vleze (např. i CHOICE jen rozklikne roletu), políčko
   už ho nepustí pryč, protože prázdná hodnota je nevalidní a jinou nelze
   vybrat.  Formulář je nutné uzavřít.


* NOVÉ VLASTNOSTI [4/29] [13%]
  :PROPERTIES:
  :COOKIE_DATA: todo recursive
  :END:

** VERIFY Optické zvýraznění změněných políček v Editformu

   V Editformu rozlišit opticky políčka, u kterých uživatel změnil hodnotu nebo
   hodnota byla změněna funkcionalitou (Computerem). Uživatel tak bude mít
   přehled, která políčka zeditoval.

** VERIFY Omezit maximální šířku okna číselníku
** TODO Nová položka v menu sloupce: Vrátit výchozí řazení
** FEEDBACK Umožnit definici hierarchie a skupin filtrů podobně jako u actions
** VERIFY Umožnit definici `editable' i na úrovni ViewSpec

   Editovatelnost záznamu je třeba kontrolovat jak před editací ve formuláři,
   tak před inline editací.  V případě needitovatelnosti by někdy bylo vhodné
   mít možnost zobrazit zprávu proč editace není přípustná.

** VERIFY Prázdná hodnota ve výběrovém políčku

   Pokud je default hodnota políčka typu CHOICE None, přidat do výběru None
   položku.

** VERIFY Ve specifikaci unique datového typu předávat datový objekt

   To by jednak umožnilo provádět validaci unique přímo jako součást validace
   datového typu (nyní to musí být řešeno až na úrovni PresentedRow) a jednak by
   bylo možné provádět validaci oproti jinému datovému objektu, než do kterého
   vkládáme - ten totiž již může být vyfiltrovaný, takže unikátnost nelze
   spolehlivě ověřit.

** TODO Extensions procedura na zavření všech oken na zásobníku oken

   Procedura zobrazí seznam oken s dotazem zda-li mají být zavřena. Výchozí text dotazu by mělo jít 
   předefinovat nastavením argumentu funkce.

** Práva [1/4] [25%]

*** TODO Rozlišit položky menu nedostupné kvůli přístupovým právům
*** VERIFY Omezení view na jednotlivé sloupce
*** DONE Správa práv přes databázi a formulář, nikoli přes specifikace
    CLOSED: [2017-03-02 Thu 21:07]

*** FEEDBACK Detailnější kontrola nad rozlišením práv při UPDATE/INSERT

     Pokud není na políčko právo UPDATE, zakázat jej i při INSERTU, ale umožnit
     některá políčka explicitně povolit (pouze pro INSERT).  Nebo také povolit
     úplně vše, nehledě na práva pro UPDATE.


** TODO Automatické doplňování

   Widget nabídky doplnění momentálně nereaguje na myš.

   Pro velké číselníky trvá select neúměrně dlouho kvůli "select count".  Přitom
   pokud výsledek selectu obsahuje více než X (např. 50) záznamů, nemá smysl
   výběr zobrazovat.  Řešením by bylo vyvolat select bez "select count" a
   provést fetch prvních maximálně X záznamů.  Potom pokud lze provést i fetch
   záznamu X+1, je možné vše zahodit.  To by mělo fungovat stejně rychle
   nezávisle na velikosti číselníku.

   V seznamu doplnění by pro číselníky s displejem bylo možné zobrazovat i druhý
   sloupec s hodnotou displeje.

** TODO Využití vyhledávacího panelu i pro složitější podmínky

   Nyní je vyhledávací panel využíván pro inkrementální vyhledávání textového
   výrazu.  Po zadání výrazu umožňuje pohub vpřed/vzad po odpovídajících
   záznamech.  Bylo by praktické mít možnost tento panel využít i pro složitější
   vyhledávací podmínky zadané přes vyhledávací formulář (jehož modální oknok by
   bylo možno po zadání podmínky skrýt).

** DONE Použití externího PS prohlížeče
   CLOSED: [2017-03-02 Thu 21:08]

** DONE Současný výběr několika řádků v řádkovém formuláři
   CLOSED: [2017-03-02 Thu 21:09]

   Práce s výběrem je nyní problematická, protože výběr je používán také k
   vysvícení aktuálního řádku.  Je třeba nejprve vymyslet, jak se to má
   chovat.  Více viz news 2006-02-27.

** FEEDBACK Rozšířit řádek po dobu inline editace víceřádkového textu
** FEEDBACK Zarovnávání, atributy a masky vstupních políček
** VERIFY Přepočítání závislých políček při výběru z ListField

   V současné době se děje jen při změně hodnoty.  Chtěli bychom ale, aby k
   přepočítání došlo při každém dvojkliku (nebo výběru pravým tlačítkem).

** TODO Pro datumová políčka umožnit display ukazující odpovídající den v týdnu
** FEEDBACK Zobrazení editovatelných/needitovatelných políček v ShowFormu
** FEEDBACK Zamezit výpočtu editovatelnosti políček v ShowFormu

   Je to zbytečné...

** TODO Zobrazení názvu aktivního filtru

   Pokud se při otevření filtračního dialogu zjistí, že podmínka aktivního
   filtru odpovídá nějakému pojmenovanému filtru, zobrazí se místo "Poslední
   aplikovaný filtr" název pojmenovaného filtru.

** FEEDBACK Důsledněji promyslet klávesové zkratky

   Např.:

   - Escape a Enter ve filtračním dialogu
   - Enter v přihlašovacím dialogu
   - Enter ve formulářích (odeslat celý formulář)?
   - Tab v tabulce (pohybuje kurzorem, ale to dělají i šipky) -- mohl vyvolat
     COMMAND_OTHER_FORM

** FEEDBACK Možnost omezit počet vrácených záznamů ve funkci dbselect

   Doplnit pro pytis.extensions.dbselect parametr "limit" pro možnost omezit
   počet hledaných řádků. Při kontrolách stačí často najít, že existuje jeden
   hledaný řádek jako chyba a není získat seznam všech řádků. (Použít agregace a
   zjistit počet řádků je por tyto účely na zápis kódu poněkud
   nepřehledné). Možná by stálo za úvahu zavést i funkci dbexists(spec, cond,
   transaction).

** TODO Upravit gensqlalchemy pro partial unique (např. pro e_bankovni_ucty)
** DONE Přepsat exports s využitím novější knihovny xlsxwriter
   CLOSED: [2016-03-02 Wed 15:47]

** FEEDBACK Zamyslet se nad omezením volání computerů a dalších callbacků

   V současnosti se computery vyvolávají při zapsání každého jednotlivého znaku
   do políčka, přičemž mnohdy je ona hodnota dokonce nevalidní a je proto
   naprosto zbytečné ty callbacky s předanou nevalidní hodnotou vůbec volat.
   Typicky třeba u číselníků nebo u datumových políček.  Nabízí se ošetřit to
   buď jen u těchto typů políček, nebo by se mohlo zvážit použití nového
   parametru, něco jako validate_immediately nebo něco takového.

** TODO Umožnit nastavit timeout dialogu s vrácením výchozí hodnoty

   Po vypršení timeoutu vrátit buď výchozí volbu nebo "Nevybráno".

** FEEDBACK Umožnit standardní label u radioboxu a checkboxu

   Label je nyní u checkboxu a radioboxu vždy součástí políčka.  Někdy může být
   ale lepší aby byl label standardně zarovnaný v layoutu formuláře jako u
   ostatních políček.  Mohlo by se to řídit např. podle 'compact'.

** FEEDBACK Skrýt prázdnou hodnotu v radioboxu pokud nemá null_display?


* SPECIFIKACE [0/6] [0%]

** FEEDBACK Dynamické určení parametrů odkazu

   Prozatím lze specifikaci odkazu předat pouze statické hodnoty.  Jak název
   odkazované specifikace, tak argument `select_row' by však bylo možné určit
   dynamicky podle obsahu aktuálního řádku pomocí funkce, která dostane aktuální
   řádek jako argument.

** TODO Callbacky před/po editaci/vložení záznamu

   Např. after_new_record, after_edit_record, before_new_record apod.

   Nyní je možné přidat kód, který se provede po vložení nového záznamu buďto do
   cleanup, nebo definovat on_new_record, a v něm nejprve zavolat výchozí
   new_record s block_on_new_record.  Jednodušší a přehlednější by bylo mít pro
   tento případ explicitní podporu.

** TODO Změny ohledně nastavení šířky sloupců/políček

   `width = 0' zakázat a všechna taková políčka vyřadit z layoutu (nejprve
   logovat jako deprecated).

   `column_width = 0' nijak speciálně neošetřovat (stejně je šířka minimálně
   taková, aby se vešel label)

** TODO V tiskovém menu umožnit definovat separátor a klávesové zkratky

** FEEDBACK Sestavování paměťového datového objektu ve třídě `Specification'

   Sestavování datových typů sloupečků pro nedatabázové datové objektu má
   několik omezení.  Například pokud je třeba určit typ číselníkového políčka
   (není to String), bude ve formuláři dána přednost takto explicitně určenému
   typu.  To znamená, že specifikovaný typ již musí mít příslušný enumerátor a
   nemůže být využito možnosti automatického přiřazení enumerátoru na základě
   specifikace `codebook'.  Řešením by bylo zrušit pravidlo o přednostním
   využití datového typu z FieldSpec před typem z DataSpec.  Je ovšem třeba
   ověřit, jestli se toho někde nevyužívá.

** FEEDBACK Kontrola práv při volání funkcí jako dbupdatemany apod
** FEEDBACK Povinný label políčka

   Label nyní může být prázdný řetězec.  Na různých místech se v tom případě
   použije id políčka namísto labelu, ale to je špatně.  Pokud chceme políčko
   ve formuláři bez labelu, měla by na to být nějaká další volba
   (např. unlabeled=True), ale label by mělo každé políčko mít.  Kvůli možné
   prázdné hodnotě by se teď např. všude, kde se používá f.label() nebo
   f.column_label() mělo použít "or f.id()", ale ne všude to je a může to vést
   k tracebacku.

* INTERNÍ ZÁLEŽITOSTI [2/4] [50%]

** FEEDBACK Přihlášení k databázi neřešit v db_operation

   Prvotní záměr byl, aby se přihlášení k databázi provedlo automaticky až když
   je to potřeba.  Potom se ale zjistilo, že je přihlášení stejně potřeba vždy
   už v brzkém stádiu inicializace aplikace, tak bylo volání db_operation
   přidáno natvrdo na potřebné místo.  Tím to ale pozbývá smyslu ponechávat v
   db_operation a stačilo by ošetření přihlášení přesunout přímo do oné části
   inicializace aplikace.  Naopak v db_operation by se hodilo ošetřit běžné
   stavy, které mohou nastat během provozu aplikace, jako např. uzavření spojení
   serverem kvůli IDLE transakci.  Také by bylo vhodné pomocí db_operation
   obalit všechna volání kódu definovaného ve specifikacích, aby už uvnitř
   specifikací, ani ve funkcích volaných ze specifikací nebylo nutné
   db_operation volat.

** VERIFY Zamezit reinicializaci všech sloupců při inline editaci buňky

   Je třeba aby editory vždy byly vytvořeny pro aktuální editovaný řádek.
   Provádět kvůli tomu reinicializaci všech sloupců při vstupu do editace
   jednotlivé buňky je zbytečné, ale prozatím to tak alespoň funguje.  Do
   budoucna by bylo vhodné editory inicializovat při vstupu do inline editace a
   po jejím ukončení je zrušit.

** DONE Nepoužívat mx.DateTime, ale Pythonový modul datetime
   CLOSED: [2017-03-02 Thu 21:18]

** FEEDBACK Mezivrstva pro práci s aktuálním selectem a kurzory

   Je třeba oddělit veškerý kód týkající se práce s aktuálním selectem,
   získáváním dat podle čísla řádků (práce s kurzorem) a cachování řádků, který
   je nyní především v ListTable, do speciální třídy (nadstavba datového
   rozhraní -- asi v modulu `presentation').  Podobné věci se dělají i v
   netabulkových formulářích a je třeba je mít na jednom místě, nezávisle na
   formulářových třídách.

** DONE Přepracování stavového řádku
   CLOSED: [2017-03-02 Thu 21:19]

   Pole definovaná aplikací (message, list-position, ...) by měla být přítomna
   automaticky.  Mělo by být možné zobrazit ikonu a tooltip.  Mělo by být možné
   definovat políčko sledující stav konfigurační volby (nebo i jiné hodnoty?).
   Je třeba myslet také na obnovení stavu při přepínání formulářů
   (`Form.restore()').


* ČIŠTĚNÍ [0/6] [0%]

** VERIFY Odstraní argumentu `key' funkcí `on_new_record()'

   Tento argument je tam patrně z historických důvodů, kdy se tak řešilo
   kopírování záznamu.  To je dnes prováděno přes `prefill', takže funkce
   `on_new_record()' arument `key' nikdy nedostane.  V některých defsech se s
   ním však stále počítá.

** VERIFY Specifikace okrajů a mezer ve formulářích

   Argument `border_style' ne pravděpodobně zcela nepoužívaný.  `gap', `space' a
   `border' by bylo lépe definovat pro celý layout globálně, než zvlášť pro
   každou `GroupSpec'.
   
** FEEDBACK Nedostupnost příkazu vs. přístupová práva

   Pokud není příkaz dostupný z důvodu nedostatečných přístupových práv, bylo by
   dobré o tom uživatele nějak informovat.  Bude to však třeba nejprve nějak
   rozlišit -- buďto pomocí návratové hodnoty funkce enabled, nebo ještě další
   funkcí pro zjištění přístupových práv.

** FEEDBACK Validace hodnot konfiguračních voleb

   Pro každou konfigurační volbu je nyní znám její datový typ, takže by nebyl
   problém do metody `Option.set_value()' přidat kontrolu, zda předaná hodnota
   skutečně odpovídá deklarovanému typu volby.
   
** FEEDBACK S groupingem pracovat jako s celým číslem

   Problém bude hlavně v defsech, kde bývá grouping často specifikován jako
   název sloupce.

** FEEDBACK Implementovat také None context pro spouštění akcí

   Specifikace kontextu akce nyní umožňuje také hodnotu None, která by měla
   zaručit, že akci nejsou předány žádné argumenty.  Toho je však zatím
   využíváno jen ve webových formulářích.  Bylo by dobré to samé doimplementovat
   i do GUI formulářů.

** TODO Zrušit všechny hvězdičkové importy
** TODO Zrušit konfigurační volby pro nastavení cest k resources

Cesty jako icons, translations apod. si pytis může zjistit sám a nemusí kvůli
tomu existovat konfigurační volby, které jsou dobré tak maximálně k tomu, aby v
tom člověk měl chybu, která se někdy těžko dohledává.


** TODO Odstranit vše co se týká inline editace

Zatím je většina kódu stále ponechána a pouze jsou zakomentovány příslušné
příkazy v commitu f2967ad1baee146cc6deaf304a94e8536e41afd3.


