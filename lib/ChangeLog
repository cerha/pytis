2005-08-22  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/dualform.py (BrowseDualForm.refresh): Refreshuj pouze
	hlavní formuláø.  Vedlej¹í je tím refreshován díky své závislosti...
	(ShowDualForm._on_idle): Nevolej po pøefiltrování `_select_form()'.

2005-08-10  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/dualform.py (SideBrowseDualForm._do_selection): Pokud
	není zaostøeno ¾ádné okno, nic si z toho nedìlej a pokraèuj normálnì.
	

	* pytis/form/list.py (BrowseForm._on_import_interactive): Vkládané
	sloupce kontroluj oproti `self._fields', nikoli `self._columns'.

2005-07-26  Pavel Hanak  <hanak@asellus.cz>

	* pytis/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_search.sorting_condition):
	O¹etøení podmínky pro zji¹tìní vzdálenosti nalezeného øádku tak,
	aby respektovala mo¾ná výskyt NULL hodnot v 'sorting' sloupcích.	

2005-07-14  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/event.py (top_level_exception): Pøednastavuj adresu
	'from'.

	* pytis/output/formatter.py (LoutFormatter._lout): Smazáno
	zapomenuté vypisování do 'lout' souboru.

2005-07-13  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/inputfield.py (CodebookField._create_widget):
	Nový atribut 'self._insert_button'.
	(CodebookField._disable): Pøedefinovaná metoda - pøidáno
	znepøístupnìní 'self._insert_button'.	
	(CodebookField._enable): Pøedefinovaná metoda - pøidáno
	zpøístupnìní 'self._insert_button'.
	
2005-07-07  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (RecordForm._on_delete_record): Oprava chyby
	v pøedání øádku do 'on_delete_record'.

	* pytis/output/formatter.py (_INTRO): O¹etøení 'landscape' módu.

2005-07-01  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/application.py (Application._check_perm): Vypu¹tìno
	podivné úvodní znepøístupnìní pro 'Permission.INSERT'.

	* pytis/data/types_.py (_check_format): Vypu¹tìn omylem zdvojený
	kód. 

2005-06-30  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._current_row): Zru¹eno.
	(_current_key, current_key): Pøesunuto do `Form'.
	(ListForm.current_row, ListForm._search_adjust_data_position)
	(ListForm.show_position, ListForm._on_edit)
	(ListForm._on_insert_line, ListForm.refresh)
	(BrowseForm._formatter_parameters, BrowseForm._on_edit_record):
	Namísto `_current_row()' pou¾ívej `_current_cell()'.
	(ListForm.is_changed): Pøejmenováno na `_is_changed'.
	(ListForm.can_line_commit, ListForm.can_line_commit): Nové metody.
	(ListForm.on_command): Neo¹etøuj zru¹ený pøíkaz
	`ListForm.COMMAND_LINE_DELETE'.
	(can_show_cell_codebook): Buï metodou instance, nikoli tøídy.
	(ListForm._on_handled_command): `row' -> `the_row'.
	(_on_delete_line): Zru¹eno.
	(ListForm._on_delete_record): Nová metoda.
	(BrowseForm._context_menu): `ListForm.COMMAND_LINE_DELETE' nahraï
	`RecordForm.COMMAND_DELETE_RECORD'.
	(BrowseForm): Callbacky CALL_EDIT_RECORD a CALL_NEW_RECORD
	pøesunuty do `RecordForm'.
	(BrowseForm.__init__): Nenastavuj zru¹ené callbacky.
	(BrowseForm._run_form, BrowseForm._redirected_name)
	(BrowseForm._on_new_record, BrowseForm._on_edit_record): Pøesunuto
	do `RecordForm'.
	(BrowseForm.on_command): Neo¹etøuj pøíkazy `COMMAND_NEW_RECORD',
	`COMMAND_NEW_RECORD_COPY' a `COMMAND_EDIT_RECORD'.
	(ListForm._on_activation, ListForm._on_alternate_activation):
	Volej callback jen pokud je vybrán nìjaký øádek.

	* pytis/form/inputfield.py (InputField.can_reset_field): Nová
	metoda.
	(Invocable.can_invoke_selection, Invocable.can_invoke_selection)
	(ListField.can_invoke_edit_form)
	(ListField.can_invoke_browse_form, ListField.can_choose_key): Nové metody.

	* pytis/form/form.py (Form.__init__): Namísto volání
	`_add_menus()' pøidávej tiskové menu pøímo zde.
	(Form._add_menus): Zru¹eno.
	(Form._menus): Zru¹eno.
	(Form._print_menu): Nová metoda.
	(Form.check_permission): Nový nepovinný argument `quiet'.
	(print_menu): Zru¹eno.
	(RecordForm._init_attributes): Aktualizace docstringu.
	(RecordForm._signal_update): Nová metoda.
	(RecordForm.current_row): Nová metoda.
	(RecordForm._current_key): Nová metoda.
	(RecordForm.current_key): Nová metoda.
	(RecordForm._on_delete_record): Nová metoda.
	(RecordForm.can_delete_record): Nová metoda.
	(RecordForm.on_command): Nová metoda.
	(LookupForm.is_searching): Pøejmenováno na `_is_searching'.
	(LookupForm._is_searching, LookupForm._is_searching): Nové metody.
	(LookupForm.can_sort): Zru¹eno.
	(EditForm.ACT_EDITFORM, EditForm.ACTIVATIONS): Zru¹eno.
	(EditForm._edit_delete): Zru¹eno.
	(EditForm._menus): Zru¹eno.
	(EditForm.on_command): Neo¹etøuj `EditForm.COMMAND_RECORD_INSERT',
	`EditForm.COMMAND_RECORD_UPDATE',
	`EditForm.COMMAND_RECORD_DELETE'.
	`EditForm.COMMAND_RECORD_COMMIT' ->`EditForm.COMMAND_COMMIT_RECORD'.
	(RecordForm.CALL_EDIT_RECORD, RecordForm.CALL_NEW_RECORD): Nové callbacky.
	(RecordForm.__init__): Nová metoda.
	(RecordForm.select_row): Nová metoda /pøesunuto z EditForm/.
	(RecordForm._find_row_by_values): Nová metoda /pøesunuto z EditForm/.
	(RecordForm._redirected_name, RecordForm._run_form) 
	(RecordForm._new_form_kwargs, LookupForm._new_form_kwargs) 
	(RecordForm._on_new_record, RecordForm._on_edit_record): Nové metody.
	(RecordForm.on_command): O¹etøuj pøíkazy
	`RecordForm.COMMAND_NEW_RECORD',
	`RecordForm.COMMAND_NEW_RECORD_COPY' a `COMMAND_EDIT_RECORD'.
	(EditForm._find_row_by_values): Zru¹eno.
	(EditForm.select_row): Zru¹eno.
	

	* pytis/form/command.py: Buï potomkem `object'.
	(_check_perm, _can_run_form, _can_insert)
	(_current_form_can_insert, _current_form_can_update)
	(_current_form_can_delete, _current_form_searching)
	(_current_form_changed, _current_field_enabled)
	(_current_field_modified, _current_field_has_selection): Zru¹eno.
	(FORM_COMMAND_MENU): Nová konstanta.
	(define_cmd): Nová dunkce.  V¹echny pøíkazy nyní definovány s její
	pomocí.  Pøíkazy `EditForm.COMMAND_NEW_RECORD',
	`EditForm.COMMAND_NEW_RECORD_COPY' a
	`EditForm.COMMAND_EDIT_RECORD' pøesunuty do tøídy `RecordForm'.
	`EditForm.COMMAND_RECORD_COMMIT'
	->`EditForm.COMMAND_COMMIT_RECORD'.

	* pytis/form/application.py (Application.OnInit): Pøidávej také
	menu pøíkazù.  Pøejmenována lokální promìnná `spec' -> `name'.
	(Application._check_perm): Nová metoda.
	(Application.can_run_form): Nová metoda.
	(Application.can_new_record): Nová metoda.
	(window_count): Zru¹eno.
	(Application.can_next_form, Application.can_prev_form) 
	(Application.can_leave_form): Nové metody.

2005-06-30  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/dialog.py (RunFormDialog._create_content):
	Po vytvoøení 'wx.Choice' zavolej je¹tì 'SetSelection' pro
	nastavení implicitní volby.	

	* pytis/form/form.py (LookupForm._on_jump): Pro získání èísla
	øádku pou¾ívej 'InputNumeric'.

2005-06-30  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._total_height): Zji¹»uj vý¹ku
	nultého øádku, ne prvního. 

	* pytis/form/screen.py (Menu.create): Vylep¹en komentáø.

	* pytis/form/command.py: Opraveny identifikátory pøíkazù
	`LookupForm.COMMAND_SEARCH_NEXT' a
	`LookupForm.COMMAND_SEARCH_PREVIOUS'.

2005-06-29  Tomas Cerha  <cerha@brailcom.org>

	* pytis/util/configuration.py
	(Configuration._Option_startup_forms.long_option): Nová volba.

	* pytis/form/application.py (Application.OnInit): Otevøi v¹echny
	formuláøe z `config.startup_forms'.
	(Application.__init__): Inicializuj `self._window_menu_item' pøed
	voláním konstruktoru pøedka.

	* pytis/form/list.py (ListForm._column_width): Nová metoda.
	(ListForm._create_grid, ListForm._on_size): Vyu¾ívej ji.

2005-06-28  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/command.py (Application.COMMAND_LEAVE_FORM): Upravena
	`enabled' funkce aby brala v potaz i formuláøe, které nejsou na
	stacku.
	
2005-06-28  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/list.py (ListForm._on_line_commit): Spou¹tìj i check funkci
	z 'ViewSpec'.

2005-06-28  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._create_grid): Neo¹etøuj
	`EVT_GRID_CELL_LEFT_CLICK'.

2005-06-21  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (Application.run_form): Pokud je
	`name' callable, pova¾uj za `name' výsledek jeho volání.

	* pytis/form/command.py (_can_run_form): Pokud je `name' callable,
	pova¾uj za `name' výsledek jeho volání.
	(_can_run_form): Pøedchozí úprava zru¹ena.
	(ListForm.COMMAND_SHOW_CELL_CODEBOOK): Nový pøíkaz.
	(BrowseForm.COMMAND_RECORD_EDIT): Pøejmenováno na
	`BrowseForm.COMMAND_EDIT_RECORD'.
	(_can_run_form): Oprava chyby z minulého commitu.

	* pytis/form/inputfield.py (CodebookField._on_codebook_insert):
	Prefill vyplòuj pouze pokud je v políèku zeditovaná hodnota.

	* pytis/form/list.py (ListForm._init_attributes): Inicializuj
	`self._selection_candidate'.
	(ListForm._select_cell): Nenastavuj výbìr zde, pouze nastav
	`self._selection_candidate'.
	(ListForm._on_idle): Pokud je nastaveno
	`self._selection_candidate', nastav výbìr, jeho barvy a zviditelni
	buòku.
	(ListForm.show_context_menu): Kosmetické úpravy.
	(BrowseForm._context_menu, ListForm.show_context_menu): Kosmetické
	úpravy.
	(ListForm.on_command): O¹etøuj
	`ListForm.COMMAND_SHOW_CELL_CODEBOOK' voláním
	`self._on_show_cell_codebook()'.
	(ListForm.can_set_grouping): Zru¹en zapomenutý print.
	(ListForm._on_show_cell_codebook)
	(ListForm.can_show_cell_codebook): Nové metody.
	(BrowseForm._context_menu): Pøidána polo¾ka pro pøíkaz
	`ListForm.COMMAND_SHOW_CELL_CODEBOOK'.  Kosmetické úpravy.
	(ListForm._on_line_commit): Kosmetické úpravy.
	(BrowseForm._context_menu): `BrowseForm.COMMAND_RECORD_EDIT' ->
	`BrowseForm.COMMAND_EDIT_RECORD'.
	(BrowseForm.on_command): `BrowseForm.COMMAND_RECORD_EDIT' ->
	`BrowseForm.COMMAND_EDIT_RECORD'.
	(ListForm._on_select_cell): Callback volej jen pokud nejsme uvnitø
	`_select_cell()'.
	(ListForm._on_context_menu): Volej callback
	`CALL_USER_INTERACTION'.

	* pytis/presentation/field.py (PresentedRow.__init__): Namísto
	koncových akcí volej `self._set_row()'.
	(PresentedRow._set_row): Nová metoda.
	(PresentedRow.set_row): Vyu¾ívej `self._set_row()'.

	* pytis/form/_grid.py (IncrementalSearch._on_kill_focus): Nastavuj
	callback pouze pokud listform stále existuje.

	* pytis/form/form.py (LookupForm.can_sort): Oprava pøeklepu.
	(Form._menus): `BrowseForm.COMMAND_RECORD_EDIT' ->
	`BrowseForm.COMMAND_EDIT_RECORD'.

2005-06-20  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._select_cell): Pøechod na sloupeèek
	provádìj pouze pokud nebyl proveden pøechod na øádek /pøi nìm¾ je
	provádìn i pøechod na sloupeèek/.  Úprava výpoètu sloupeèku.
	(ListForm._on_handled_command): Pokud má handler ménì ne¾ dva
	pozièní arguemnty, pøedávej pouze `row', nebo vùbec nic.
	(ListForm._on_handled_command): Zohledòuj `None' ve výsledku
	volání `inspect.getargspec()'.

	* pytis/form/form.py (Form.check_permission): Vracej pravdu pokud
	je dané právo alespoò k jednomu sloupeèku datového objektu.  Pouze
	pro delete vracej globální právo.
	(LookupForm.can_sort_column): Oprava sémantiky.

2005-06-17  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm.UI_EDIT_CHANGE)
	(ListForm.UI_EXISTS_CONDITION, ListForm.UI_SORTING)
	(ListForm.UI_GROUPING): Konstanty zru¹eny.
	(ListForm.can_sort_column): Nová metoda.
	(ListForm._on_label_left): `ListForm.SORTING_CYCLE_DIRECTION' ->
	`LookupForm.SORTING_CYCLE_DIRECTION'.  Nepou¾ívej argument
	`uievent_id' konstruktoru `MItem'.
	(on_ui_event): Metoda zru¹ena.
	(ListForm.is_changed): Nová metoda.
	(ListForm.can_set_grouping): Nová metoda.

	* pytis/form/form.py (Form._menus): Nepou¾ívej argument `uievent_id' konstruktoru
	`MItem'.
	(Form.on_ui_event): Metoda zru¹ena.
	(Form.guardian): Nová metoda.
	(RecordForm.UI_ACCESS_INSERT, RecordForm.UI_ACCESS_UPDATE)
	(RecordForm.UI_ACCESS_DELETE): Konstanty zru¹eny.
	(RecordForm.on_ui_event): Metoda zru¹ena.
	(LookupForm.can_sort_column): Nová metoda.
	(LookupForm.sorting, LookupForm.can_sort): Nová metoda.
	(EditForm._menus): Nepou¾ívej argument `uievent_id' konstruktoru
	`MItem'.
	(EditForm.on_ui_event, BrowsableShowForm.on_ui_event): Zru¹eno.

	* pytis/form/dualform.py (on_ui_event): Zru¹eno.
	(DualForm.active_form): Nová metoda.

	* pytis/form/application.py (Application.UI_ALWAYS_DISABLED)
	(Application.UI_OPENED_WINDOW,
	Application.UI_OPENED_MORE_WINDOWS): Konstanty zru¹eny.
	(Application.new_record): Pou¾ívej `self._current_form()' namísto
	`current_form()'.
	(on_ui_event): Metoda zru¹ena.
	(Application.window_count): Nová metoda.
	(Application.current_form): Nová metoda.
	(get_status): Upraven docstring.
	(current_form): Pouze volej `_application.current_form()'.
	(exit): Upraven docstring.

	* pytis/form/command.py (Command.__init__): Nové arguemnty
	`enabled' a `static'.
	(Command.__init__): Pøidány asserty na `handler' a
	`access_groups'.  Zjisti pøítomnost v access groups ji¾ zde a
	zapamatuj.
	(access_groups): Metoda zru¹ena
	(Command.enabled): Nová metoda.
	(invoke_command): Vyvolej pøíkaz pouze pokud je `enabled'.
	(_check_perm, _can_run_form, _can_insert, _can_insert) 
	(_can_insert, _current_form_can_update, _current_form_can_update) 
	(_current_form_can_delete, _current_form_changed) 
	(_current_form_changed, _current_field_modified): Nové funkce.
	Vyu¾ívej tyto funkce v definicích pøíkazù.

	* pytis/form/screen.py (Keymap._define_key): V assertové zprávì
	vypisuj také pøíkaz a jeho argumenty.
	(MenuBar._create_menu): Neinicializuj `self._access_groups'.
	(MenuBar.activate): Neinicializuj `self._access_groups'.
	(Menu.create): Nezji¹»uj zde `access_groups' pøíkazu, radìji
	ponech uøèení na `Command.enabled()'.
	(MItem.__init__): Zru¹en arguemnt `uievent_id'.
	(MItem._on_ui_event): Nová metoda.
	(MItem.create): Namísto volání `Application.on_ui_event()' o¹etøuj
	`wx.EVT_UPDATE_UI' pomocí `self._on_ui_event()'.
	(MItem.uievent_id): Metoda zru¹ena.

	* pytis/form/inputfield.py (InputField.UI_IS_MODIFIED)
	(InputField.UI_IS_ENABLED, ListField.UI_LIST_ITEM_SELECTED):
	Konstanty zru¹eny.
	(InputField.on_ui_event): Metoda zru¹ena.
	(InputField._menu): Nepou¾ívej argument `uievent_id' konstruktoru
	`MItem'.
	(InputField.is_enabled): Nová mentoda.
	(Invocable._menu, CodebookField._menu, ListField._menu):
	Nepou¾ívej argument `uievent_id' konstruktoru `MItem'.
	(ListField.on_ui_event): Metoda zru¹ena.
	(ListField.has_selection): Nová mentoda.


2005-06-16  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/command.py (DEFAULT_COMMAND_KEYS): 

2005-06-15  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/dualform.py (DualForm._create_form): Na konci volej
	`_set_main_form_callbacks()' a `_set_side_form_callbacks()'.
	(DualForm._set_main_form_callbacks)
	(DualForm._set_main_form_callbacks)
	(SideBrowseDualForm._create_side_form)
	(BrowseDualForm._set_main_form_callbacks)
	(ShowDualForm._set_main_form_callbacks)
	(BrowseShowDualForm._set_main_form_callbacks)
	(DescriptiveDualForm._set_side_form_callbacks): Nové metody.
	(SideBrowseDualForm._create_side_form)
	(BrowseDualForm._create_main_form)
	(ShowDualForm._create_main_form)
	(BrowseShowDualForm._create_main_form)
	(DescriptiveDualForm._create_side_form): Nastavovvování callbackù
	pøenech novám metodám.
	(DescriptiveDualForm._init_attributes): Nová metoda.
	(DescriptiveDualForm._do_selection): Nastavuj
	`self._in_mainform_selection'.
	(DescriptiveDualForm._on_side_selection): Nedìlej nic, pokud je
	nastaveno `self._in_mainform_selection'.

	* pytis/presentation/spec.py (FieldSpec.__init__): Nový argumert
	`fixed'.
	(FieldSpec.fixed): Nová metoda.

	* pytis/form/list.py (ListForm._on_size): Korekci ¹íøky kvùli
	scrollbarùm provádìj a¾ po kontrole shody nové a pùvodní velikosti.
	(ListForm._on_column_header_paint): Dedopus», aby label pøesahoval
	¹íøku sloupce.
	(ListForm._on_size): Ponech velikost fixních sloupcù nezmìnìnou.

2005-06-14  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._select_cell): Neprovádìj zde rewind.
	(ListForm._create_grid): Zru¹en hack s initiálním fetchem.

	* pytis/form/dualform.py (DualForm._initial_sash_ratio) 
	(DescriptiveDualForm._initial_sash_ratio): Nová metoda.
	(DualForm._init_attributes): Vyu¾ívej ji.

	* pytis/data/_test.py (DataEnumerator.test_values): Nová metoda.
	(DBDataDefaultClass._test_lock): Test odstaven pro momentální
	nefunkènost.
	(DBDataFetchBuffer.setUp): Pou¾ívej konfiguraèní volby namísto
	zru¹ených konstant.
	(DBDataFetchBuffer.setUp): Vytváøej je¹tì duhou tabulku s malým
	poètem øádkù.
	(_check_skip_fetch): Pøijímej datový objekt jako argument.
	(DBDataFetchBuffer.test_skip_fetch): Pøidány nové testy pracující
	s malou tabulkou.

	* pytis/data/types_.py (Type.export, Type.default_value):
	Odstranìny hrátky pøekladem hodnot sekvence podle `_SPECIAL_VALUES'.
	(Enumerator.values): Nová metoda.
	(DataEnumerator.values): Nová metoda.
	(Value.__init__): Pou¾ívej `super()' k volání metody pøedka.

	* pytis/data/dbdata.py (DBDataPostgreSQL._PgBuffer.fetch):
	Kosmetické úpravy.
	(DBDataPostgreSQL._PgBuffer.fetch): Loguj jen èíslo øádku, ne
	data.
	(DBDataPostgreSQL._PgBuffer.correction): Kosmetické úpravy.
	Pøidán komentáø.
	(DBDataPostgreSQL.__init__): Zru¹en nepou¾itý atribut
	`_cache_size'.  Pøidány nové atributy zrcadlící konfiguraèní
	promìnné (výkonnostní mikro-optimalizace, leè dle profileru
	pomìrnì úèinná).
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Pou¾ívej
	`self._db_encoding', namísto `config.db_encoding'.
	(DBDataPostgreSQL.fetchone): Pou¾ívej
	`self._pg_initial_fetch_size' namísto `config.initial_fetch_size'
	a `self._pg_fetch_size' namísto `config.fetch_size'.
	Odstranìna prazvlá¹tní korekce '-2' pøi urèování poètu
	pøeskoèených øádek pøi zpìtném chodu.
	(PostgreSQLStandardBindingHandler._pdbb_get_type): Postgresový typ
	`float8' mapuj na `Float'.

	* pytis/form/_grid.py (ListTable._retrieve_row): Vypoèti skip tak,
	aby mohl být fetch proveden skuteènì ve smìru pohybu, ne v¾dy
	dopøedu.
	Pøed prvním fetchem provádìj je¹tì fetch prvního øádku dopøedu,
	aby byl naplnìn buffer.
	(ListTable._retrieve_row.fetch): Provádìj fetch ve smìru `direction'.
	(ListTable._retrieve_row): Provádìj také fetch ve smìru pohybu.
	(ListTable._panic): Opravena indentace.

2005-06-13  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/field.py (PresentedRow): Buï potomkem `object'.

	* pytis/form/dualform.py (SideBrowseDualForm._do_selection):
	importuj `_grid'.  `ListForm.IncrementalSearch' ->
	`_grid.IncrementalSearch'.
	

	* pytis/form/form.py (LookupForm._init_select): Upravena logovací
	hlá¹ka.

	* pytis/form/inputfield.py: Zru¹en docstring.
	(EnumerationField._values): Oprava pøeklepu.
	(EnumerationField._set_value): Vracej výsledek volání
	`SetStringSelection()'.
	(ChoiceField._create_ctrl): Nepøedávej konstruktoru zbyteèné
	argumenty.
	(ColorSelectionField._set_value): Vracej výsledek volání metody
	pøedka.

	* pytis/form/list.py (ListForm._create_grid): Kosmetické úpravy.
	Hack o¹etøující vyøazený buffer pøi zpìtném naèítání øádkù gridu.
	(ListForm._update_grid, ListForm._update_grid): Nový/vrácený argument
	`data_init'.  Popkud je True, inicializuj datový select, jinak
	volej `rewind()'.
	(ListForm.refresh): Neinicializuj select zde, ale nastavuj
	`data_init' pøi volání `_update_grid()'.
	(ListForm.focus): Neprovádìj refresh.

	* pytis/form/application.py (Application.restore): Pokud je
	aktivní formuláø `Refreshable', volej `refresh()'.

2005-06-10  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/form.py (LookupForm._init_select): Obaluj databázovou
	operaci do `db_operation'.

	* pytis/form/list.py (ListForm._create_grid): Neobaluj volání
	`_init_select()' do `db_operation'.
	(ListForm._create_recreate_grid): Pøejmenováno na
	`_update_label_colors()'.
	(ListForm._recreate_grid): Pøejmenováno na `_update_grid()'.
	(ListForm._create_grid, ListForm._update_grid):
	`_create_recreate_grid' -> `_update_label_colors()'.
	(ListForm._on_insert_line, ListForm._on_line_rollback):
	`_recreate_grid()' -> `_update_grid()'.  Nepøedávej zru¹ený
	argument `data_init'.
	(ListForm.refresh): Neobaluj volání `_init_select()' do
	`db_operation'.  `_create_recreate_grid' ->
	`_update_label_colors()'.

	* pytis/presentation/spec.py (GroupSpec.__init__): Odstranìn
	zapomenutý argument `box'.

2005-06-09  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/dualform.py (SideBrowseDualForm._do_selection): Volej
	`Show()' formuláøe bez arguemntu `refresh'.

	* pytis/form/__init__.py: Importuj `_grid' a aktualizuj jeho
	jmenný prostor. 

	* pytis/form/form.py (PopupForm._popup_frame): Zru¹en argument
	`title'.
	(PopupForm._popup_frame): Ke stylu dialogu pøidej také
	`wx.DEFAULT_DIALOG_STYLE'.
	(PopupForm.run): Volej na `frame' `SetTitle()' a `SetClientSize()'.
	(_finish_top_level_sizer): Zru¹eno.
	(Form._create_form): Nevolej `_finish_top_level_sizer()'.
	(Form._finish_top_level_sizer): Zru¹eno.
	(PopupEditForm._finish_top_level_sizer): Zru¹eno.

	* pytis/form/list.py (ListForm._init_attributes): Atribut
	`self._size' zru¹en.
	(ListForm._create_form_parts): Neukládej `self._size'.
	(ListForm._create_grid, ListForm._on_size): Nepou¾ívej
	`self._size'.
	(ListForm._on_size): Zru¹eno `SPECIAL_WX_CORRECTION'.  Zpøehlednìn
	a zjednodu¹en cyklus pøepoèítávání sloupcù.  I pøi pøedèasném
	opu¹tìní volej `Skip()'.  Nenastavuj velikost gridu explicitnì.
	Nepøipoèítávaj velikosti scrollbarù.
	(ListForm._recreate_grid): Neprovádìj
	`self.SetSize(self.GetSize())'.
	(ListForm.total_width): Zru¹eno
	(ListForm.total_height): Pøejmenováno na `_total_height()'.
	(CodebookForm_DEFAULT_WINDOW_HEIGHT): Zvý¹eno na 500.
	(CodebookForm.__init__): Nepøedávej `title' volání
	`_popup_frame()'.  Nastavuj velikost formuláøe, ne rodièovského
	okna/framu.
	(_InputFieldCellEditor, _ListTable, IncrementalSearch.__init__):
	Pøesunuto do nového modulu `_grid'.
	(_create_grid): Zru¹eny nepou¾ité argumenty `data_init',
	`inserted_row_number' a `inserted_row'.
	(ListForm._create_grid): `self._ListTable' -> `_grid.ListTable'.
	`_InputFieldCellEditor' -> `_grid.InputFieldCellEditor'.
	(ListForm._recreate_grid): Zru¹en arguemnt `data_init'.
	Neprovádìj zde inicializaci dat.
	(ListForm._select_cell): Nepøepisuj si `col'.
	(ListForm.on_data_change): Update docstringu.
	(ListForm._on_incremental_search): `self.IncrementalSearch' -> `_grid.IncrementalSearch'.
	(ListForm.refresh): Inicializuj sde datový select.
	(ListForm.Show): Nevolej refresh().
	(ListForm._select_cell): Volej `MakeCellVisible()' dvakrát...

2005-06-13  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/dualform.py (DualForm._init_attributes): Nastavuj
	'sash_ratio' podle specifikace.

	* pytis/presentation/spec.py (DualSpec.__init__):
	Nový argument 'sash_ratio'.
	(DualSpec.sash_ratio): Nová metoda.

2005-06-08  Tomas Cerha  <cerha@brailcom.org>

	* pytis/data/data.py (Data.row_key): Pou¾ívej "list comprehension"
	namísto 'map()'.

	* pytis/form/application.py (Application.OnInit): V debug re¾imu
	vypisuj verzi wxWidgets.

	* pytis/form/dualform.py (ExtInfoDualForm): Pøejmenováno na
	`BrowseShowDualForm'.
	(DescriptiveDualForm): `ExtInfoDualForm' -> `BrowseShowDualForm'.

	* pytis/form/list.py (total_height): Zji»uj vý¹ku øádku jen pokud
	je zobrazen alespoò jeden øádek.

	* pytis/presentation/spec.py (BorderStyle, Orientation, Button) 
	(GroupSpec, LayoutSpec, ViewSpec, DualSpec, Editable) 
	(SelectionType, Color, TextFormat, FieldStyle, PostProcess) 
	(TextFilter, Computer, RefSpec, FieldSpec): Buï potomkem `object'.
	(Spec): Tøída zru¹ena.
	(SelectionType): Upraveny docstringy.
	(SelectionType.CODEBOOK): Nová konstanta.
	(FieldSpec.__init__): Upraven docstring.

2005-06-07  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (Window.resize): Namísto `OnSize(event)'
	volej prostì `SetSize(size)'.

	* pytis/form/dualform.py (DualForm.__init__): Wx callback
	`EVT_SIZE' o¹etøuj pomocí `self._on_size' a `EVT_SET_FOCUS' pomocí
	`self._on_focus'.
	(DualForm._on_size): Nová metoda.
	(DualForm..OnSize): Zru¹eno.
	(DualForm._init_attributes): `self._sash_ratio' nastav na 0.5.
	(DualForm._create_form): `OnSashChanged' -> `_on_sash_changed'.
	(DualForm._sash_position): Neoèekávej None v `self._sash_ratio'.
	(DualForm._on_size_hook): Zru¹eno.
	(DualForm.OnSashChanged): Pøejmenováno na `_on_sash_changed'.
	(DualForm.OnSize): Pøejmenováno na `_on_size'.  V¾dy nakonec volej
	'Skip()'.
	(ShowDualForm._sash_position): Nepou¾ívej nikdy `self._sash_ratio'.
	(ShowDualForm._on_size_hook): Zru¹eno.
	(ExtInfoDualForm): Nová tøída.
	(DescriptiveDualForm): Buï jejím potomkem.
	(DescriptiveDualForm._sash_position)
	(DescriptiveDualForm._on_size_hook, DescriptiveDualForm.refresh)
	(DescriptiveDualForm._create_main_form): Zru¹eno.

	* pytis/form/form.py
	(EditForm._find_row_by_values): Nová metoda.
	(EditForm.size): Doplnìn docstring.
	(EditForm.set_scrollbars):  Kosmetické úpravy.
	(select_row): Argument `key' pøejmenován na `position'.  Umo¾nìno
	pou¾ití slovníku hodnot jako `position'.
	(EditForm._find_row_by_values): Nová metoda.
	(ShowForm._init_attributes): Wx callback
	`EVT_SIZE' o¹etøuj pomocí `self._on_size'.
	(ShowForm._on_size): Nová metoda.
	(ShowForm.OnSize): Zru¹eno.

	* pytis/form/dialog.py (InputDialog.__init__): Pøijímej klíèové
	argumenty 'report' a 'report_format'.
	(FileDialog.__init__): Výchozí hodnota argumentu `wildcards'
	nastavena tak, aby byly zobrazeny v¹echny soubory.

	* pytis/form/command.py (BrowseForm.COMMAND_IMPORT_INTERACTIVE):
	Nový pøíkaz. 
	(DEFAULT_COMMAND_KEYS): Pøiøaï mu klávesu.

	* pytis/form/list.py (BrowseForm.on_command): O¹etøuj
	`COMMAND_IMPORT_INTERACTIVE' voláním
	`self._on_import_interactive()'.
	(BrowseForm._on_import_interactive): Nová metoda.
	(BrowseForm._on_new_record): Upravena chybová hlá¹ka.
	(ListForm.__init__): Wx callback `EVT_SIZE' o¹etøuj pomocí
	`self._on_size'.
	(ListForm.OnSize): Zru¹eno.
	(ListForm.SetSize): Pøejmenováno na `_on_size()'.  Transformováno
	na event handler.  Na konci volej `event.Skip().

2005-06-06  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (_select_cell): Eliminuj násobná volání
	`SetGridCursor()', `GetGridCursorCol()' a `GetGridCursorRow()'.
	(BrowseForm._PrintResolver._Spec.body) 
	(BrowseForm._PrintResolver._Spec.doc_header) 
	(BrowseForm._PrintResolver._Spec.doc_footer) 
	(BrowseForm._PrintResolver._Spec.coding): Akcepruj klíèový
	argument `variant'.

2005-06-03  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (InputField.validate): Pøejímej
	(InputField._value): Nová metoda.
	(InputField._is_valid): Nová metoda.
	(DateField._on_invoke_selection): Pou¾ívej `self._value()'.
	Pou¾ívej pøímo metody `value' a `self._type' a ne oklikou pøes
	vytváøení nové instance typu `Date'.
	(CodebookField._on_change_hook): Vyu¾ívej `self._value()'.
	Pødávej metodì `get()' enumerátoru Pythonovou hodnotu, ne stringovou.
	(CodebookField._on_invoke_selection): Vyu¾ívej `self._value()'.
	(CodebookField._on_codebook_insert): Vyu¾ívej `self._is_valid()'.

	**kwargs a pøedávej je metodì `validate()' datového typu.

	* pytis/form/form.py (RecordForm._on_editability_change): Nech»
	metoda pøijímá dva arguemnty.
	(EditForm._on_editability_change): Pøejmenován argument.

2005-06-02  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/form.py (EditForm._field_change): 
	Pøejmenováno na `_on_field_edit()'.
	(EditForm._create_form): `_field_change()' -> `_on_field_edit()'.

	* pytis/form/dualform.py (SideBrowseDualForm._create_side_form):
	Ukládej vazební sloupce do atributù.  Zapamatuj si typ vazebního
	sloupce v side_formu.
	(SideBrowseDualForm._do_selection): Vyu¾ívej tìchto atributù.

	* pytis/presentation/field.py (_finalize): Pøejmenováno na
	`_resolve_dependencies()'.  Zru¹en argument `invoke_callbacks'.
	Oznaèování dirty políèek provádìj zde.
	(PresentedRow.__setitem__): Namísto `_finalize()' pou¾ívej
	`_resolve_dependencies()' a pøenech mu také oznaèování dirty
	políèek.
	(PresentedRow._recompute_editability): Kosmetické úpravy.
	(PresentedRow._recompute_codebook_runtime_filter): Pøejmenováno na
	`_notify_runtime_filter_change()'.
	(PresentedRow.__setitem__): `_recompute_codebook_runtime_filter'
	-> `_notify_runtime_filter_change()'.
	(PresentedRow.set_row, PresentedRow.listfield_choose)
	(PresentedRow.__init__): : `_finalize()' ->
	`_resolve_dependencies()'.
	(PresentedRow._resolve_dependencies): Oznam zmìnu runtime
	codebookù je¹tì pøed pøepoèítáváním editovatelnosti.

2005-06-01  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/_test.py: Opraveny importy.  Instance
	 datových typù nezískávej pøes `.make()'.

	* pytis/presentation/field.py (PresentedRow.__init__): Argumenty
	`enable_field_callback' a `disable_field_callback' nahrazeny
	jediným `editability_change_callback'.
	(PresentedRow.__init__): Pøidány v¹emo¾né asserty na argumenty.
	Inicializuj cache vypoètených virtuálních hodnot `self._virtual'.
	Vyu¾ívej `_finalize()'.
	(PresentedRow._init_row.genval): Promìnná `id' pøejmenována na
	`key'.
	(PresentedRow.__getitem__): Dopoèítávej dopoèítávané hodnoty pøímo
	zde.  Cachuj vypoèené hodnoty virtuálních sloupcù.  Pokud dojde ke
	zmìnì hodnoty, volej change_callback ihned po dopoèítání nové
	hodnoty.
	(_invoke_callbacks, _needs_recomputation, _compute)
	(_recompute_dependencies): Zru¹eno.
	(PresentedRow._finalize): Nová metoda.
	(PresentedRow._recompute_editability): Namísto `id' pou¾ívej
	promìnnou `key'.
	(PresentedRow._compute_editability): Ukládej vypoøtenou hodnotu do
	`self._editable' a nuluj "dirty" pøíznak.
	(PresentedRow._recompute_codebook_runtime_filter): Kosmetické
	úpravy.
	(PresentedRow.row): Nesna¾ se zde øe¹it, co sem nepatøí.  Hodnotu
	získávej pøes pøístup ke slovníku /__getitem__/.
	(PresentedRow.format): Nesna¾ se zde øe¹it, co sem nepatøí.
	Hodnotu získávej pøes pøístup ke slovníku /__getitem__/.
	(PresentedRow.field_changed): Kosmetická úprava.
	(PresentedRow.editable): Neøe¹ zde co je nyní v
	`_compute_editability'.
	(PresentedRow.listfield_choose): Vyu¾ívej `_finalize()'.
	(PresentedRow.__setitem__): Vyu¾ívej `_finalize()'.
	(PresentedRow.set_row): Vyu¾ívej `_finalize()'.

	* pytis/form/form.py (RecordForm._set_row): Respektuj zmìnu
	argumentù `PresentedRow'.
	(RecordForm._on_row_change, EditForm._on_row_change):
	Pøejmenováno na `_on_field_change'.
	(RecordForm._on_field_enable, RecordForm._on_field_disable)
	(EditForm._on_field_enable, EditForm._on_field_disable): Zru¹eno.
	(RecordForm._on_editability_change)
	(EditForm._on_editability_change): Nové metody.
	():

2005-05-31  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (CodebookField._on_invoke_selection):
	Pøedávej øádek jako slovník s value_column jako klíè.

	* pytis/form/list.py (select_row): Umo¾ni pøedat øádek také jako
	slovník.

2005-05-30  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/field.py (PresentedRow.__setitem__):
	Kontroluj typ nastavované hodnoty.

	* pytis/form/application.py
	(Application._WINDOW_MENU_TITLE): Pou¾ij `&' pro klávesovou
	zkratku.
	(Application.OnInit): Vynech v menu oken pøíkazy pro manipulaci s
	okny.
	(Application._window_menu): Zru¹eno.
	(Application._update_window_menu): Nepou¾ívej
	`self._window_menu()'.  Pøidávej do titulku èíslo formuláøe,
	fungující také jako klávesová zkratka.  Popis formuláøe uvádìj
	pouze pokud nejde o BrowseForm.

	* pytis/form/dualform.py (DualForm._DESCR,
	DescriptiveDualForm._DESCR): Nové konstanty.

	* pytis/form/form.py (Form._menus, EditForm._menus): Pøidány pøíkazy pro
	manipulaci s okny.
	(Form.descr): Pokud `self._DESCR' není None, vracej jeho hodnotu.
	(EditForm._validate): Neprovádìj kontrolu datového typu hodnot v
	row zde.
	(ShowForm): Nová konstanta.

2005-05-30  Tomas Cerha  <cerha@brailcom.orWg>

	* pytis/form/dualform.py (DualForm._DESCR) 
	(DescriptiveDualForm._DESCR): Nové konstanty.

	* pytis/form/list.py (_post_selection_hook): O¹etøuj
	`DataAccessException' pøi zji¹»ování hodnoty displeje.

2005-05-26  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/spec.py (FieldSpec.__init__): Nové argumenty
	`allow_codebook_insert', `codebook_insert_spec'.
	(FieldSpec.allow_codebook_insert) 
	(FieldSpec.allow_codebook_insert): Nové metody.

	* pytis/form/inputfield.py (InputField._validation_error_handler):
	Zru¹eno.
	(InputField.validate): Zapomeò na `_validation_error_handler'.
	(TextField._create_ctrl): Vý¹ka políèka lehce zvìt¹ena.  Volej
	také `self.SetSize()'.
	(Invocable._create_widget): Nastavuj tlaèítku tooltip.
	(Invocable._create_widget): Mezeru v sizeru vytváøej zleva.
	Nastavuj `wx.FIXED_MINSIZE' pøi vkládání do sizeru.
	(Invocable._create_button): Namísto `SetSize()' pou¾ij
	`SetMinSize()'.
	(CodebookField._create_widget): Pokud bylo ve specifikaci povoleno
	`allow_codebook_insert', vytvoø také pøidávací tlaèítko.  Nastavuj
	`wx.FIXED_MINSIZE' pøi vkládání do sizeru.
	(CodebookField._validation_error_handler): Zru¹eno.
	(CodebookField._on_codebook_insert): Nová metoda.
	(CodebookField._create_widget): Nech» je tlaèítko pro pøidávání
	záznamù pøeskakováno pøi prùchodu formuláøem.

	* pytis/form/list.py (_post_selection_hook): Pokud nejsi
	zaostøeným oknem, nic neprovádìj.

2005-05-25  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/field.py (PresentedRow._Column.__init__):
	Zru¹en argument separator.
	(PresentedRow._process_fieldspec): Nepøedávej `separator'.
	(PresentedRow.__setitem__): Pøidán zatím zakomentovaný assert na
	typ nastavované hodnoty.

	* pytis/presentation/spec.py (ViewSpec.__init__): Kosmetická úprava.
	(FieldSpec.__init__): Zru¹en argument `separator'.
	(FieldSpec.separator): Metoda zru¹ena.
	(CodeBookSpec): Tøída zru¹ena.
	(FieldSpec.__init__): Povol pouze øetìzec jako argument `codebook'.

	* pytis/form/inputfield.py (InputField.create): Enumerátor zkoumej
	jak pro typ `String', tak `Number'.
	(CodebookField._maxlen): Pokud dojde k `AttributeError', vracej None.
	(CodebookField._create_widget): Zru¹eny hacky kvùli kompatibilitì
	se starou definicí `codebook'.
	(CodebookField._on_invoke_selection)
	(CodebookField._validation_error_handler): Respektuj to.

	* pytis/form/list.py (ListForm._ListTable.GetColLabelValue):
	Zru¹eno.
	(ListForm._on_column_header_paint.triangle): Nová metoda.
	(_InputFieldCellEditor.BeginEdit): Nezkou¹ej
	`control.SetInsertionPoint()'
	(ListForm._create_grid): Nastav callback `wx.EVT_PAINT' na
	`self._on_column_header_paint()'.
	(ListForm._ListTable.column_id): Nová metoda.
	(ListForm._ListTable.column_label): Nová metoda.
	(ListForm._SELECTION_CALLBACK_DALAY): Pøejmenováno na
	`_SELECTION_CALLBACK_DELAY'.
	(ListForm._select_cell): `_SELECTION_CALLBACK_DALAY' ->
	`_SELECTION_CALLBACK_DELAY'
	(ListForm._post_selection_hook): Nová metoda.
	(ListForm._on_idle): Volej ji.

2005-05-24  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/command.py (DEFAULT_COMMAND_KEYS): Pøehozeny klávesy
	pøíkazù `Application.COMMAND_NEXT_FORM' a
	`Application.COMMAND_PREV_FORM'.

	* pytis/form/application.py (Application.OnInit): Pøehozeno poøadí
	pøíkazù v menu oken.
	(Application._add_window_menu_item)
	(Application._remove_window_menu_item)
	(Application._check_window_menu_item): Metody zru¹eny.
	(Application._update_window_menu): Nová metoda.
	(Application.run_form): Namísto `self._add_window_menu_item()'
	pou¾ívej `self._update_window_menu()'.
	(Application.leave_form): Namísto `self._remove_window_menu_item()'
	pou¾ívej `self._update_window_menu()'.
	(Application.restore): Namísto `self._check_window_menu_item()'
	pou¾ívej `self._update_window_menu()'.
	(Application.on_ui_event): Opravena podmínka pro `UI_OPENED_WINDOW'.

	* pytis/output/resolver.py (OutputResolver.output_parameter):
	Pøebírej klíèové argumenty a pøedávej je metodì `get()'.

	* pytis/form/inputfield.py (CodebookField._on_invoke_selection):
	Hodnotu argumentu `select_row' pøedávej jako tuple.

	* pytis/data/_test.py (Module): Nastav implicitní kódování na
	'iso-8859-2' voláním `sys.setdefaultencoding()'.
	(Color): Nový test.
	(Enumeration): Zru¹eno.
	(Enumerator): Pøejmenováno na `DataEnumerator'.
	(DataEnumerator.test_get): Nový test.
	(FixedEnumerator): Nový test.
	(Sequence): Zru¹eno.
	(Date.test_validation): Netestuj dvouciferný rok jako validní hodnotu.
	(Boolean.test_values): Zru¹eno.

	* pytis/data/types_.py (Type.__cmp__): Porovnávej
	`self._enumerator', nikoliv `self._enumeration'.
	(Color._VALIDATION_REGEX): Oprava.

	* pytis/util/util.py (direct_public_members): Testuj tøídu pomocí
	`isinstance()' Pou¾ívej "list comprehension" namísto `map()' a
	`filter()'.
	(XStack.__init__): Vyu¾ívej `super()' k volání pøedka.
	(XStack.push): Pøidávej prvek za právì aktivní prvek, ne na konec.
	(XStack.pop): Vyu¾ívej `super()' k volání pøedka.
	(XStack.remove): Aktivuj následující, resp. pøedchozí prvek, ne
	vrcholový prvek.

	* pytis/util/test.py (prefix_test): Pou¾ívej "list comprehension"
	namísto `map()' a `filter()'.

	* pytis/presentation/spec.py (CodebookSpec.__init__): Oprava chyby.

2005-05-23  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/spec.py (CodebookSpec): Nová tøída.
	(CodeBookSpec): Buï potomkem `CodebookSpec'.
	(FieldSpec.__init__): Aktualizace docstringu.
	(FieldSpec.__init__): Nový argument `display_size'.
	(FieldSpec.display_size): Nová metoda.
	(FieldSpec.__init__): Povol také øetìzec jako argument `codebook'.

	* pytis/form/dialog.py (RunFormDialog._CODEBOOK_FORM) 
	(RunFormDialog.__init__): `CodeBook' -> `CodebookForm'.

	* pytis/form/list.py (_on_incremental_search): Zapomeò na typ
	`pytis.data.Codebook'.
	(CodeBook): Pøejmenováno na `CodebookForm'.
	(CodebookForm.__init__, CodebookForm._init_attributes) 
	(CodebookForm.on_command): `CodeBook' -> `CodebookForm'.

	* pytis/form/inputfield.py (CodeBookField): Pøejmenováno na
	`CodebookField'.
	(InputField.create): `CodeBookField' ->	`CodebookField'.
	(InputField._init_ctrl): Kosmetické úpravy.
	(EnumerationField): Aktualizace docstringu.
	(Invocable): Aktualizace docstringu.
	(CodebookField): Aktualizace docstringu.
	(CodebookField._create_widget): Specifikaci èíselníku získávej
	pøes resolver zde, pokud je self.spec().codebook() øetìzec.  Ulo¾
	ji do `self._cb_spec' a název do `self._cb_name'.
	(CodebookField._on_invoke_selection): Pou¾ívej `self._cb_spec'.
	(CodebookField._validation_error_handler): Pou¾ívej
	`self._cb_spec' a `self._cb_name'.
	(CodebookField._on_invoke_selection): `CodeBook' -> `CodebookForm'.

2005-05-23  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (EditForm.print_menu): Odstranìno.

2005-05-23  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (Application.leave_form): Neloguj
	ukonèení dialogu.

	* pytis/form/screen.py (wx_text_view): Drobná oprava.

2005-05-19  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (wx_text_view): Odhaduj velikost okna i pro
	WIKI formát ze zdrojového textu.

	* pytis/data/__init__.py: Neimportuj `xtypes'.  Aktualizuj jmenný
	prostor modulu `types_'.

	* pytis/data/_test.py (Boolean.test_values): Oèekávej vnitøní
	hodnoty, nikoli u¾ivatelské. 
	(Boolean.test_noncmp): Porovnávej s typem `String', ne `Enumeration'.
	(Codebook): Zru¹eno.
	(Enumerator): Nový test.

	* pytis/data/types_.py (Type.VM_NULL_VALUE): Nová konstanta.
	(Type._VALIDATION_MESSAGES): Pøidána zpráva pro `VM_NULL_VALUE'.
	(Type.__init__): Nový argument `enumerator'.
	(Type._complete): Zru¹eno.
	(Type.__cmp__): Porovnávej také enumerátory.
	(Type.__getattr__): Nevolej `self._complete()'.
	(Type._check_constraints): Pokud je value None a typ není "NOT
	NULL", vracej True bez dal¹ích kontrol.  Pokud je definován
	enumerátor, kontroluj hodnotu jeho prostøednictvím.
	(Type.enumerator): Nová metoda.
	(Type.constraints): Zru¹eno.
	(MutableType): Tøída zru¹ena.
	(Enumeration): Tøída zru¹ena.
	(Boolean): Buï rovnou potomkem `Type' s vyu¾itím `enumerator'.
	(FixedEnumeration): Tøída zru¹ena.
	(Enumerator, FixedEnumerator, MutableEnumerator, DataEnumerator): Nové tøídy.
	(Sequence): Tøída zru¹ena.
	(_Value.__cmp__): Pokud dojde na porovnávání hodnot, pou¾ij
	`cmp()', ne `compare_objects()'.
	(Boolean.__init__): Pøedávej argument `not_null'.

	* pytis/data/dbdata.py (DBDataPostgreSQL._pg_codebook_cache):
	Zru¹eno.
	(DBDataPostgreSQL._pg_query): Nevytváøej `_pg_codebook_cache'.
	(DBDataPostgreSQL._pg_create_make_row_template): Odstranìno
	zpracování typù `Codebook' a `Sequence'.  `DateTime' a `Time'
	zpracovávej spoleènì.  Neøe¹ `icount', je nyní v¾dy 1.
	(DBDataPostgreSQL._pg_validate_codebook): Metoda zru¹ena.
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Neoèekávej `icount'
	v `self._pg_make_row_template'.  Zapomeò na typy typy `Codebook' a
	`Sequence'.  `DateTime' a `Time' zpracovávej spoleènì.
	(DBDataPostgreSQL._pg_value): Namísto `Enumeration' pracuj s `Boolean'.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Zru¹eny v¹echny hacky se zpracováním `Codebook' a `Sequence'.
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql.relop):
	Zapomeò na typy typ `Codebook'.

	* pytis/presentation/field.py (PresentedRow._process_fieldspec):
	Pracuj s enumerátorem, ne pøímo s typem.
	(PresentedRow.__str__): Volej metodu pøedka, pokud je¹tì
	neexistuje `self._row'.
	(PresentedRow._recompute_codebook_runtime_filter): Pracuj s
	enumerátorem, ne pøímo s typem.

	* pytis/form/inputfield.py (InputField.create): Èíselníková
	políèka rozpoznávej podle enumerátoru, ne podle typu.
	(EnumerationField._values): Pracuj s enumerátorem.
	(EnumerationField._set_value, EnumerationField.get_value): Zru¹en
	neaktuální docstring.
	(ListBoxField._create_ctrl): Kosmetické úpravy.
	(CodeBookField._on_change_hook):
	(CodeBookField._on_invoke_selection): Zru¹en hack s validací podle
	typu sloupce èíselníku.  Pracuj s enumerátorem.  Nepou¾ívej
	`returned_column'.
	(CodeBookField._validation_error_handler): Validuj typ pøímo, ne
	pøes sloupce èíselníku.
	(CodeBookField._validation_error_handler): Nepou¾ívej
	`returned_column'.

	* pytis/form/list.py (CodeBook.__init__): O¹etøuj Double-click
	voláním `_on_activation()'.
	(CodeBook._init_attributes, CodeBook._init_attributes): Argument
	`ctype' nahrazen argumentem `condition'.
	(BrowseForm._context_menu): Kosmetické úpravy.

	* pytis/form/application.py (Application.run_form): Po uzavøení
	formuláøe volej `busy_cursor(False)'.
	(Application.run_dialog): Po uzavøení dialogu volej
	`busy_cursor(False)'.

	* pytis/data/xtypes.py: Removed.

	* pytis/data/data.py (MemData.select): `cond' není nikdy None.
	Vracej poèet nalezených øádek.

2005-05-19  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (Form.print_menu): Zohledni vrácení 'None' z
	'print_spec'. 

2005-05-18  Pavel Hanak  <hanak@asellus.cz>

	* pytis/util/configuration.py (Configuration._Option_doc_dir):
	Nová konfiguraèní volba.

2005-05-13  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (wx_text_view): Pou¾ívej `lcg.WikiNode', ne
	pøímo `lcg.wiki.Parser'.
	(wx_text_view): Výstup Wiki parseru také obaluj HTML kódem.

	* pytis/form/dialog.py (GenericDialog._create_dialog_elements):
	Vkládej report do sizeru bez okrajù.

2005-05-12  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/spec.py (TextFormat.PLAIN): Nová tøída.

	* pytis/form/screen.py (wx_text_view): Nová funkce.
	(InfoWindow._create_content): Vyu¾ívej ji.
	(wx_html_view): Nová funkce.
	(HtmlWindow._create_content): Vyu¾ívej ji.
	(InfoWindow.__init__): Nepøedáven argument `title' volání
	`_create_content()'.
	(InfoWindow.__init__): Nový argument `format'.  Vytváøej widget
	pøímo zde voláním `wx_text_view()'.  Pøidány asserty na typy arguemntù.
	(InfoWindow._create_content): Metoda zru¹ena.
	(HtmlWindow): Tøída zru¹ena.
	(wx_html_view): Funkce zru¹ena.
	(wx_text_view): Nový argument `format'.  Vytváøej odpovídající
	widget podle tohoto argumentu.

	* pytis/form/dialog.py (GenericDialog.__init__): Nové arguemnty
	`report' a `html'.
	(GenericDialog._create_dialog): Pokud byl specifikován `report',
	pøidej do dialogu pøíslu¹ná prvek.
	(Message.__init__, MultiQuestion.__init__, Question.__init__):
	Nové arguemnty `report' a `html'.
	(GenericDialog.__init__): Argument 'html' nahrazen argumentem
	'report_format'.
	(GenericDialog._create_dialog_elements): Pøedávaj `report_format'
	volání `wx_text_view()'.  Nepou¾ívej ji¾ `wx_html_view()'.
	(Message.__init__, MultiQuestion.__init__, Question.__init__):
	Argument 'html' nahrazen argumentem 'report_format'.

	* pytis/util/log.py (SyslogLogger.FACILITY_LOCAL0) 
	(SyslogLogger.FACILITY_LOCAL1, SyslogLogger.FACILITY_LOCAL2)
	(SyslogLogger.FACILITY_LOCAL3, SyslogLogger.FACILITY_LOCAL4)
	(SyslogLogger.FACILITY_LOCAL5, SyslogLogger.FACILITY_LOCAL6)
	(SyslogLogger.FACILITY_LOCAL7): Nové konstanty.
	(SyslogLogger.__init__): Pøidán assert na hodnotu `facility'.
	
2005-05-11  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (EditForm._commit_form): Cleanup provádìj
	pouze pokud projde 'check'.

2005-05-10  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/form/list.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/form/screen.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/form/output.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/remote/data.py (_DataChangesWatcher._watcher)
	(_DataChangesWatcher.register_callback)
	(_DataChangesWatcher.unregister_callback): Volání 
	`log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/util/util.py (copy_stream): Volání
	`log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/util/resolver.py (FileResolver._get_module): Odstranìna
	debug hlá¹ka.

	* pytis/output/formatter.py (LoutFormatter._resolve)
	(LoutFormatter._lout, LoutFormatter._lout, LoutFormatter._lout):
	Volání `log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/form/form.py (Form._on_parent_close): Volání
	`log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/form/event.py (wx_callback.process_event): Volání
	`log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/data/dbdata.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/util/configuration.py
	(Configuration._Option_application_name.default): Vracej `Pytis'.
	(Configuration._Option_log_logger.default_string): Vracej hodnotu
	korespondující s `default' hodnotou.

	* pytis/form/application.py (Application.OnInit): titulek aplikace
	získávej pøímo z konfiguraèní volby `application_name', nikoliv ze
	specifikace.
	(set_status): Volání `log(DEBUG, ...)'  uvozeno podmínkou 
	`if __debug__: ...'.
	(Application.OnInit, Application.run_dialog): Zmìnìna logovací
	priorita.

	* pytis/util/log.py (StreamLogger): Buï potomkem `object'.
	(StreamLogger.__init__): Pou¾ívej `super()'.
	(SyslogLogger._prefix): Loguj také jméno u¾ivatele.
	(LoggingInterface.__call__): Kosmetické úpravy.
	(SyslogLogger.__init__): Nová metoda.
	(SyslogLogger._send): Zakóduj pøedanou `facility' do `priority'.

2005-05-09  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (HtmlWindow, InfoWindow): Nové tøídy.

	* pytis/form/application.py (Application.wx_frame): Nová metoda.
	(wx_frame): Nová funkce.

2005-05-06  Pavel Hanak  <hanak@asellus.cz>

	* pytis/data/dbdata.py
	(DBDataPostgreSQL._pg_create_make_row_template): Doplò o testování
	instance 'Time'.
	(DBDataPostgreSQL._pg_make_row_from_raw_data): O¹etøi typ 'Time'.

2005-05-06  Petr Malivanek  <malivanek@asellus.cz>

	* pytis/presentation/spec.py, pytis/form/screen.py (init_colors):
	Doplnìní konstant:
        BLANCHETALMOND:(255, 235, 205),
        LIGHTYELLOW:(255, 255, 224),
        PEACHPUFF2:(238, 203, 173),
        SLATEGRAY2:(185, 211, 238),
        LIGHTSALMON:(255, 160, 122)	

2005-05-05  Tomas Cerha  <cerha@brailcom.org>

	* pytis/data/xtypes.py (Codebook.validity_condition): Povol None,
	jako hodnotu vrácenou providerem.

	* pytis/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_get_table_type): Nový
	argument `type_kwargs'.  Pøedávej jej volání
	`self._pdbb_get_type()'
	(PostgreSQLStandardBindingHandler._pdbb_get_type): Nový argument
	`type_kwargs'.  Nech» je argument `ctype' nepovninný.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Nepodporuj ji¾ specifikaci typu ani enumerátoru obsahující tuple.
	Pøedávej klíèové argumenty z DBColumnBinding do volání
	`self._pdbb_get_table_type()' a konstruktorùm typù.
	(DBBinding.__init__): Pøidán assert na typ argumentu `id'.
	(DBColumnBinding.__init__): Nový argument `**kwargs'.
	Zdokumentovány zmìny v chápání argumentù `enumerator' a `type_'.
	Pøidány asserty an datové typy v¹ech arguemntù.
	(DBColumnBinding.kwargs): Nová metoda. 

2005-05-02  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (CodeBookField._on_invoke_selection):
	`begin_search' condition fixed.

	* pytis/form/list.py (CodeBook._on_idle): `begin_search' handling
	simplified.  Report invalid `begin_search' argument.

	* pytis/form/search.py: Import everything from `pytis.presentation'.

