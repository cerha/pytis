2005-05-19  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (wx_text_view): Odhaduj velikost okna i pro
	WIKI formát ze zdrojového textu.

	* pytis/data/__init__.py: Neimportuj `xtypes'.  Aktualizuj jmenný
	prostor modulu `types_'.

	* pytis/data/_test.py (Boolean.test_values): Oèekávej vnitøní
	hodnoty, nikoli u¾ivatelské. 
	(Boolean.test_noncmp): Porovnávej s typem `String', ne `Enumeration'.
	(Codebook): Zru¹eno.
	(Enumerator): Nový test.

	* pytis/data/types_.py (Type.VM_NULL_VALUE): Nová konstanta.
	(Type._VALIDATION_MESSAGES): Pøidána zpráva pro `VM_NULL_VALUE'.
	(Type.__init__): Nový argument `enumerator'.
	(Type._complete): Zru¹eno.
	(Type.__cmp__): Porovnávej také enumerátory.
	(Type.__getattr__): Nevolej `self._complete()'.
	(Type._check_constraints): Pokud je value None a typ není "NOT
	NULL", vracej True bez dal¹ích kontrol.  Pokud je definován
	enumerátor, kontroluj hodnotu jeho prostøednictvím.
	(Type.enumerator): Nová metoda.
	(Type.constraints): Zru¹eno.
	(MutableType): Tøída zru¹ena.
	(Enumeration): Tøída zru¹ena.
	(Boolean): Buï rovnou potomkem `Type' s vyu¾itím `enumerator'.
	(FixedEnumeration): Tøída zru¹ena.
	(Enumerator, FixedEnumerator, MutableEnumerator, DataEnumerator): Nové tøídy.
	(Sequence): Tøída zru¹ena.
	(_Value.__cmp__): Pokud dojde na porovnávání hodnot, pou¾ij
	`cmp()', ne `compare_objects()'.
	(Boolean.__init__): Pøedávej argument `not_null'.

	* pytis/data/dbdata.py (DBDataPostgreSQL._pg_codebook_cache):
	Zru¹eno.
	(DBDataPostgreSQL._pg_query): Nevytváøej `_pg_codebook_cache'.
	(DBDataPostgreSQL._pg_create_make_row_template): Odstranìno
	zpracování typù `Codebook' a `Sequence'.  `DateTime' a `Time'
	zpracovávej spoleènì.  Neøe¹ `icount', je nyní v¾dy 1.
	(DBDataPostgreSQL._pg_validate_codebook): Metoda zru¹ena.
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Neoèekávej `icount'
	v `self._pg_make_row_template'.  Zapomeò na typy typy `Codebook' a
	`Sequence'.  `DateTime' a `Time' zpracovávej spoleènì.
	(DBDataPostgreSQL._pg_value): Namísto `Enumeration' pracuj s `Boolean'.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Zru¹eny v¹echny hacky se zpracováním `Codebook' a `Sequence'.
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql.relop):
	Zapomeò na typy typ `Codebook'.

	* pytis/presentation/field.py (PresentedRow._process_fieldspec):
	Pracuj s enumerátorem, ne pøímo s typem.
	(PresentedRow.__str__): Volej metodu pøedka, pokud je¹tì
	neexistuje `self._row'.
	(PresentedRow._recompute_codebook_runtime_filter): Pracuj s
	enumerátorem, ne pøímo s typem.

	* pytis/form/inputfield.py (InputField.create): Èíselníková
	políèka rozpoznávej podle enumerátoru, ne podle typu.
	(EnumerationField._values): Pracuj s enumerátorem.
	(EnumerationField._set_value, EnumerationField.get_value): Zru¹en
	neaktuální docstring.
	(ListBoxField._create_ctrl): Kosmetické úpravy.
	(CodeBookField._on_change_hook):
	(CodeBookField._on_invoke_selection): Zru¹en hack s validací podle
	typu sloupce èíselníku.  Pracuj s enumerátorem.  Nepou¾ívej
	`returned_column'.
	(CodeBookField._validation_error_handler): Validuj typ pøímo, ne
	pøes sloupce èíselníku.
	(CodeBookField._validation_error_handler): Nepou¾ívej
	`returned_column'.

	* pytis/form/list.py (CodeBook.__init__): O¹etøuj Double-click
	voláním `_on_activation()'.
	(CodeBook._init_attributes, CodeBook._init_attributes): Argument
	`ctype' nahrazen argumentem `condition'.
	(BrowseForm._context_menu): Kosmetické úpravy.

	* pytis/form/application.py (Application.run_form): Po uzavøení
	formuláøe volej `busy_cursor(False)'.
	(Application.run_dialog): Po uzavøení dialogu volej
	`busy_cursor(False)'.

	* pytis/data/xtypes.py: Removed.

	* pytis/data/data.py (MemData.select): `cond' není nikdy None.
	Vracej poèet nalezených øádek.

2005-05-19  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (Form.print_menu): Zohledni vrácení 'None' z
	'print_spec'. 

2005-05-18  Pavel Hanak  <hanak@asellus.cz>

	* pytis/util/configuration.py (Configuration._Option_doc_dir):
	Nová konfiguraèní volba.

2005-05-13  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (wx_text_view): Pou¾ívej `lcg.WikiNode', ne
	pøímo `lcg.wiki.Parser'.
	(wx_text_view): Výstup Wiki parseru také obaluj HTML kódem.

	* pytis/form/dialog.py (GenericDialog._create_dialog_elements):
	Vkládej report do sizeru bez okrajù.

2005-05-12  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/spec.py (TextFormat.PLAIN): Nová tøída.

	* pytis/form/screen.py (wx_text_view): Nová funkce.
	(InfoWindow._create_content): Vyu¾ívej ji.
	(wx_html_view): Nová funkce.
	(HtmlWindow._create_content): Vyu¾ívej ji.
	(InfoWindow.__init__): Nepøedáven argument `title' volání
	`_create_content()'.
	(InfoWindow.__init__): Nový argument `format'.  Vytváøej widget
	pøímo zde voláním `wx_text_view()'.  Pøidány asserty na typy arguemntù.
	(InfoWindow._create_content): Metoda zru¹ena.
	(HtmlWindow): Tøída zru¹ena.
	(wx_html_view): Funkce zru¹ena.
	(wx_text_view): Nový argument `format'.  Vytváøej odpovídající
	widget podle tohoto argumentu.

	* pytis/form/dialog.py (GenericDialog.__init__): Nové arguemnty
	`report' a `html'.
	(GenericDialog._create_dialog): Pokud byl specifikován `report',
	pøidej do dialogu pøíslu¹ná prvek.
	(Message.__init__, MultiQuestion.__init__, Question.__init__):
	Nové arguemnty `report' a `html'.
	(GenericDialog.__init__): Argument 'html' nahrazen argumentem
	'report_format'.
	(GenericDialog._create_dialog_elements): Pøedávaj `report_format'
	volání `wx_text_view()'.  Nepou¾ívej ji¾ `wx_html_view()'.
	(Message.__init__, MultiQuestion.__init__, Question.__init__):
	Argument 'html' nahrazen argumentem 'report_format'.

	* pytis/util/log.py (SyslogLogger.FACILITY_LOCAL0) 
	(SyslogLogger.FACILITY_LOCAL1, SyslogLogger.FACILITY_LOCAL2)
	(SyslogLogger.FACILITY_LOCAL3, SyslogLogger.FACILITY_LOCAL4)
	(SyslogLogger.FACILITY_LOCAL5, SyslogLogger.FACILITY_LOCAL6)
	(SyslogLogger.FACILITY_LOCAL7): Nové konstanty.
	(SyslogLogger.__init__): Pøidán assert na hodnotu `facility'.
	
2005-05-11  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (EditForm._commit_form): Cleanup provádìj
	pouze pokud projde 'check'.

2005-05-10  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/form/list.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/form/screen.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/form/output.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/remote/data.py (_DataChangesWatcher._watcher)
	(_DataChangesWatcher.register_callback)
	(_DataChangesWatcher.unregister_callback): Volání 
	`log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/util/util.py (copy_stream): Volání
	`log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/util/resolver.py (FileResolver._get_module): Odstranìna
	debug hlá¹ka.

	* pytis/output/formatter.py (LoutFormatter._resolve)
	(LoutFormatter._lout, LoutFormatter._lout, LoutFormatter._lout):
	Volání `log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/form/form.py (Form._on_parent_close): Volání
	`log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/form/event.py (wx_callback.process_event): Volání
	`log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/data/dbdata.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/util/configuration.py
	(Configuration._Option_application_name.default): Vracej `Pytis'.
	(Configuration._Option_log_logger.default_string): Vracej hodnotu
	korespondující s `default' hodnotou.

	* pytis/form/application.py (Application.OnInit): titulek aplikace
	získávej pøímo z konfiguraèní volby `application_name', nikoliv ze
	specifikace.
	(set_status): Volání `log(DEBUG, ...)'  uvozeno podmínkou 
	`if __debug__: ...'.
	(Application.OnInit, Application.run_dialog): Zmìnìna logovací
	priorita.

	* pytis/util/log.py (StreamLogger): Buï potomkem `object'.
	(StreamLogger.__init__): Pou¾ívej `super()'.
	(SyslogLogger._prefix): Loguj také jméno u¾ivatele.
	(LoggingInterface.__call__): Kosmetické úpravy.
	(SyslogLogger.__init__): Nová metoda.
	(SyslogLogger._send): Zakóduj pøedanou `facility' do `priority'.

2005-05-09  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (HtmlWindow, InfoWindow): Nové tøídy.

	* pytis/form/application.py (Application.wx_frame): Nová metoda.
	(wx_frame): Nová funkce.

2005-05-06  Pavel Hanak  <hanak@asellus.cz>

	* pytis/data/dbdata.py
	(DBDataPostgreSQL._pg_create_make_row_template): Doplò o testování
	instance 'Time'.
	(DBDataPostgreSQL._pg_make_row_from_raw_data): O¹etøi typ 'Time'.

2005-05-06  Petr Malivanek  <malivanek@asellus.cz>

	* pytis/presentation/spec.py, pytis/form/screen.py (init_colors):
	Doplnìní konstant:
        BLANCHETALMOND:(255, 235, 205),
        LIGHTYELLOW:(255, 255, 224),
        PEACHPUFF2:(238, 203, 173),
        SLATEGRAY2:(185, 211, 238),
        LIGHTSALMON:(255, 160, 122)	

2005-05-05  Tomas Cerha  <cerha@brailcom.org>

	* pytis/data/xtypes.py (Codebook.validity_condition): Povol None,
	jako hodnotu vrácenou providerem.

	* pytis/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_get_table_type): Nový
	argument `type_kwargs'.  Pøedávej jej volání
	`self._pdbb_get_type()'
	(PostgreSQLStandardBindingHandler._pdbb_get_type): Nový argument
	`type_kwargs'.  Nech» je argument `ctype' nepovninný.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Nepodporuj ji¾ specifikaci typu ani enumerátoru obsahující tuple.
	Pøedávej klíèové argumenty z DBColumnBinding do volání
	`self._pdbb_get_table_type()' a konstruktorùm typù.
	(DBBinding.__init__): Pøidán assert na typ argumentu `id'.
	(DBColumnBinding.__init__): Nový argument `**kwargs'.
	Zdokumentovány zmìny v chápání argumentù `enumerator' a `type_'.
	Pøidány asserty an datové typy v¹ech arguemntù.
	(DBColumnBinding.kwargs): Nová metoda. 

2005-05-02  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (CodeBookField._on_invoke_selection):
	`begin_search' condition fixed.

	* pytis/form/list.py (CodeBook._on_idle): `begin_search' handling
	simplified.  Report invalid `begin_search' argument.

	* pytis/form/search.py: Import everything from `pytis.presentation'.

