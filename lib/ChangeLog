2007-02-02  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (FileField._INVOKE_TITLE): Text fixed.
	(FileField.get_value): Convert the `Buffer' instance to its
	`buffer'.
	(FileField._set_value): Convert a `buffer' to a `Buffer' instance.
	(_formatted_size): Method removed.
	(_save_file): Method removed.
	(FileField._cmd_load): Use `Buffer' methods to load the file.  Let
	the validation to the `Buffer' class and just catch the exceptions
	here.
	(FileField._cmd_save): Use `Buffer.save()' instead of
	`self._save_file'.
	(ImageField._bitmap): Create the thumbnail here using the
	`PIL.Image' method instead of using `Image.thumbnail()'.
	(ImageField._cmd_view): Use `PIL.Image' methods instead of using
	`Image.format()'.
	(ImageField._cmd_view): Use `Buffer.save()' instead of
	`self._save_file'.  Don't invoke forgotten `ls -l' here.

	* pytis/form/form.py (RecordForm._find_row_by_key): Don't expect
	`key' to be `None'.  Don't convert it to a tuple.
	(RecordForm.select_row): Convert the key to a tuple before calling
	`_find_row_by_key'.  Pass `columns' to `data.row()'.
	(PopupForm._on_frame_close): Test whether `self' is alive.

	* pytis/data/types_.py (Binary): Docstring updated.
	(Binary.Buffer): New class.
	(Binary._validate): Wrap the `buffer' into a `Buffer' instance.
	(Binary._export): Turn a `Buffer' instance into a `buffer'.
	(Binary.format_byte_size): New method.
	(Binary._format_maxlen): Use it.
	(Image): Docstring updated.
	(Image._image, Image.thumbnail, Image.format): Methods removed.
	(Image._SUPPORTED_FORMATS): Costant removed.
	(Image.Buffer): New class.

2007-01-31  Tomas Cerha  <cerha@brailcom.org>

	* pytis/data/types_.py (Limited._format_maxlen): New method.
	(Limited._check_maxlen): Use it.
	(Binary._format_maxlen): New method.
	(Binary._VM_MAXLEN_EXCEEDED_MSG): Don't presume units here.

2007-01-31  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/list.py (ListForm._can_edit): Added forgotten `return'. 

2007-01-31  Tomas Cerha  <cerha@brailcom.org>

	* pytis/data/types_.py (Limited): New class.
	(String): Derive from `Limited'.
	(String.VM_STRING_TOO_LONG, String._VM_STRING_TOO_LONG_MSG):
	Constants removed. 
	(String.__init__, String.__cmp__, String.maxlen)
	(String._check_constraints, String._check_maxlen): Methods removed.
	(String._VM_MAXLEN_EXCEEDED_MSG): New constant.
	(Binary): Derive from `Limited'.
	(Binary._VM_MAXLEN_EXCEEDED_MSG): New constant.
	(Image): Derive also from `Big'.

	* pytis/form/form.py (RecordForm._find_row_by_values.find_row):
	Pass `columns' to `data.select()'.
	(LookupForm._select_columns): New method.
	(LookupForm._init_select): Pass `columns' to `data.select()'.

	* pytis/form/list.py (ListForm._select_columns): New method.

	* pytis/form/application.py (Application.OnInit): Use
	`has_access', not `self._can_run_form' to test spec validity.
	(Application._can_run_form): Don't care about dual forms here.
	Ignore resolver errors here.
	(Application._can_new_record): Ignore resolver errors here.
	(has_access): If the name is a dual spec name containing `::',
	split it and check the perms of both parts.  Don't ignore resover
	errors here.
	(has_access): Docstring updated.

	* pytis/util/util.py (Pipe.read): Pass `size' to `lfunction' as a
	keyword argument.

2007-01-26  Milan Zamazal  <pdm@brailcom.org>

	* pytis/data/types_.py (Big, Large): New types.
	(_Value.__unicode__): Don't insert big values.

2007-01-26  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (Module): Added assert to require a
	fallback label for non-system icons.

	* pytis/form/form.py (TitledForm._create_title_bar): Pass also
	label to "Show description" button.

2007-01-25  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/search.py (SFSDialog._create_button): Use
	`wx_button()'.
	(SFSDialog._FIELD_HEIGHT): Set to 26.

	* pytis/form/inputfield.py (Invocable._create_button)
	(ImageField._create_ctrl): Use `wx_button()'.

	* pytis/form/screen.py (get_icon): New arguments `type' and `size'.
	(wx_button): New method.

	* pytis/util/resolver.py (Resolver._call_spec): Method removed.
	(Resolver._get_spec): Don't use `_call_spec'.
	
	* pytis/form/list.py (BrowseForm._PrintResolver._Spec.__init__):
	New constructor.
	(BrowseForm._PrintResolver._Spec.body)
	(BrowseForm._PrintResolver._Spec.doc_header)
	(BrowseForm._PrintResolver._Spec.doc_footer)
	(BrowseForm._PrintResolver._Spec.coding): Make the `resolver'
	argument optional.
	(BrowseForm._PrintResolver._Spec.body): Use `self._resolver'
	instead the one given by the argument.
	(BrowseForm._PrintResolver._get_module): Pass `self' to
	`BrowseForm._PrintResolver._Spec' constructor.
	(BrowseForm._PrintResolver._get_instance): New method.
	(BrowseForm._cmd_print): Consider also None as valid `print_spec'
	value since this is returned by the new `Specification' class.

	* pytis/form/form.py (EditForm._on_field_edit): Don't operate on
	`self._row' if it is None.
	(TitledForm._on_show_description): Add a heading to the
	description text.
	(TitledForm._create_title_bar): Use `wx_button()'.  Don't use the
	description as button tooltip string.  Always create the
	description button, but disable it when no description is
	available...

2007-01-24  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/dualform.py (_create_view_spec): Don't consider the
	`DualSpec' case.
	(DualForm.title): Return the `BindingSpec' title.
	(help_name): Method removed.
	(SideBrowseDualForm.title): Method removed.
	(SideBrowseDualForm._create_side_form): Don't pass `title' and
	`side_columns'.  Use `self._main_name' and `self._side_name'.
	(BrowseDualForm): Docstring updated.
	(BrowseDualForm._create_main_form): Use `self._main_name'.
	(BrowseDualForm._set_main_form_callbacks): Don't set
	`BrowseForm.CALL_NEW_RECORD'.
	(BrowseDualForm._new_record_hook): Method removed.
	(ShowDualForm._create_main_form)
	(BrowseShowDualForm._create_side_form): Use `self._main_name' and
	`self._side_name'.
	(DescriptiveDualForm.title): New method.

	* pytis/form/application.py (Application._can_run_form): Don't
	consider the `DualSpec' case.

	* pytis/form/form.py (Form._cmd_help): Don't use `help_name()'.
	(Form.help_name): Method removed.
	(RecordForm.CALL_NEW_RECORD): Constant removed.

	* pytis/form/list.py (SideBrowseForm._init_attributes): Removed
	argument `title'.
	(title): Method removed.

	* pytis/presentation/spec.py (BindingSpec.__init__): Docstring updated.
	(DualSpec): Class removed.

2007-01-23  Tomas Cerha  <cerha@brailcom.org>

	* pytis/data/types_.py (Image): New class.

	* pytis/form/commands_.py (Module): New command
	`ImageField.COMMAND_VIEW'.

	* pytis/form/inputfield.py (InputField.create): Use `ImageField'
	for the `Image' type.
	(InputField._px_size): Argument `ctrl' removed.
	(TextField._create_ctrl): Pass size to the `wx.TextCtrl'
	constructor instead of calling `SetSize()' and `SetMinSize()'.
	(Invocable._create_widget): Don't pass height to
	`_create_button()'.
	(Invocable._button_size): New method.
	(Invocable._create_button, ColorSelectionField._create_button):
	Use it.
	(CodebookField._create_widget): Pass size to the `wx.TextCtrl'
	constructor instead of calling `SetSize()'.
	(CodebookField._create_widget): Don't pass `height' to
	`_create_button()'.
	(FileField._create_ctrl): Pass size to the `wx.TextCtrl'
	constructor instead of calling `SetSize()' and `SetMinSize()'.
	(FileField._button_size): New method.
	(FileField._set_value): Don't set the displayed text, jus call
	`_on_set_value()' here.
	(FileField._on_set_value): New method.
	(FileField._formatted_size): New method.
	(FileField._save_file): New method.
	(FileField._cmd_save): Use it.
	(ImageField): New class.
	(FileField._cmd_load): Validate the file immediately and ignore it
	if not valid.

	* pytis/form/screen.py (get_icon): Use `wx.BitmapFromImage()'
	instead of `wx.Image.ConvertToBitmap()'.

	* pytis/util/configuration.py
	(Configuration._Option_image_viewer): New option.

2007-01-22  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/spec.py (ViewSpec.__init__): Allow a sequence
	of functions as `check'.  Convert a single function to a one-item
	tuple.
	(ViewSpec.check): Docstring updated.

	* pytis/form/form.py (RecordForm._check_record): Process `check'
	as a sequence of functions.

2007-01-19  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._can_edit): New method.

	* pytis/data/access.py (RestrictedMemData): Added docstring.
	Inheritance order swapped.
	(RestrictedMemData.__init__): Use super.  Pass all arguments as
	keywords to parent constructor.

	* pytis/form/inputfield.py (Invocable._create_button):
	Generalized.  New arguments `label', `icon', `width'.  Don't set
	the tooltip here.
	(Invocable._create_widget): Pass the new arguments to
	`_create_button'.
	(ColorSelectionField._create_button): Accept the new arguemnts.
	(CodebookField._create_widget): Use `_create_button' also for
	creating the codebook insert button.
	(FileField._last_save_dir, FileField._last_load_dir): New
	constants.
	(FileField._set_value): Improved file size formatting.
	(FileField._cmd_load, FileField._cmd_save): Set and save the
	default directory.

2007-01-18  Milan Zamazal  <pdm@brailcom.org>

	* pytis/data/data.py (MemData.__init__): Accept and propagate
	kwargs.

2007-01-18  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py
	(GenericCodebookField._run_codebook_form): Expect `False' as a
	possible `run_form()' return value.

	* pytis/web/form.py (LayoutForm._export_field): Unset `name' for
	disabled fields.

	* pytis/form/configui.py (_ConfigData.__init__): Use `super()' to
	call the parent constructor.

2007-01-17  Milan Zamazal  <pdm@brailcom.org>

	* pytis/data/postgresql.py (PostgreSQLConnector._pg_query):
	Logging locking simplified.

2007-01-17  Milan Zamazal  <pdm@brailcom.org>
	
	* pytis/data: Use new locking functions.
	
	* pytis/output/formatter.py (LoutFormatter._lout): Use new locking
	functions.

	* pytis/util/util.py (with_lock, with_locks): New functions.

2007-01-16  Milan Zamazal  <pdm@brailcom.org>

	* pytis/data/postgresql.py (PostgreSQLConnector._pg_query): When
	calling the logging command, avoid duplicate locking resulting in
	deadlock.

2007-01-16  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (InputField._on_set_focus): Only
	validate the previous field if it is from the same form.
	(Invocable._INVOKE_TITLE, Invocable._INVOKE_HELP)
	(Invocable._INVOKE_ICON): New constants.
	(Invocable._INVOKE_SELECTION_MENU_HELP)
	(Invocable._INVOKE_SELECTION_MENU_TITLE): Constants removed.
	(_call_next_method): Method removed.
	(Invocable._create_widget): Use `super()' instead of
	`_call_next_method()'.
	(Invocable._create_widget): `_INVOKE_SELECTION_MENU_TITLE' ->
	`_INVOKE_TITLE'.
	(Invocable._create_button): Use `wx.BitmapButton' when
	`self._INVOKE_ICON' is defined.
	(Invocable._disable, Invocable._enable): Use `super()' instead of
	`_call_next_method()'.
	(Invocable._menu): `_INVOKE_SELECTION_MENU_TITLE' ->
	`_INVOKE_TITLE'.  Use `super()' to get the parent class menu, not
	hardcoded `TextField' as the parent.
	(DateField._INVOKE_SELECTION_MENU_TITLE): -> `_INVOKE_TITLE'
	(DateField._INVOKE_SELECTION_MENU_HELP): -> `_INVOKE_HELP'
	(CodebookField._on_codebook_insert): Don't return anything.
	(ColorSelectionField._INVOKE_SELECTION_MENU_TITLE): ->
	`_INVOKE_TITLE'
	(ColorSelectionField._INVOKE_SELECTION_MENU_HELP): ->
	`_INVOKE_HELP'
	(CodebookField._INVOKE_SELECTION_MENU_TITLE): -> `_INVOKE_TITLE'
	(CodebookField._INVOKE_SELECTION_MENU_HELP): -> `_INVOKE_HELP'
	(CodebookField._create_widget): Use `super()' to create the base
	widget.  Use a 'new-record' icon instead of the plus sign on the
	codebook insertion button.
	(CodebookField._menu): Use `super()' to get the base menu.
	(FileField): Derive also from `Invocable'.
	(FileField._INVOKE_TITLE, FileField._INVOKE_HELP) 
	(FileField._INVOKE_ICON): New constants.
	(FileField._on_invoke_selection): New method.
	(FileField._menu): Use `Invocable's super class menu as base menu.

	* pytis/form/screen.py
	(get_icon): New function.
	(MItem.create): Use it.
	(MItem.__init__): Docstring updated.

	* pytis/form/commands_.py (DEFAULT_KEYMAP): Added keys for
	`FileField.COMMAND_CLEAR'.

	* pytis/web/__init__.py: Import `dialog'.

	* pytis/web/form.py (Form._valid_prefill): Don't omit key columns.
	(EditForm.export): Just print the identifier if the corresponding
	field does not exist.

	* pytis/web/dialog.py: New module.

	* pytis/data/types_.py (DateTime._check_format): Added regexps for
	`%p' format.

2007-01-15  Milan Zamazal  <pdm@brailcom.org>

	* pytis/data: New database API merged in.

2007-01-15  Milan Zamazal  <pdm@brailcom.org>

	* pytis/data/dbdata.py (DBConnectionPool.put_back): Use the right
	exception name when accessing the pool.

2007-01-15  Milan Zamazal  <pdm@brailcom.org>

	* pytis/form/application.py (has_access): Use
	default_access_groups instead of class_access_groups.

2007-01-15  Milan Zamazal  <pdm@brailcom.org>
	
	* pytis/util/caching.py (LimitedCache.__setitem__): Don't cache
	data in LimitedCache if the limit is 0.

2007-01-12  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/spec.py (Action.__init__): Docstring typo fix.

	* pytis/presentation/field.py (PresentedRow._init_row): Fixed bug
	in prefill initialization.

2007-01-11  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/dualform.py (DualForm.select_row): Pass the return
	value of the main form's method.

	* pytis/form/list.py (ListForm._select_row): Return `True' on
	success, `False' otherwise.
	(ListForm.select_row): Pass the return value of the
	parent class's method. 

	* pytis/form/form.py (RecordForm._on_new_record): Don't run
	callback `CALL_NEW_RECORD'.
	(RecordForm.select_row): Return `True' on success, `False' otherwise.
	(EditForm._select_row): Return `True'.
	(BrowsableShowForm._select_row): Pass the return value of the
	parent class's method.

2007-01-09  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/form.py (RecordForm._init_attributes): Docstring
	updated.

	* pytis/presentation/field.py (PresentedRow._init_row): Create a
	copy of the `prefill' dict with all values as new
	`pytis.data.Value' instances.  Use the same values regardless if
	`row' was None or not.
	(PresentedRow.__init__): Docstring updated.

2007-01-05  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/field.py (PresentedRow.display): Try to use
	columns own display prior to using CbComputer's display.

	* pytis/form/inputfield.py (InputField._on_set_focus): Validate
	last focused field only if it has the same parent -- is from the
	same form.
	(CodebookField._on_codebook_insert): Use `new_record' instead of
	`run_form'.

2007-01-04  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (Application._cmd_run_form): Removed
	hack for backwards compatibility of arguments.

2007-01-03  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/spec.py (FieldSpec.__init__): New argument
	`nocopy'.
	(FieldSpec.nocopy): New method.

	* pytis/form/form.py (RecordForm._row_copy_prefill): Also exclude
	computed fields which depend on key columns and fields with the
	`nocopy' flag.

2006-12-29  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/form.py (LookupForm._init_attributes): Removed
	argument `indicate_filter'.  Don't initialize
	`_lf_initial_condition'.
	(LookupForm._current_condition): New method.
	(LookupForm._init_select): Use it.
	(LookupForm._filter): Argument `condition' removed.
	(LookupForm._cmd_filter): Use `_lf_condition' instead of
	`_lf_initial_condition'.  Don't pass any arguments to `_filter'.
	(LookupForm._cmd_unfilter): Don't pass any arguments to `_filter'.
	(LookupForm.condition): Use `_current_condition' instead of
	`_lf_condition'.

	* pytis/form/list.py (CodebookForm._init_attributes): Don't
	process the `condition' argument here, leave it for parent class.
	(ListForm._update_label_colors): Don't use the `_indicate_filter'
	flag.  Indicate filter when `_lf_filter' is not None.
	(ListForm._filter): Removed
	(ListForm._find_row_by_values): Use `_current_condition' instead
	of `_lf_condition'.
	(ListForm._refresh): Recognize key `filter' for the `reset'
	argument.  Don't recognize `condition' and `filter_flag'.  Modify
	`_lf_filter', not `_lf_condition'.
	(ListForm._cmd_sort): Don't reset `condition'.
	(ListForm._cmd_autofilter): Use `_current_condition' instead of
	`_lf_condition'.
	(BrowseForm._formatter_parameters): Use `_current_condition'
	instead of `_lf_condition'.
	(FilteredBrowseForm.filter): Reset `filter', not `condition'.
	Reinitialize `_lf_condition', not `_lf_initial_condition'.

2006-12-28  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/spec.py (Specification._create_data_spec):
	Added assertion to disable setting `access_rights' for a `MemData'
	data object.

	* ChangeLog.3: New file.

	* ChangeLog: Records prior to 2006-12-13 saved to `ChangeLog.3'.

	* pytis/form/dualform.py (DualForm.help_name): Condition for
	adding the `-dual' suffix fixed.

	* pytis/form/inputfield.py (EnumerationField._choices): Set only
	the relevant `FieldSpec' attributes for the fake `PresentedRow'.

	* pytis/util/configuration.py
	(Configuration._Option_auto_reload_defs.default): Option removed.

	* pytis/util/resolver.py (Resolver.__init__): Ignore configuration
	option `auto_reload_defs'.  Always cache modules.
	(Resolver): Docstring updated.

2006-12-27  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/_grid.py (IncrementalSearch._exit): Call
	`self._set_row' when `self._listform' is alive.

2006-12-23  Tomas Cerha  <cerha@brailcom.org>

	* pytis/data/types_.py (String._export, Value._init): Make unicode
	conversion only when the object is not a unicode object yet.

	* pytis/presentation/spec.py (ViewSpec.__init__): Docstring updated.

	* pytis/web/form.py (BrowseForm._export_field):
	`lcg.TranslatableText' -> `lcg.Localizable'.

2006-12-20  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (Application._cmd_run_procedure): New
	argument `enabled'.
	(Application._can_run_procedure): New method.

