2006-02-23  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (KEY_ANY): Konstanta zru¹ena.
	(Window.ACT_WINDOW, Window.ACTIVATIONS): Konstanty zru¹eny.
	(_MenuObject): Nová tøída.
	(MSeparator): Buï jejím potomkem.
	(_TitledMenuObject): Nová tøída.
	(MenuBar._append_menu, MenuBar._replace_menu)
	(MenuBar._remove_menu, MenuBar.add_menu, MenuBar.activate)
	(MenuBar.save, MenuBar.restore): Metody zru¹eny.
	(Menu): Buï potomkem `_TitledMenuObject'.
	(Menu.__init__): Zru¹en argument `activation'.  Zru¹ena mo¾nost
	pøedávat v items funkci, vytváøející menu dynamicky.
	(Menu.activation, Menu.dynamic, Menu.title): Metody zru¹eny.
	(Menu.create): Zru¹en argument `form'.  Kosmetické úpravy.  Wx
	metodám pøedávej "raw" titulek.
	(MItem): Buï potomkem `_TitledMenuObject'.
	(MItem.__init__): Kosmetické úpravy assertù.  Volej konstruktor
	pøedka.
	(MItem._on_ui_event): Nepøedávej argument `application' metodì
	`Command.enabled()'.
	(MItem.title): Metoda zru¹ena.
	(MItem.create): Wx metodám pøedávej "raw" titulek.
	(ButtonSpec, ButtonBar, Help, HelpFrame): Tøídy zru¹eny.

	* pytis/form/command.py (Command.__init__): Zru¹eny argumenty
	`key' a `static'.  Argument `name', nech» je pozièní.  Zru¹en hack
	upravující po staru pøedané argumenty.
	(Command.enabled): Zru¹en argument `application'.  Neke¹uj
	výsledky volání `enabled()' funkce.
	(Command.__setattr__): Metoda zru¹ena.
	(invoke_command): Nepøedávej argument `application' metodì
	`Command.enabled()'.

	* pytis/form/application.py (Application._update_window_menu):
	Zru¹en argument `recreate'.
	(Application._activate): Metoda zru¹ena.
	(Application.run_form): Nevolej `_activate()'.
	(Application.restore): Nevolej `_activate()' ani
	`_update_window_menu()'.
	(Application.run_form): Pokud jde o PrintForm, nepøidávej jej do
	recent_forms.

	* pytis/form/form.py (Form.ACT_FORM, Form.ACTIVATIONS): Konstanty
	zru¹eny.

	* pytis/form/output.py (PrintForm.ACT_PRINT_FORM) 
	(PrintForm.ACTIVATIONS): Konstanty zru¹eny.
	(PrintForm._menus): Metoda zru¹ena.
	(PrintForm.DESCR): Nová konstanta.
	(PrintForm._create_controls): Pou¾ívej stock buttons.

2006-02-22  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._on_context_menu_action): Nový
	arguemnt `access_groups'.  Nezkoumej argumenty handleru pomocí
	`inspect'.  V¾dy pøedej aktuální øádek a v¹echny klíèové
	argumenty.
	(ListForm.can_context_menu_action): Nový arguemnt
	`access_groups'.  Provìøuj nejprve pøítomnost v `access_groups',
	teprve potom funkci `enabled'.

	* pytis/form/commands_.py: Aktualizován popis pøíkazu
	`BrowseForm.COMMAND_CONTEXT_MENU_ACTION'.  

2006-02-20  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (NullApplication.recent_forms_menu):
	Nová metoda.

	* pytis/form/command.py (Command.__init__): Pøidány hlá¹ky k assertùm.

2006-02-16  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (Application._find_help_files): Pokud
	adresáø nápovìdy neexistuje, rovnou vra» prázdný seznam.

2006-02-15  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/output.py (PostscriptViewer.show_page): O¹etøeno
	dìlení nulou pøi výpoètu nastavení scrollbarù.

	* pytis/util/log.py (Module, Logger._retrieve_info): Pou¾ívej
	`positive_id()' namísto `id()'.

	* pytis/util/util.py (positive_id): Nová funkce.

	* pytis/form/screen.py (MItem.__init__): Umo¾ni pøedat namísto
	argumentu `command' pøímo dvojici (COMMAND, ARGS), urèující jak
	pøíkaz, tak jeho argumenty.

	* pytis/form/form.py (Form.on_command): O¹etøuj pøíkaz
	`Form.COMMAND_HELP'.
	(Form.on_command): Název topicu sestav pøímo zde.

	* pytis/form/dualform.py (DualForm.on_command): O¹etøuj pøíkaz
	`Form.COMMAND_HELP'.
	(DualForm.on_command): O¹etøuj `Form.COMMAND_HELP' jen pokud jde
	duální formuláø vytvoøený nad DualSpec.
	

	* pytis/form/configui.py (ConfigForm.DESCR): Nová konstanta. 

	* pytis/form/application.py (Application.OnInit): Naèítej hned pøi
	startu seznam dostupných souborù nápovìdy.  Vytváøení menu pøíkazù
	pøesunuto do `_create_command_menu()'.  Pøidávej také menu
	nápovìdy s vyu¾itím `_create_help_menu()'.
	(Application._create_help_menu, Application._create_command_menu)
	(Application._find_help_files): Nové metody.
	(Application.help): Vyu¾ívej seznam dostupných souborù nápovìdy
	`self._help_files'.  Pokud nejsou dostupné ¾ádné soubory, zobraz
	v¾dy jen informaèní dialog.  Jako výchozí topic vyu¾ívej index
	prvního nalezeného souboru nápovìdy.
	(Application.on_command): Pøedávej argumenty pøíkazu
	`Application.HELP' metodì `help()'.
	(Application.can_run_form): Netoleruj neexistující specifikace.
	(Application.OnInit): Po naètení ulo¾eného `recent_forms'
	zkontroluj, zda dané specifikace stále existují.

	* pytis/form/commands_.py: Nový pøíkaz `Form.COMMAND_HELP'.
	Popisky pøíkazù upraveny, aby neobsahovaly argumenty a teèku na konci.
	(DEFAULT_KEYMAP): Nová zkratka `Ctrl-F1' pro `Form.COMMAND_HELP'.
	Pøíkazu `Application.HELP' na `F1' pøedávej arguemnt `topic' s
	hodnotou `pytis'.

2006-02-10  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm.DESCR, CodebookForm.DESCR): Nová konstanta.

	* pytis/form/application.py (NullApplication): Nová tøída.

	* pytis/form/dualform.py (DualForm, BrowseShowDualForm): `_DESCR'
	-> `DESCR'.

	* pytis/form/form.py (Form._DESCR): Pøejmenováno na `DESCR'.
	(PopupEditForm, ShowForm, Form.descr): `_DESCR' -> `DESCR'.

2006-02-01  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/form.py (EditForm.__init__): Volej
	`self._init_inserted_row()' namísto výbìru `self._inserted_row()'
	zde.
	(EditForm._inserted_row, PopupEditForm._inserted_row): Metody
	zru¹eny.
	(EditForm._init_inserted_row, PopupEditForm._init_inserted_row):
	Nové metody.
	(PopupEditForm._on_next_button, PopupEditForm._on_skip_button):
	Volej `self._init_inserted_row()' namísto výbìru
	`self._inserted_row()' zde.

	* pytis/form/list.py (ListForm._displayed_columns_menu): Zobrazuj
	v menu `column_label', ne `label'.
	(ListForm._init_col_attr): Pokud je editovatelnost urèena
	computerem, nastav sloupec jako editovatelný.

2006-01-31  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/search.py (SearchDialog._HELP_TOPIC)
	(FilterDialog._HELP_TOPIC, SortingDialog._HELP_TOPIC): Nové
	konstanty.

	* pytis/form/dialog.py (GenericDialog._HELP_TOPIC): Nová
	konstanta.
	(GenericDialog._create_dialog): Nevytváøej dialog se stylem
	`wx.STAY_ON_TOP'.
	(GenericDialog.on_command): O¹etøuj pøíkaz `Dialog.COMMAND_HELP'.

	* pytis/form/commands_.py: Nový pøíkaz `Dialog.COMMAND_HELP'.

	* pytis/form/application.py (Application._cleanup): Uzavírej také
	okno nápovìdy.
	(Application.help): V adresáøi nápovìdy vyhledej v¹echny dostupné
	soubory s nápovìdou v zazipované podobì a pou¾ij je.

2006-01-30  Tomas Cerha  <cerha@brailcom.org>

	* pytis/util/configuration.py (Configuration._Option_doc_dir):
	Doèasnì vráceno.

2006-01-26  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (EditForm._commit_form): 'original_row'
	pøedávej do cleanupu jako novou instanci.

2006-01-26  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/search.py (SFDialog._create_content.condition): Pokud
	nebyl pøedán výchozí sloupeèek, vyber první sloupec.

	* pytis/form/application.py (Application.run_form):
	`self._post_init_form()' volej a¾ po zobrazení formuláøe.
	(Application.help): Roz¹íøena chybová zpráva pøi nenalezení manuálu.

2006-01-25  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (Application.help): Nech» je argument
	`topic' nepovinný.  Pou¾ívej konfiguraèní volbu `help_dir' a
	zobraz varování, pokud soubor nápovìdy není nalezen.  Doplnìn
	docstring.
	(help): Nech» je argument `topic' nepovinný. Doplnìn docstring.
	(Application.on_command): O¹etøuj pøíkaz `Application.COMMAND_HELP'.

	* pytis/util/configuration.py (Configuration._Option_help_dir):
	Nová volba.
	(Configuration._Option_doc_dir): Volba zru¹ena.

	* pytis/form/commands_.py: Nový pøíkaz `Application.COMMAND_HELP'
	a klávesová zkratka.

2006-01-24  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/dialog.py (Warning.__init__): Roz¹íøeno o argumenty
	'report' a 'report_init'.
	(Error.__init__): Roz¹íøeno o argumenty 'report' a 'report_init'.

2006-01-24  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/spec.py (ViewSpec.__init__): Aktualizace
	docstringu.

	* pytis/form/list.py (ListForm._update_grid): Provádìj
	pøenastavení velikosti gridu i pokud do¹lo ke zmìnì poètu sloupcù,
	nejen øádkù, a provádìj jej v¾dy a¾ úplnì nakonec.

2006-01-23  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py: Importuj `wx.html'.
	(Application.OnInit): Inicializuj atribut `self._help_controller'.
	(Application._cleanup): Mezi ukládané konfiguraèní volby zahrnuj
	pouze volbu z konfiguraèních formuláøù a nìkteré explicitnì
	vyjmenované volby.
	(Application.help): Nová metoda.
	(help): Nová funkce.

	* pytis/form/list.py (ListForm._on_sort_column): Aktualizuj také
	grouping.
	(ListForm._on_label_left_up): Vypoèti nový smìr tøídìní a pøedej
	konkrétní smìr, nikoli konstantu `SORTING_CYCLE_DIRECTION'.  Pokud
	není stisknut Shift, proveï primární tøídìní i pokud sloupec ji¾
	je setøídìn (sekundárnì).

	* pytis/form/form.py (LookupForm.SORTING_CYCLE_DIRECTION):
	Konstanta zru¹ena.
	(LookupForm._on_sort_column): Aktualizace docstringu.  Neøe¹
	cyklické pøepínání smìru zde.
	(LookupForm.can_sort_column): Neuva¾uj s `SORTING_CYCLE_DIRECTION'.

	* pytis/form/configui.py (configurable_options): Nová funkce.

2006-01-23  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (EditForm._commit_form): Do cleanupu pøedávej
	skuteènì pùvodní hodnotu 'original_row'.

2006-01-20  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (EditForm._commit_form): Do cleanupu pøedávej
	i pùvodní øádek.

2006-01-18  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/_grid.py (ListTable.GetAttr): Zru¹en zapomenutý print.

	* pytis/presentation/spec.py (ViewSpec.__init__): Loguj pou¾ití
	potlaèeného argumentu `enable_inline_insert'.
	(ViewSpec.enable_inline_insert): Metoda zru¹ena.

	* pytis/form/list.py (ListForm._on_label_left_down): Nevolej
	`event.Skip()'.
	(ListForm._on_insert_line): Ignoruj `enable_codebook_insert' a
	namísto toho kontroluj, zda jsou zobrazeny v¹echny not_null
	sloupce.
	(ListForm._init_attributes): Neinicializuj
	`self._enable_inline_insert'.
	(ListForm._update_grid.notify): Zavírej editory je¹tì pøed ru¹ením
	sloupcù.
	(ListForm._update_grid): Nezavírej editory zde.
	(ListForm._init_col_attr): Pokud existují nìjaké editory, napøed
	je zavøi.
	(BrowseForm._formatter_parameters): `_lf_translated_sorting' ->
	`_data_sorting'.

	* pytis/form/application.py (Application.on_command): Testuj
	existenci aktivního formuláøe v boolean kontextu, ne jen na None
	hodnotu.  To by mìlo zachytit i mrtvé formuláøe.

2006-01-17  Pavel Hanak  <hanak@asellus.cz>

	* pytis/presentation/spec.py (TextFormat): Tøída pøesunuta 'vý¹'.
	(ViewSpec.__init__): nový argument 'description_format'.
	(ViewSpec.description_format): Nová metoda.

	* pytis/form/form.py (TitledForm._on_show_description): Nová
	metoda. 
	(TitledForm._create_title_bar): Doplnìn button pro description.

2006-01-17  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/_grid.py (ListTable.__init__): Výchozí hodnotou pro
	`grouping' nech» je prázdný tuple.  Pøidán assert.
	(ListTable._group): Poèítej s vícesloupcovým seskupováním.
	(ListTable._cached_value): Ke¹uj v¹echny sloupce z `grouping'.

	* pytis/presentation/spec.py (ViewSpec.__init__): Aktualizace
	docstringu.  Povol sekvenci, jako hodnotu pro `grouping' a pokud
	jde jen o jeden identifikátor sloupce, pøeveï jej na jednoprvkový
	tuple.  Provádìj kontrolu na existenci sloupcù z `grouping' a
	`sorting'.
	(ViewSpec.grouping): Aktualizace docstringu.

	* pytis/form/list.py (ListForm._on_sort_column): Nekontroluj zde
	pøítomnost sloupce v datech, dìlá to pøedek.
	(ListForm._on_label_left_up): Pokud není stisknutá klávesa
	`Shift', nastav tøídící sloupec jako primární.
	(ListForm._refresh): Neukládej nastavení tøídìní zde.
	(ListForm._on_label_paint, CodebookForm._on_idle): Nepracuj s
	promìnnou `self._lf_sorting' pøímo.  Pou¾ívej nové metody.
	(ListForm._init_grouping): Pracuj s groupingem jako s tuple.
	(ListForm._column_context_menu): Roz¹íøeny pøíkazy pro práci s
	groupingem.
	(ListForm._on_label_paint): Pracuj s groupingem jako s tuple.
	(ListForm._set_grouping_column, can_set_grouping_column): Nové
	arguemnty `reset' a `remove'.  Pracuj s groupingem jako s tuple.
	(ListForm._set_grouping_column): Zru¹eny argumenty `reset' a
	`remove'.  Nastavuj seskupování jen podle tøídících sloupcù, a¾ po
	`col'.
	(ListForm._column_context_menu): Pro seskupování pou¾ij jen dva
	pøíkazy, respektující tøídìní.
	(ListForm._on_label_paint): Seskupování indikuj barvou tøídícího
	trojúhelníèku.
	(ListForm.can_set_grouping_column): Zru¹eny argumenty `reset' a
	`remove'.  Umo¾ni seskupování jen podle tøídících sloupcù.

	* pytis/form/form.py (LookupForm.SORTING_NONE) 
	(LookupForm.SORTING_CYCLE_DIRECTION) 
	(LookupForm.SORTING_ASCENDENT, LookupForm.SORTING_DESCENDANT):
	Aktualizace docstringu.
	(_lf_translated_sorting): Pøejmenováno na `self._data_sorting()'.
	(LookupForm._data_sorting): Nová metoda.
	(LookupForm._sorting_columns): Nová metoda.
	(LookupForm._sorting_position): Nová metoda.
	(LookupForm._sorting_direction): Nová metoda.
	(LookupForm._on_sort_column): Výraznì pøepsáno.
	(LookupForm.can_sort_column): Výraznì pøepsáno.
	(LookupForm._init_sorting): Nová metoda.
	(LookupForm._init_attributes): Pou¾ívej ji.
	(_user_defined_sorting): Metoda zru¹ena.

2006-01-16  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/_grid.py (ListTable.GetAttr): Pøeci jen pou¾ívej
	providera k zji¹tìní výchozích atributù buòky (obsahují atributy
	sloupce).

	* pytis/form/list.py (ListForm._create_form_parts): Neoèekávej
	návratovou hodnotu od `self._create_grid()'.
	(ListForm._create_grid): Pøiøazuj rovnou zde do `saelf._grid'.
	Nevracej ¾ádnou návratovou hodnotu.  Neinicializuj atributu
	sloupcù zde.  Vyu¾ívej k tomu `self._init_col_attr()'.
	(ListForm._update_grid): Pokud do¹lo ke zmìnám sloupcù, volej
	`self._init_col_attr()'.
	(ListForm._init_col_attr): Nová metoda.
	(ListForm._edit_cell): Loguj radìji identifikátor sloupce.
	(ListForm.on_command): Netestuj
	(ListForm._close_editors): Nová metoda.
	(ListForm.Close): Vyu¾ívej ji.

2006-01-13  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/search.py (SFDialog._create_content.condition):
	Pou¾ij pou¾ij v¾dy `self._field_id' jako pøednastavený sloupec pro
	novou podmínku.
	(SFDialog._save_values): Neukládej nastavení, pokud máme pouze
	jednu nevyplnìnou podmínku.
	(SFDialog.run, SearchDialog.run, FilterDialog.run): Arguemnt `col'
	zmìnìn na `fiald_id'.

	* pytis/form/_grid.py (ListTable.GetAttr): Nepokou¹ej se získat
	instanci `wx.grid.GridCellAttr' od providera, rovnou vytvoø
	vlastní.
	(ListTable.GetValue, ListTable.GetTypeName, ListTable.GetAttr):
	O¹etøuj situaci, kdy èíslo sloupce neodpovídá poètu zobrazených
	sloupcù.

	* pytis/form/commands_.py (DEFAULT_KEYMAP): Klávesová zkratka pro
	pøíkaz `Application.COMMAND_CUSTOM_DEBUG' zmìnìna na `Ctrl-x d'

	* pytis/form/form.py (LookupForm._init_attributes): Zru¹en
	argument `grouping'.  Zjisti a pøípadnì uplatni u¾ivatelské
	nastavení tøídìní.
	(LookupForm._default_grouping): Metoda zru¹ena.
	(LookupForm._on_reload_form_state): Nová metoda.
	(LookupForm._on_sort_column): Zapamatuj si tøídìní jako
	u¾ivatelské nastavení.
	(LookupForm._default_sorting): Urèi výchozí tøídìní a vra»
	specifikaci.
	(Form._get_state_param): Nový argument `cls'.
	(LookupForm._init_attributes): Pou¾ívej metodu
	`self._user_defined_sorting()'.
	(LookupForm._user_defined_sorting): Nová metoda.
	(RecordForm.current_field): Nová metoda.
	(LookupForm._on_search): Pøedávej metodì `run()' dialogu
	identifikátor aktuálního políèka.
	(LookupForm._on_filter): Zru¹eny argumenty `row' a `col'.
	Pøedávej metodì `run()' dialogu identifikátor aktuálního políèka.

	* pytis/form/list.py (ListForm.can_set_grouping_column): Nová
	metoda.
	(ListForm.can_set_grouping): Metoda zru¹ena.
	(ListForm._init_attributes): Nový argument `grouping'.
	Inicializuj `self._grouping'.
	(ListForm._default_grouping): Metoda zru¹ena.
	(ListForm._default_sorting): Metoda zru¹ena.
	(ListForm._update_grid): Pou¾ívej `self._grouping' namísto
	`self._lf_grouping'.
	(ListForm._on_label_right_down): Pøíkazu
	`ListForm.COMMAND_SET_GROUPING_COLUMN' pøedávej èíslo, ne id
	sloupce jako argument.
	(ListForm._on_label_paint): Pou¾ívej `self._grouping' namísto
	`self._lf_grouping'.
	(ListForm._on_reload_form_state): Reinicializuj `self._grouping'.
	Volej metodu pøedka.
	(ListForm.on_command): Pøíkaz
	`ListForm.COMMAND_SET_GROUPING_COLUMN' obsluhuj voláním
	`self._set_grouping_column()', ne `self._refresh()'.
	(ListForm._set_grouping_column): Nová metoda.
	(ListForm._refresh): Nestarej se zde vùbec o grouping.  Zapamatuj
	si tøídìní jako u¾ivatelské nastavení.
	(ListForm._init_attributes): Neinicializuj sloupce ani grouping
	zde, volej `self._init_columns()', `self._init_grouping(grouping)'
	a také `self._init_column_widths()'.  Inicializuj
	`self._check_default_columns'.
	(ListForm._init_columns, ListForm._init_column_widths)
	(ListForm._init_grouping): Nové metody.
	(ListForm._column_width): Pou¾ívej slovník ulo¾ený v
	`self._column_widths'.
	(ListForm._update_grid): Pou¾ívej `self._init_columns()'.
	(ListForm._on_idle): Pokud je nastaveno
	`self._check_default_columns', zkontroluj zmìnu pøímo zde.
	(ListForm._remember_column_size): Pou¾ívej slovník ulo¾ený v
	`self._column_widths'.
	(ListForm._on_reload_form_state): Pou¾ívej `self._init_grouping()'
	a `self._init_column_widths()'.
	(ListForm._set_grouping_column): Ukládej nastavenou hodnotu jako
	u¾ivatelské nastavení.
	(ListForm._update_grid): Ujisti se, ¾e `inserted_column_index' je
	v rozumných mezích.
	(ListForm._displayed_columns_menu): Nová meotda.
	(ListForm._column_context_menu): Nová meotda.
	(ListForm._on_label_right_down): Vyu¾ívej tyto metody.  Pokud jsme
	mimo sloupce, zobrazuj pouze menu pro zobrazení/skrytí sloupcù
	(ListForm._on_label_left_down, ListForm._on_label_left_up):
	O¹etøuj situaci, kdy bylo kliknuto mimo sloupce.
	(ListForm._on_toggle_column): Umo¾ni skrýt sloupec, by» je
	posledním zobrazeným sloupcem v gridu.
	(ListForm._resize_columns): U¹etøi nulovou celkovou ¹íøku pøi
	skrytí v¹ech sloupcù.
	(ListForm.current_row): Nová metoda.
	(ListForm._on_filter): Metoda zru¹ena.

2006-01-12  Tomas Cerha  <cerha@brailcom.org>

	* pytis/util/configuration.py
	(Configuration._Option_application_state): Nová volba.

	* pytis/form/form.py (RecordForm._on_import_interactive): Nová
	metoda.
	(RecordForm.on_command): O¹etøuj pøíkaz
	`BrowseForm.IMPORT_INTERACTIVE'.
	(EditForm._inserted_row, EditForm.__init__): Vyu¾ívej ji.
	(PopupEditForm._init_attributes): Nový argument `inserted_data'.
	Inicializuj `self._inserted_data' a `self._inserted_data_pointer'.
	(PopupEditForm._create_status_bar_field): Nová metoda.
	(PopupEditForm._create_status_bar): Vyu¾ívej ji.
	(PopupEditForm._inserted_row): Nová metoda.
	(PopupEditForm._on_cancel_button): Nová metoda.
	(PopupEditForm._on_next): Pøejmenováno na `_on_next_button'.
	(PopupEditForm._on_next_button): Vyu¾ívej `self._inserted_row()'.
	(PopupEditForm._buttons): Vyu¾ívej `self._on_cancel_button'.
	`_on_next' -> `_on_next_button'.
	(PopupEditForm.set_status): Vyu¾ívej v¹echna políèka stavového
	øádku.
	(PopupEditForm._init_attributes): Doplnìn docstring.  Zru¹en
	argument `disable_next_button'.
	(PopupEditForm._create_status_bar_field): Nový arguemnt `descr'
	(PopupEditForm._create_status_bar): Pou¾ívej ho.  Vytváøej políèko
	`progress' pouze pokud máme `inserted_data'.
	(PopupEditForm._inserted_row): Úprava zprávy v dialogu.
	(PopupEditForm._on_skip_button): Nová metoda.
	(PopupEditForm._buttons): Nepou¾ívej `self._disable_next_button'.
	Pokud máme `inserted_data', pøidávej také tlaèítko "Pøeskoèit".
	(Form._init_attributes): Nastavuj `self._form_state' podle
	konfigurace a kopíruj poèáteèní hodnotu do `self._initial_form_state'.
	(Form._get_state_param, Form._set_state_param) 
	(Form._unset_state_param): Pracuj jen s `self._form_state'.
	(Form._on_reload_form_state): Nová metoda.
	(Form.on_command): O¹etøuj pøíkaz `Form.COMMAND_RELOAD_FORM_STATE'.

	* pytis/form/list.py (BrowseForm._on_import_interactive): Metoda
	zru¹ena.
	(BrowseForm.on_command): Neo¹etøuj pøíkaz
	`BrowseForm.IMPORT_INTERACTIVE'.
	(ListForm._on_label_drag_size): Pøenastav velikost gridu.
	(ListForm._column_width, ListForm._remember_column_size): Ulo¾ené
	¹íøky sloupcù pøevádìj pøed pou¾itím na slovník.
	(ListForm._update_grid): Nový argument `soft_reset_columns'.
	(ListForm._remember_column_size): Ukládej ¹íøky jako tuple dvojic
	pøevoditelný na slovník.
	(ListForm._on_reset_columns): Nová metoda.

	* pytis/form/commands_.py: `BrowseForm.COMMAND_IMPORT_INTERACTIVE'
	-> `RecordForm.COMMAND_IMPORT_INTERACTIVE'.  Nový pøíkaz
	`Form.COMMAND_RELOAD_FORM_STATE'.
	

	* pytis/form/application.py (Application.new_record): Nový
	argument `inserted_data'.
	(Application.OnInit): Ulo¾ seznam poslednì otevøených formuláøù do
	`self._recent_forms'.  Neneèítel je z `config.form_state', ale
	`config.application_state'.
	(Application._recent_forms_menu_items, Application.on_command)
	(Application.can_clear_recent_forms)
	(Application._update_recent_forms): Zde pracuj u¾ pouze se
	`self._recent_forms', ne s konfiguraèní volbou.
	(Application._set_form_state): Pøejmenováno na
	`Application._post_init_form'.
	(Application._write_config): Nepokou¹ej se vyøadit volby, které
	pøedtím nebyly ulo¾eny.
	(Application.run_form): `state_kwargs' -> `post_init_kwargs',
	`self._set_form_state' -> `self._post_init_form'.

2006-01-09  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (InputField.CALL_SKIP_NAVIGATION):
	Update docstringu.
	(InputField._skip_navigation_callback.cb): Hodnotu argumentu pro
	callback `CALL_SKIP_NAVIGATION' pøedávaj jako `back', ne
	`forward'.
	(Invocable.on_command): Namísto o¹etøování
	`COMMAND_INVOKE_SELECTION_ALTERNATE' pøedávej argumenty pro
	`COMMAND_INVOKE_SELECTION'.

	* pytis/form/dualform.py
	(BrowseDualForm._set_main_form_callbacks): Nastavuje callback
	`CALL_ACTIVATION' na `self._on_main_activation()'.
	(BrowseDualForm._on_show_record): Metoda zru¹ena.
	(BrowseDualForm._on_main_activation): Nová metoda.

	* pytis/form/screen.py (CallbackHandler._run_callback): Nový
	argument `kwargs' pøedávej callbackové funkci jako klíèové argumenty.

	* pytis/form/form.py (LookupForm._on_search): Zru¹en argument
	`show_dialog'.  Výchozí hodnota `direction' nech» je None.  Zobraz
	dialog jen pokud není urèen smìr, nebo nebyla zadána podmínka.
	(LookupForm.on_command): Neo¹etøuj zru¹ené pøíkazy
	`COMMAND_SEARCH_NEXT' a `COMMAND_SEARCH_PREVIOUS' a pøi vyvolání
	`COMMAND_SEARCH' pøedávej v¹echny argumenty.
	(RecordForm.on_command): Neo¹etøuj `COMMAND_NEW_RECORD_COPY'.  Pøi
	o¹etøování `COMMAND_NEW_RECORD' pøedávej callbacku arguemnty.
	(EditForm._navigate): Arguemnt `forward' nahrazen argumentem `back'.
	(EditForm.on_command): Namísto o¹etøování `COMMAND_NAVIGATE_BACK'
	pøedávej argumenty pøi vyvolání `COMMAND_NAVIGATE'.

	* pytis/form/command.py (Command.__call__): Nová metoda.

	* pytis/form/dialog.py (GenericDialog.__init__): `self._buttons'
	pøejmenováno na
	(GenericDialog._create_buttons): `self._button_labels' ->
	`self._button_label_dict'.  `self._buttons' ->
	`self._button_labels'.  Ukládej talèítka do `self._buttons'.
	(GenericDialog._can_commit): V¾dy vracej `False'.
	(GenericDialog._button_label): `self._button_labels' ->
	`self._button_label_dict'.
	(GenericDialog._commit_dialog): Pokud jde o tlaèítko, simuluj jeho
	stisk i kdy¾ `force' není pravda.
	(GenericDialog.on_command): Neo¹etøuj zru¹ený pøíkaz
	`COMMAND_FORCE_COMMIT_DIALOG'.  Pøedávej volání
	`self._commit_dialog()' argumenty.

	* pytis/form/list.py (ListForm._resize_column): Zru¹en argument
	`col' - pracuj automaticky s aktuálním sloupcem.
	(ListForm._move_column): Nová metoda.
	(ListForm.can_move_column): Nová metoda.
	(ListForm.on_command): O¹etøuj nový pøíkaz `MOVE_COLUMN'.  Namísto
	pøíkazù `ENLARGE_COLUMN' a `CONTRACT_COLUMN' nyní o¹etøuj pouze
	`RESIZE_COLUMN'.
	(ListForm.can_show_cell_codebook): Kosmetická zmìna.
	(ListForm.on_command): Zde neo¹etøuj ¾ádné vyhledávací pøíkazy.
	(BrowseForm._on_import_interactive): Oprava èíslování øádkù.
	(ListForm.CALL_ALTERNATE_ACTIVATION): Konstanta zru¹ena.
	(ListForm.__init__): Nastavuj callback `CALL_ACTIVATION' na
	`self._on_activation()'.
	(ListForm._on_activation): Nová metoda.
	(ListForm.on_command): Namísto o¹etøování
	`COMMAND_LINE_SOFT_ROLLBACK' pøedávej argumenty pøi volání
	`COMMAND_LINE_ROLLBACK.  Namísto o¹etøování
	`COMMAND_ACTIVATE_ALTERNATE' pøedávej argumenty pøi volání
	`COMMAND_ACTIVATE'.  `COMMAND_ACTIVATE' o¹etøuj vyvoláním
	callbacku s pøíslu¹nými argumenty.  Namísto o¹etøování
	`COMMAND_FULL_INCREMENTAL_SEARCH' pøedávej argumenty pøi volání
	`COMMAND_INCREMENTAL_SEARCH'.  Namísto o¹etøování
	`COMMAND_NEW_LINE_AFTER', `COMMAND_NEW_LINE_AFTER_COPY',
	`COMMAND_NEW_LINE_BEFORE' a `COMMAND_NEW_LINE_BEFORE_COPY' o¹etøuj
	`COMMAND_NEW_LINE' a pøedávej arguemnty.
	(ListForm._on_activation): Metoda zru¹ena.
	(ListForm._on_alternate_activation): Metoda zru¹ena.
	(ListForm._on_incremental_search): Nech» je arguemnt `full'
	klíèový.
	(ListForm._on_insert_line): Argumnet `after' nahrazen argumentem
	`before'.
	(CodebookForm.__init__): Nenastavuj callback `CALL_ACTIVATION'.
	(CodebookForm._on_activation): Definuj klíèové argumenty `key' a
	`alternate'.
	(BrowseForm.__init__): Metoda zru¹ena.
	(BrowseForm._context_menu): Namísto `COMMAND_ACTIVATE_ALTERNATE'
	pou¾ívej `COMMAND_ACTIVATE' s argumentem `alternate'.

	* pytis/form/application.py (Application): Název i formát
	specifikaèní funkce `command_keys' zmìnìn.  Nový název je `keymap'
	a polo¾ky definují navíc také argumenty pøíkazu, pøièem¾ definice
	klávesy je nyní na prvním místì.
	(Application.OnInit): Pokud je pøíkaz definovaný v
	`DEFAULT_KEYMAP', nebo `FORM_COMMAND_MENU' sekvencí, pova¾uj tuto
	sekvenci za dvojici (COMMAND, ARGS).

	* pytis/form/commands_.py: Pøíkazy `ENLARGE_COLUMN' a
	`CONTRACT_COLUMN' nahrazeny jedním `RESIZE_COLUMN'.  Nový pøíkaz
	`MOVE_COLUMN'.  Zru¹eny pøíkazy `FORCE_COMMIT_DIALOG',
	`SEARCH_PREVIOUS' a `SEARCH_NEXT'.
	Pøíkazy `NEW_LINE_AFTER', `NEW_LINE_AFTER_COPY', `NEW_LINE_BEFORE'
	a `NEW_LINE_BEFORE_COPY' nahrazeny jendím `NEW_LINE' a argumenty
	`before' a `copy'.  Pøíkaz `NEW_RECORD_COPY' nahrazen arguemntem
	`copy' pøíkazu `NEW_RECORD'.  `ACTIVATE_ALTERNATE' nahrazen
	argumentem `alternate' pøíkazu
	`ACTIVATE'. `FULL_INCREMENTAL_SEARCH' nahrazeno arguemntem `full'
	pøíkazu `INCREMENTAL_SEARCH'. `LINE_SOFT_ROLLBACK' nahrazeno
	arguemntem `soft' pøíkazu `LINE_ROLLBACK'.  `NAVIGATE_BACK'  nahrazeno
	arguemntem `back' pøíkazu `NAVIGATE'.
	`INVOKE_SELECTION_ALTERNATE'  nahrazeno
	arguemntem `alternate' pøíkazu `INVOKE_SELECTION'.
	(DEFAULT_COMMAND_KEYS): Konstanta zru¹ena.
	(DEFAULT_KEYMAP): Nová konstanta s novým formátem podle zmìn v
	`application.py' a s vyu¾itím argumentù pøíkazù.
	(FORM_COMMAND_MENU): Vyu¾ívej definice pøíkazù vèetnì argumentù.
	

2006-01-06  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/form.py (LookupForm._lf_sfs_columns): Nepøedávej
	funkci `sfs_columns()' `labelfunc' ani `widthfunc'.

	* pytis/presentation/spec.py (ViewSpec.__init__): Nový argument
	`row_style'.
	(ViewSpec.row_style): Nová metoda.
	(FieldSpec.__init__): Výchozí hodnotou argumentu `style' nech» je
	`None'.

	* pytis/form/configui.py (_LAYOUT): Pøidána také volba
	`grouping_background_downgrade'.

	* pytis/form/list.py (ListForm._GROUPING_BACKGROUND_DOWNGRADE):
	Konstanta zru¹ena.
	(ListForm._init_attributes): Pokud do¹lo ke zmìnì sloupcù ve
	specifikaci, nastav `self._default_columns_changed'.  Inicializuj
	atribut `self._mouse_dragged' na `False'.
	(ListForm._create_grid): Pøedávej konstruktoru `ListTable'
	argument `row_style'.
	(ListForm._update_grid): Pøi `reset_columns' ma¾ zapamatované
	u¾ivatelské nastavení sloupcù.
	(ListForm._on_idle): Pokud je nastaveno
	`self._default_columns_changed', zobraz dialog s upozornìním na
	zmìny ve specifikaci sloupcù a zeptej se, zda u¾ivatel chce
	sloupce resetovat.
	(ListForm._on_label_left_down): Poèni pøetahování sloupce pouze
	pokud u¾ivatel kliknul dostateènì daleko od rozhraní sloupcù.
	Nuluj `self._mouse_dragged'.
	(ListForm._on_label_left_up): Proveï tøídìní pouze pokud nedo¹lo k
	popota¾ení my¹i.
	(ListForm._on_label_mouse_move): Netestuj `event.Dragging()'.
	(ListForm._on_label_mouse_move): Nastavuj `self._mouse_dragged'.
	(SideBrowseForm._default_columns): Vracej tuple.
	(ListForm._scroll_x_offset): Nová metoda.
	(ListForm._on_label_right_down, ListForm._on_label_left_down) 
	(ListForm._on_label_left_up, ListForm._on_label_mouse_move) 
	(ListForm._on_label_paint): Vyu¾ívej ji.
	(ListForm._lf_sfs_columns): Nová metoda.

	* pytis/form/_grid.py (ListTable.__init__): Nový argument
	`row_style'.  Inicializuj `self._grouping_background_downgrade'.
	(ListTable._group_bg_downgrade): Nová metoda.
	(ListTable.update): Pøepoèítej
	`self._grouping_background_downgrade'.
	(ListTable.close): Nuluj také `self._current_row',
	`self._row_style' a `self._grouping_background_downgrade'.
	(ListTable._cached_value): Pokud grouping column není v columns,
	stejnì nacachuj jeho hodnotu.  Vypoèti také `row_style' pokud jde
	o funkci.
	(ListTable.GetAttr): Pokud je styl None, zkus pou¾ij `row_style'.
	Pou¾ívej `self._grouping_background_downgrade' namísto
	`ListForm._GROUPING_BACKGROUND_DOWNGRADE'.

	* pytis/util/configuration.py
	(Configuration._Option_grouping_background_downgrade._DEFAULT):
	Pozmìnìna výchozí hodnota.

	* pytis/form/search.py (SFDialog._selected_condition): Nezji¹»uj
	sloupec podle labelu, ale podle poøadí.
	(SFDialog._on_suck): Urèuj sloupec podle poøadí, ne podle labelu.
	(sfs_columns): Zru¹en argument `widthfunc'.  Vynechávej sloupeèky
	bez labelu.

	* pytis/form/dialog.py (GenericDialog._commit_dialog): Don't end
	the dialog.  Rather simulate a button click.

2006-01-04  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (Application.OnInit): Inicializuj
	klávesovou mapu pøed naèítáním konfigurace.

2006-01-03  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/search.py (SFDialog._selected_condition): Validuj
	hodnoty s nastavením `strict=False'.  Pokud do¹lo k validaèní
	chybì, vyvolej výjimku.
	(SearchDialog._search, FilterDialog._on_filter): O¹etøuj výjimky v
	`_selected_condition()'.  Vracej pravdu, pokud k výjimce nedo¹lo.
	(SearchDialog._on_button): Nová metoda.
	(SearchDialog._customize_result): Neprovádìj search zde, ponech to
	na `_on_button()'.
	(FilterDialog._on_filter): O¹etøuj výjimky v
	`_selected_condition()'.  Vracej pravdu, pokud k výjimce nedo¹lo.
	(FilterDialog._on_button): Nová metoda.
	(FilterDialog._customize_result): Neprovádìj filtrování zde,
	ponech to na `_on_button()'.

	* pytis/form/form.py (LookupForm._lf_sfs_columns): Vracej úplnì
	v¹echny definované sloupce.
	(Form._unset_state_param): Nová metoda.

	* pytis/form/application.py (Application._stored_options): Nová
	metoda.
	(Application._read_config): Vyu¾ívej ji.
	(Application._write_config): Pøed zapsáním vyma¾ v¹echny
	existující volby.
	(Application.OnInit): Vyluèuj 'dbconnection' z naètených
	konfiguraèních voleb.
	(Application._cleanup): Vyluèuj 'dbconnection' z ukládaných
	konfiguraèních voleb.
	(Application._write_config): Na konci volej je¹tì `wxconfig.Flush()'.
	(Application._write_config): Ma¾ pouze polo¾ky, které nebyly nastaveny.

	* pytis/form/list.py (ListForm._column_width): Nevy¾aduj argument
	`grid'.
	(ListForm._create_grid): Neinicializuj `self._total_width'.
	Nenastavuj zde vùbec velikosti sloupcù.
	(ListForm._update_grid): Nakonci volej `self._resize_columns()'.
	(ListForm._modify_column_width): Pøejmenováno na
	`_resize_column()'.  Na konci volej `self._remember_column_size()'
	(ListForm._resize_column): Nová metoda.
	(ListForm._on_idle): Volej callback a hook pouze pokud øádek není
	None.
	(ListForm._on_label_left_up): Nevolej zde `self._on_size()'.
	(ListForm._on_label_drag_size): Nezapamatovávej ¹íøku zde, volej
	`self._remember_column_size()'.
	(ListForm._remember_column_size): Nová metoda.
	(ListForm._on_toggle_column, ListForm._on_reset_columns): Nevolej
	zde `self._on_size()'.
	(ListForm.on_command): `_modify_column_width()' ->
	`_resize_column()'.
	(ListForm._resize_columns): Nová metoda.
	(ListForm._on_size): Vy¾aduj argument event.  Vlastní pøepoèítání
	sloupcù pøesunuto do `_resize_columns()' a algoritmus pozmìnìn.
	Zde pouze obstarej v¹e co souvisí s eventem.
	(CodebookForm.__init__): Namísto atributu `self._total_width'
	pou¾ívej metodu `self._total_width()'.

	* pytis/util/configuration.py: 
	(Configuration._Option_stretch_tables): Nová volba.

	* pytis/form/configui.py (_LAYOUT, _LABELS): Pøidána polo¾ka pro
	`stretch_tables'.
	(ConfigForm._buttons): Metodu _on_apply() skuteènì volej.

2006-01-02  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/configui.py (ConfigForm._create_view_spec): Metodì
	`Configuration.description()' pøedávej nový argument `full'.

	* pytis/util/configuration.py
	(Configuration.Option._DOC, Configuration.Option._DESCR): Nové
	konstanty.
	(Configuration.Option.__init__): Ujisti se, ¾e je definován popis
	volby.
	(Configuration.Option.description) Nová metoda.
	(Configuration.description): Nový argument `full'.  Namísto
	dokumentaèního øetìzce vyu¾ívej nové metody
	`Configuration.Option.description()'.
	(Configuration._Option_*): Namísto dokumentaèního øetìzce definuj
	konstanty `_DOC' a `_DESCR'.

	* pytis/form/list.py (ListForm._context_menu_handler_args):
	O¹etøuj pøípad, kdy handler nemá ¾ádné klíèové argumenty.

	* pytis/form/application.py (Application.OnInit): Vytvoø stack
	oken a stavovou øádku je¹tì pøed naèítáním konfigurace.

2005-12-28  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/command.py
	(Command.__init__): Update docstringu.  Pamatuj si dokumentaèní
	øetìzec pøíkazu.
	(Command.doc): Nová metoda.

	* pytis/form/list.py (ListForm._on_insert_line): O¹etøuj pøípad
	prázdné tabulky.
	(ListForm.__init__): Na konci nevolej `_select_cell()'.
	(ListForm._is_editable_cell): Pokud se nacházíme v editaci, pracuj
	s editovaným øádkem.
	(ListForm._find_next_editable_cell): Kosmetická úprava.
	(ListForm.on_command): O¹etøuj nový pøíkaz
	`COMMAND_CONTEXT_MENU_ACTION'.
	(ListForm._context_menu_handler_args): Nová metoda.
	(ListForm._on_handled_command): Vyu¾ívej ji.
	(ListForm._on_context_menu_action): Nová metoda.
	(ListForm.can_context_menu_action): Nová metoda.

	* pytis/form/application.py
	(Application._RECENT_FORMS_MENU_TITLE): Nová konstanta.
	(Application.OnInit): Read the stored configuration before
	creating the menu.  Nenastavuj aktivace menu oken a pøíkazù -
	nech» jsou vidìt v¾dy.  Po sestavení menu se pokus vyhledat menu
	poslednì otevøených formuláøù a zapamatuj jej v atributu
	`self._recent_forms_menu'.
	(Application._recent_forms_menu_items): Nová metoda.
	(Application._update_window_menu.wmitem): Vyu¾ívej ji.
	(Application._update_window_menu): Pøedávej volání `wmitem()' jen
	èíslo a formuláø.
	(Application._update_recent_forms): Nová metoda.
	(Application._recent_forms_menu_items): Nová metoda.
	(Application.run_form): Aktualizuj menu poslednì spu¹tìných
	formuláøù.
	(Application.recent_forms_menu): Nová meotda.
	(recent_forms_menu): Nová funkce.
	(Application.on_command): O¹etøuj pøíkaz `COMMAND_CLEAR_RECENT_FORMS'.
	(Application.can_clear_recent_forms): Nová metoda.

	* pytis/form/commands_.py: Nový pøíkaz `COMMAND_CLEAR_RECENT_FORMS'.
	Nový pøíkaz `COMMAND_CONTEXT_MENU_ACTION'.
	

2005-12-27  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._STATUS_FIELDS): Nová polo¾ka
	'data-changed'.
	(ListForm._show_data_status): Nová metoda.
	(ListForm.on_data_change, ListForm._refresh, ListForm.focus):
	Volej ji.

	* pytis/form/form.py (PopupEditForm._create_form_parts): Povol
	horizontální expanzi obsahu formuláøe v sizeru.

	* pytis/form/configui.py (_LABELS): Pøidány popisky pro volby exportu.
	(_ConfigData): Nová tøída.
	(_MemData): Tøída zru¹ena.
	(ConfigForm.__init__): Nastavuj `mode' v¾dy na `MODE_EDIT'.
	Inicializuj select a vyber první øádek z datového objektu.
	(ConfigForm._commit_form): Metoda zru¹ena/
	(ConfigForm._on_apply): Nová metoda.
	(ConfigForm._buttons): Vyu¾ívej ji.  Vytváøej výsledek skládáním
	tuplù a u¹etøi tak pøevod na list.

2005-12-22  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/form.py (PopupForm._on_parent_close): Testuj, zda ji¾
	okno není po smrti.

	* pytis/form/configui.py: Update docstringu.
	(_LAYOUT): Definuj jako tuple dvojic, ne jako slovník.
	(config_menu_items, ConfigForm._layout): Respektuj to.

	* pytis/form/application.py (Application.run_form): Pokud není
	Editformu pøedán argument select_row, nastavuj `mode' na
	`MODE_INSERT'.
	(Application.new_record): Nenastavuj EditFormu afgument `new', ale
	`mode'.

2005-12-21  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._create_form_parts): Po vytvoøení
	gridu volej self._update_colors()
	(ListForm._update_colors): Nová metoda.
	(ListForm._create_grid): Nenastavuj barvy zde, dìlej to v
	`_update_colors()'.
	(ListForm._update_grid): Namísto `_update_label_colors()' volej
	`_update_colors()'.
	(ListForm._update_label_colors): Zru¹en argument `grid'.  Pou¾ívej
	`self._grid'.

	* pytis/form/inputfield.py: Importuj `wx.lib.colourselect'.
	(ColorSelectionField._create_button):
	Namísto obuyèejného 'wx.Button' vytváøej
	`wx.lib.colourselect.ColourSelect'.
	(ColorSelectionField._set_value): Namísto `SetBackgroundColour()'
	volej `SetColour()'.

	* pytis/util/configuration.py
	(Configuration._Option_row_focus_bg_color): Update docstringu.
	(Configuration._Option_grouping_background_downgrade): Nová
	konfiguraèní volba.
	(Configuration._Option_export_directory) 
	(Configuration._Option_export_encoding): Update docstringu.

	* pytis/form/form.py (PopupEditForm._init_attributes): Arguemnt
	`disable_new_button' pøejmenován na `disable_next_button'.
	(PopupEditForm._create_buttons): `self._disable_new_button' ->
	`self._disable_next_button'.
	(PopupEditForm._buttons): Nová metoda.
	(PopupEditForm._create_buttons): Nenastavuj tlaèítkùm labely.  Tím
	budou vytvoøena "Stock Buttons", která mají label automaticky a
	navíc ikonu.  Vytváøej tlaèítka podle informací ze `self._buttons()'.
	(PopupEditForm._create_additional_buttons): Nová metoda.
	(TitledForm._create_title_bar): Tiskové tlaèítko vytváøej bez okraje.
	(PopupEditForm._create_additional_buttons): Zru¹eno.
	(_on_submit): Zru¹eno.
	(_on_cancel): Zru¹eno.
	(PopupEditForm._buttons): Nevyu¾ívej zru¹ené metody a volej
	handler rovnou pomocí `lambda'.

	* pytis/form/application.py (Application.run_form): Nenastavuj
	`mode' na MODE_INSERT, pokud není konstruktoru EditForm pøedán
	argument `select_row'.

	* pytis/form/configui.py (ConfigForm._create_view_spec)
	(ConfigForm._create_data_object): Kosmetické úpravy.
	(ConfigForm.__init__): Nová metoda.
	(ConfigForm._create_view_spec.cleanup): Zru¹eno,
	(ConfigForm._create_view_spec): Nenastavuj políèkùm `default'.
	(ConfigForm._commit_form): Nová metoda.
	(config_menu_items): Nová funkce.
	(ConfigForm._buttons): Nová metoda.
	(config_menu_items): Doplnìn docstring.
	(_LAYOUT): Doplnìn layout `export'.

2005-12-20  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/__init__.py (Module): Importuj `configui'.

	* pytis/form/configui.py (Module): Nový modul.

	* pytis/form/list.py (CodebookForm._on_idle): Pokud po¾adovaný
	sloupec pro `begin_search' není v columns, nepokou¹ej se
	nastartovat inkrementální vyhledávání a tuto skuteènost loguj.
	(ListForm._init_attributes): Pokus se naèíst seznam sloupcù z
	upo¾ených parametrù.
	(ListForm._column_width): Pokus se zjistit ¹íøku sloupce z
	ulo¾ených parametrù.
	(ListForm._update_grid): Pokud do¹lo ke zmìnì poøadí nebo poètu
	sloupcù, ukládej seznam sloupcù do stavových parametrù.
	(ListForm._on_label_drag_size): Ukládej novou velikost sloupce do
	stavových parametrù.
	(ListForm._on_size): Neignoruj sloupce s nulovou velikostí ve
	specifikaci.
	(ListForm._on_label_paint): Titulek sloupce zji¹»uj pøes
	`column_label', nikoli `label'.

	* pytis/form/application.py: Importuj `cPickle' jako `pickle'.
	(Application): Aktualizován docstring.
	(Application.OnInit): Událost uzavøení hlavního okna aplikace
	o¹etøuj voláním `self._on_frame_close()'.  Naèítej a obnovuj
	konfiguraci z externího zdroje.
	(Application._spec): Argument `default_value' pøejmenován na
	`default'.  V¹echny pøípadné klíèové argumenty pøedávej metodì
	`get()' resolveru.
	(Application._config_name, Application._on_frame_close)
	(Application._read_config, Application._write_config)
	(Application._cleanup): Nové metody.
	(Application.exit): Ve¹keré ukonèovací akce pøesunuty do
	`_cleanup()'.  Zde pouze zavøi hlavní okno.
	

	* pytis/form/form.py (Form._form_state_key) 
	(Form._get_state_param, Form._set_state_param): Nové metody.

	* pytis/util/resolver.py (ResolverModuleError.__init__): Zprávu
	pøedávej pøedkovi jako øetìzec, ne tuple.
	(ResolverSpecError): Úprava docstringu.
	(ResolverSpecError.__init__): Zprávu pøedávej pøedkovi jako
	øetìzec, ne tuple.

	* pytis/util/configuration.py (Configuration.Option.init_value):
	Nastavuje také `self._initial_value'.
	(Configuration._Option_form_state): Buï potomkem `Option', nikoli
	`_StringOption'.
	(Configuration._Option_startup_forms._DEFAULT): Výchozí hodnotou
	nech» je prázdný slovník, nikoli None.
	(print_options): Zru¹eno.
	(Configuration.options, Configuration.description) 
	(Configuration.type, Configuration.changed): Doplnìn docstring.
	(ConfigDB): Zru¹eno (pøesunuto do pytis-extensions).
	(Configuration.Option.init_value, Configuration.Option.set_value):
	Do `self._initial_value' ukládej v¾dy kopii hodnoty.

2005-12-19  Tomas Cerha  <cerha@brailcom.org>

	* pytis/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_search.sorting_condition):
	`pytis.data.Value' -> `Value'.
	(DBColumnBinding.__init__): Aktualizován docstring.

	* pytis/presentation/spec.py: 
	(HGroup, VGroup, LHGroup, LVGroup): Nové tøídy.
	(ViewSpec.__init__): Aktualizován docstring.  Pøi výpoètu výchozí
	hodnoty pro `columns' vynechávej sloupce s `column_width' rovným nule.
	(ViewSpec.field): Aktualizován docstring.

	* pytis/util/configuration.py (Configuration.Option._OPTION):
	Konstanta zru¹ena.
	(Configuration.Option._CMDLINE): Nová konstanta.
	(Configuration.Option._LONG_OPTION): Nová konstanta.
	(Configuration.Option.__init__): Inicializuj také
	`self._initial_value'.
	(Configuration.Option.name): Nová metoda.
	(Configuration.Option.set_value): Nový nepovinný argument
	`initialization'.  Pokud je pravdivý, pøenastav také
	`self._initial_value'.
	(Configuration.Option.changed): Nová metoda.
	(Configuration.Option.long_option): Pokud není definováno
	`_LONG_OPTION', vytváøej argument pro 'getopt' automaticky podle
	typu.
	(Configuration.Option.type): Nová metoda.
	(Configuration._StringOption, Configuration._BooleanOption)
	(Configuration._ColorOption, Configuration._NumericOption): Nové
	tøídy.
	(Configuration._FileOption): Buï potomkem `_StringOption'.
	(Configuration._HiddenOption, Configuration._CommandlineOption):
	Nové tøídy.
	(Configuration._Option_*): Vyu¾ívej nových tøíd k urèení typu
	ka¾dé volby a dal¹ích parametrù.
	(Configuration._Option_form_state): Nová konfiguraèní volba.
	(Configuration._parse_command_line_options): Pou¾ívej "list
	comprehension" namísto map a filter.
	(Configuration._read_configuration_file): Pøi volání
	`Option.set_value()' nastavuj `initialization' na True.
	(Configuration.serial_number): Metoda zru¹ena.
	(Configuration.options, Configuration.description, Configuration.type) 
	(Configuration.changed): Nové metody.

	* pytis/form/inputfield.py (CodebookField._on_invoke_selection):
	Pokud je `alternate' True, nastavuj `begin_search' na
	`value_column' enumerátoru.

2005-12-16  Tomas Cerha  <cerha@brailcom.org>

	* pytis/util/configuration.py (Configuration.Option.HIDDEN)
	(Configuration.Option.VISIBLE,
	Configuration.Option.COMMENTED_OUT): Konstanty zru¹eny.
	(Configuration.Option._DEFAULT) 
	(Configuration.Option._DEFAULT_STRING) 
	(Configuration.Option._OPTION, Configuration.Option._ENVIRONMENT) 
	(Configuration.Option._VISIBLE): Nové konstanty.
	(Configuration.Option.long_option): Jako výchozí hodnotu pou¾ívej
	konstantu `_OPTION'.
	(Configuration.Option.environment): Jako výchozí hodnotu pou¾ívej
	konstantu `_ENVIRONMENT'.
	(Configuration.Option.default): Jako výchozí hodnotu pou¾ívej
	konstantu `_DEFAULT'.
	(Configuration.Option.default_string): Jako výchozí hodnotu pou¾ívej
	konstantu `_DEFAULT_STRING', pokud není `None'.
	(Configuration.Option.visible): Jako výchozí hodnotu pou¾ívej
	konstantu `_VISIBLE'.
	(Configuration._Option_*): Pokud to lze, pøedefinovávej pouze
	pøíslu¹né konstanty namísto metod `default', `default_string',
	`visible', `long_option' a `environment'.
	(Configuration.dump_config_template): S návratovou hodnotou
	`Option.visible()' pracuj jako s boolean pøíznakem.  Volby které
	nejsou skryté jsou v¾dy zakomentované.

	* pytis/form/dialog.py (Calendar._COMMIT_BUTTON)
	(BugReport._COMMIT_BUTTON): Nové konstanty.
	(GenericDialog._can_commit): Testuj zda jde o tlaèítko pomocí
	`self._button_label()'.

2005-12-15  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/commands_.py: Nový pøíaz `COMMAND_FORCE_COMMIT_DIALOG'.
	(DEFAULT_COMMAND_KEYS): Nová klávesa pro `COMMAND_FORCE_COMMIT_DIALOG'.

	* pytis/form/search.py (_COMMIT): Konstanta zru¹ena.
	(SFDialog._commit_dialog): Metoda zru¹ena.
	(SearchDialog._COMMIT): Pøejmenováno na `_COMMIT_BUTTON'.
	(FilterDialog._COMMIT): Pøejmenováno na `_COMMIT_BUTTON'.
	(SortingDialog._COMMIT): Pøejmenováno na `_COMMIT_BUTTON'. 
	(SortingDialog._commit_dialog): Metoda zru¹ena.

	* pytis/form/dialog.py (BugReport._close_dialog): Nevy¾aduj ¾ádné
	argumenty.
	(Dialog._COMMIT_BUTTON): Nová konstanta.
	(GenericDialog._can_commit): Testuj rovnou pøítomnost widgetu v
	`self._buttons', ne jeho wx id ve slovníku id.
	(_commit_dialog): Nový argument 'force'.
	(GenericDialog.on_command): O¹etøuj pøíkaz
	`COMMAND_FORCE_COMMIT_DIALOG'.
	(InputDialog._COMMIT_BUTTON): Nová konstanta.

	* pytis/util/configuration.py
	(Configuration._Option_config_file.environment): `EBASCONFIG' ->
	`PYTISCONFIG'.
	(Configuration._Option_def_dir.environment): `EBASDEFDIR' ->
	`PYTISDEFDIR'.
	(Configuration._Option_doc_dir.environment): `EBASDOCDIR' ->
	`PYTISDOCDIR'.

	* pytis/form/list.py (ListForm._on_toggle_column): Kontroluj
	mazání posledního sloupce pouze pokud jde skuteènì o mazání...

2005-12-14  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/commands_.py: Nový pøíkaz `COMMAND_RESET_COLUMNS'.

	* pytis/form/screen.py (MItem.create): Kosmetické úpravy.
	(CheckItem.state): Nová metoda.
	(CheckItem._on_ui_event): Vyu¾ívej ji.
	(Menu.create): Pøednastav `state' polo¾ek typu `RadioItem',
	`CheckItem'.

	* pytis/form/_grid.py (ListTable.__init__): Neinicializuj
	`self._TYPE_MAPPING' zde.
	(ListTable.__init__): Namísto procházení sloupcù zde volej
	`self._update_columns()'.
	(ListTable._wx_type): Nová metoda.  Zde inicializuj
	`self._TYPE_MAPPING'.
	(ListTable._update_columns): Nová metoda.  Namísto `self._column_info'
	inicializuj `self._columns'.
	(ListTable.update): Nový argument `columns'.  Aktualizuj poka¾dé
	mno¾inu sloupcù.
	(ListTable._cached_value, ListTable.column_id) 
	(ListTable.column_label, ListTable.GetValue, ListTable.GetValue) 
	(ListTable.SetValue, ListTable.GetTypeName, ListTable.GetAttr):
	namísto `self._column_info' pou¾ívej `self._columns'.

	* pytis/form/dualform.py
	(PostponedSelectionDualForm._on_main_selection): Skuteènì o¹etøuj
	pøíkpad, kdy `row' je None.
	
	* pytis/form/list.py (ListForm._init_attributes): Nenastavuj zde
	`_orig_columns' ale rovnou `_columns'.  Do `_columns' dej pouze
	viditelné sloupce.  Inicializuj atributy `_column_to_move' a
	`_column_move_target'.
	(ListForm._create_grid): Nenastavuj zde `_columns'.  Pøedávej
	`_columns' konstruktoru `ListTable'.  Nastav mód výbìru v gridu na
	výbìr øádkù.  Namísto `wx.grid.EVT_GRID_LABEL_LEFT_CLICK' o¹etøuj
	`wx.EVT_LEFT_DOWN' a `wx.EVT_LEFT_UP'.  Názvy handlerù událostí
	pøejmenovány podle konzistentìj¹ího schematu - viz dále.  O¹etøuj
	také `wx.grid.EVT_GRID_COL_SIZE' a `wx.EVT_MOTION'.
	(ListForm._update_grid): Nové argumenty `delete_column',
	`insert_column' a `inserted_column_index'.
	(ListForm._update_grid.notify): Nová funkce.
	(ListForm._update_grid): Vyu¾ívej ji.  Provádìj také skrývání a
	zobrazování sloupcù a související úpravy v `_columns'.
	(_on_label_left): Zru¹eno.  Øazení je nyní provádìno v rámci
	`_on_label_left_up', ale jen pokud nejde o pøesun sloupce.
	(_on_column_header_paint): Pøejmenováno na `_on_label_paint'.
	(_on_label_paint): Nová metoda.  Kromì toho, co bylo døíve v
	`_on_column_header_paint' také vykresluj ¹ipeèku pøi pøesunu
	sloupce a trojúhelník indikující tøídìní kresli o kousek vìt¹í.
	(ListForm._on_label_right_down): Nové polo¾ky pro skrývání a
	zobrazování sloupcù.  Nenastavuj pozici menu ruènì -- pøenech to
	na wx.  Respektuj zmìnu typu o¹etøovaného eventu
	`wx.grid.EVT_GRID_LABEL_LEFT_CLICK' -> `wx.EVT_LEFT_DOWN'.
	(ListForm._on_label_left_down): Nová metoda.
	(ListForm._on_label_left_up): Nová metoda.
	(ListForm._on_label_mouse_move): Nová metoda.
	(ListForm._on_label_drag_size): Nová metoda.
	(ListForm._on_toggle_column): Nová metoda.
	(ListForm.on_command): O¹etøuj `ListForm.COMMAND_TOGGLE_COLUMN'.
	(ListForm._on_delete_record): Úprava komentáøe.
	(ListForm._on_size): Nevy¾aduj arguemnt `event'.  Pokud není
	pøedán, pøepoèítej v¹e bez ohledu na to, zda se zmìnila celková
	velikost.
	(ListForm.Close): Zavírej editor, pouze pokud je¹tì ¾ije.
	(CodebookForm): Upraven docstring.
	(SideBrowseForm._init_attributes): Nenastavuj `_orig_columns'.
	Zapamatuj si vazební sloupec v atributech.
	(SideBrowseForm._default_columns): Nová metoda.  Zde provádìj
	skrytí vazebního sloupce.
	(ListForm._on_label_right_down): V menu sloupcù zobrazuj úplnì
	v¹echna políèka z fields.
	(ListForm._update_grid): Nový argument `reset_columns'.
	(ListForm._on_label_right_down): Pøidána polo¾ka pro vrácení
	výchozích sloupcù.
	(ListForm._on_reset_columns): Nová metoda.
	(ListForm.on_command): O¹etøuj pøíkaz `COMMAND_RESET_COLUMNS'.

2005-12-12  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/_grid.py (ListTable.__init__): Pødán assert na
	argument `columns' a ka¾dý jeho prvek.  Naopak odebrán assert na
	styl získaný z FieldSpec().

	* pytis/presentation/spec.py (FieldSpec.__init__): Pøidán assert
	na `style'.

	* pytis/form/application.py (Application.refresh): Pracuj s
	aktivním oknem, nikoli s posledním oknem na zásobníku.

2005-12-09  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (Application.__init__): Neinicializuj
	atribut `self._window_menu_item'.
	(Application._update_window_menu): Neukládej polo¾ky menu do 
	`self._window_menu_item' a vyu¾ívej funkce `state' pøedané
	konstruktoru `RadioItem'.

	* pytis/form/screen.py (MItem): Buï potomkem `object'.
	(MItem._WX_KIND): Nová konstanta.
	(MItem._wx_kind): Metoda zru¹ena
	(MItem.create): Pou¾ívej `_WX_KIND' namísto `_wx_kind()'.
	(RadioItem): Buï potomkem CheckItem.
	(CheckItem): Nová tøída.

	* pytis/form/command.py: Update docstringu.

	* pytis/form/__init__.py: `_commands' -> `commands_'.

	* pytis/form/_commands.py: Pøejmenováno na `commands_.py'.

	* pytis/form/dualform.py
	(PostponedSelectionDualForm._on_main_selection): O¹etøuj také
	pøíkpad, kdy `row' je None.

	* pytis/presentation/field.py (PresentedRow.__getitem__): Nastav
	dirty na False je¹tì pøed voláním pøepoèítávací funkce a umo¾ni
	tak zji¹tìní pùvodní hodnoty (pøed pøepoèítáním) v jejím prùbìhu.

	* pytis/form/list.py (ListForm._modify_column_width): Aktualizuj
	také velikost celého gridu a tím i scrollbary.  Pokud je vypoètná
	nová ¹íøka záporná, nedìlej nic.
	(ListForm._filter_by_cell): Filtruj pouze pokud se zdaøí pøidání
	podmínky do dialogu.  Pokud ne, zobraz chybovou zprávu.
	

	* pytis/form/search.py (SFDialog.append_condition): Pokud sloupec
	není v sfs_columns, vra» False, jinak vracej True.
	(SFDialog.append_condition): Testuj pøítomnost v sfs_columns hned
	na zaèátku.  Nastavuj správnì hodnoty urèující typ spojovacího
	operátoru pøi konstrukci widgetù.  Zru¹en argument `and_'.
	

2005-12-08  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/list.py (ListForm._on_delete_record): Pøedávej
	výsledek 'on_delete_record' pøes návratovou hodnotu funkce
	'blocked_code'.

2005-12-07  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py
	(GenericCodebookField._run_codebook_form): Nepøedávej formuláøi
	argument 'columns'.
	(GenericCodebookField.__init__): Neo¹etøuj `AttributeError' pøi
	získávání specifikace èíselníku.

	* pytis/form/list.py (ListForm._modify_column_width): Nová metoda.
	(ListForm.on_command): O¹¹etøuj pøíkazy `COMMAND_ENLARGE_COLUMN' a
	`COMMAND_CONTRACT_COLUMN'.
	(ListForm._default_columns): Nová metoda.
	(ListForm._init_attributes): Pou¾ívej ji.
	(CodebookForm._init_attributes): Naèítej specifikaci
	`CodebookSpec' a ukládej ji do atributu `_cb_spec'.
	(CodebookForm._default_columns): Nová metoda.
	(CodebookForm._default_sorting): Vyu¾ívej `self._cb_spec'.

	* pytis/form/_commands.py: Nové pøíkazy `COMMAND_ENLARGE_COLUMN' a
	`COMMAND_CONTRACT_COLUMN'.

	* pytis/form/search.py (FilterDialog.__init__): Zru¹eno.
	(SFDialog.run): Nové argumenty `data' a `filter'.

	* pytis/form/form.py (LookupForm.can_sort_column): Pro cyklické
	pøepínání smìru tøídìní vracej v¾dy pravdu.
	(LookupForm._lf_sf_dialog): Konstruktoru FilterDialog nepøedávej
	datový objekt ani aktuální podmínku.
	(LookupForm._on_filter): Pøedávej datový objekt a aktuální
	podmínku volání `run_dialog()'.

	* pytis/form/application.py (Application.run_procedure): Argumett
	`block_refresh' pøejmenován na `block_refresh_'.

2005-12-06  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/_commands.py: Nové pøíkazy `ListField.COMMAND_SELECT' a
	`ListField.COMMAND_SHOW_SELECTED'.

	* pytis/form/application.py (Application.run_procedure): Nový
	argument `block_refresh'.
	(block_refresh): Pøedávej v¹echny argumenty.

	* pytis/form/inputfield.py (ListField._create_ctrl): Neu¹etøuj
	událost zru¹ení výbìru.  O¹etøuj aktivaci polo¾ky.  Nenastavuj
	`self._last_deselected_item'.
	(ListField._on_deselect): Zru¹eno.
	(ListField._on_select): Výbìr hned zase zru¹.
	(ListField._on_activation): Nová metoda.  Zde provádìj výbìr
	aktivivané polo¾ky.
	(ListField._load_list_data): Pokud v nových datech není minulá
	polo¾ka, nevybírej nic.
	(ListField._selected_item): Metoda zru¹ena.  Nyní vystaèíme se
	stejnojmenným atributem.
	(ListField._set_selection): Namísto nastavování výbìru prostøedky
	ListCtrl pouze zmìò barvu pozadí vybraného políèka zapamatuj si
	jeho index v `self._selected_item' a nastav mu focus.  Tím
	umo¾níme nezávislost aktuální buòky (na které je focus) a
	vybrané/zvýraznìné buòky.
	(ListField._set_value): Pokud jsou data dirty, pøenaèti je.
	Zpøehlednìno.
	(ListField.get_value, ListField.can_invoke_edit_form): Namísto
	metody `self._selected_item' pou¾ívej stejnojmenný atribut.
	(ListField._menu): Pøidej nové pøíkazy `COMMAND_SELECT' a
	`COMMAND_SHOW_SELECTED'.
	(ListField.on_command): O¹etøuj nové pøíkazy `COMMAND_SELECT' a
	`COMMAND_SHOW_SELECTED'.

	* pytis/form/form.py (Refreshable._block_refresh): Nech» je èíslo
	urèující úroveò vnoøení blokace.
	(Refreshable.block_refresh): Nastavuj atribut `_block_refresh'
	v¾dy tøídì `Refreshable', ne tøídì, pro kterou je metoda volána.
	(Refreshable.refresh): Vyvolej výjimku, pokud se `_block_refresh'
	dostane do záporné hodnoty.
	(LookupForm._on_search): Pou¾ij `block_refresh' namísto ruèního
	blokování refreshe zde.

	(Form._create_print_menu): Odstranìn zapomenutý print.
	(Refreshable.block_refresh): Pøedávej volané funkci v¹echny
	argumenty. Pøi ka¾dém volání hodnotu atributu `_block_refresh'
	inkrementuj a nakonec zase dekrementuj.

	* pytis/form/list.py (ListForm._on_select_cell): Volej callback
	`CALL_USER_INTERACTION' pouze pokud není grid uvnitø
	BeginBatch/EndBatch, co¾ jsou zmìny provádìné v rámci
	`_update_grid()' a ty nejsou interaktivní.
	(ListForm._init_attributes): Neinicializuj atribut
	`_block_refresh'.
	(ListForm._on_delete_record): Pou¾ij `block_refresh' namísto
	ruèního blokování refreshe zde.
	(ListForm._refresh): Netestuj blokování refreshe zde.

	* pytis/form/dualform.py (DualForm.focus): Nová metoda.
	(DualForm._on_focus): Metoda zru¹ena.
	(DualForm.__init__): Pøi události `EVT_SET_FOCUS' volej
	`self.focus()'.

2005-12-05  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (block_refresh): Nová funkce.

	* pytis/form/search.py (SFSDialog._create_choice) 
	(SFSDialog._create_button, SFSDialog._create_text_ctrl): Pou¾ívej
	`SetMinSize' nam9sto `SetSize'.

	* pytis/form/form.py (Form._on_print_menu): Zobrazuj menu pod
	tlaèítkem.
	(Refreshable._block_refresh): Nová konstanta.
	(Refreshable.block_refresh): Nová metoda tøídy.
	(Refreshable.refresh): Volej `self._refresh', pokud není refresh
	blokován.
	(Refreshable._refresh): Nová metoda.

	* pytis/form/dialog.py (GenericDialog.focus): Nová metoda.
	(GenericDialog._finish_dialog): (Staro)nová metoda.
	(GenericDialog._end_modal): Volej `self._finish_dialog()'

	* pytis/form/dualform.py (DualForm.on_command): Nevy¾aduj argument
	`form' u pøíkazu COMMAND_PRINT.
	(ShowDualForm.refresh, BrowseShowDualForm.refresh)
	(BrowseDualForm.refresh): Pøejmenováno na `_refresh'.
	(ShowDualForm._refresh, BrowseShowDualForm._refresh)
	(BrowseDualForm._refresh): Pøedávej argument `when'.

	* pytis/form/list.py (BrowseForm.on_command): Proveï pøíkaz
	COMMAND_PRINT i pokud pokud není nastaven argument `form'.
	(ListForm._on_handled_command): Definuj argument `norefresh' pøímo
	a nevybírej jej z kwargs.
	(ListForm.refresh): Pøejmenováno na `_refresh'.
	(FilteredBrowseForm.filter, ListForm._filter)
	(ListForm._on_sort_column, ListForm.on_command): Pou¾ívej
	`self._refresh', ne `self.refresh
	

2005-12-01  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/dialog.py (GenericDialog._on_idle): Focus nastavuj
	pouze pokud je dialog ji¾ zobrazen.

	* pytis/form/dualform.py (DualForm.on_command): Pøíkaz
	`COMMAND_PRINT' nepøedávej aktivnímu formuláøi, ale pou¾ij jeho
	argument `form'.

	* pytis/form/form.py (Form.__init__): Nevytváøej tiskové menu v
	menubaru aplikace.  Vytvoø jej jen jako PopupMenu.
	(Form._create_print_menu): Nová metoda.
	(Form._print_menu): Metoda zru¹ena.
	(Form._on_print_menu): Nová metoda. 
	(TitledForm._create_title_bar): Pøidej tlaèítko tisku.
	(Form._on_print_menu): Zobrazuj menu uprostøed tlaèítka.

	* pytis/form/application.py (Application.add_menu, add_menu): Zru¹eno.

	* pytis/form/list.py (BrowseForm.on_command): O¹etøuj
	`COMMAND_PRINT' pouze pokud je argument `form' tohoto pøíkazu
	roven `self'.

	* pytis/form/screen.py (MenuBar.add_menu): Zru¹en argument
	`form'.  Nepøedávej jej volání `_replace_menu'.

2005-11-30  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/_commands.py (DEFAULT_COMMAND_KEYS): Nastav
	`Dialog.COMMAND_COMMIT_DIALOG' na `Enter', ne `Ctrl+Enter'.

	* pytis/form/dialog.py (GenericDialog.__init__): Neinicializuj
	atribut `self._default_button'.  Inicializuj `self._want_focus'.
	(GenericDialog._create_buttons): Namísto `self._default_button'
	nastavuj `self._want_focus'.  Namísto `wx.EVT_SET_FOCUS' o¹etøuj
	`wx.EVT_IDLE'.  Nevolej `dialog.SetDefaultItem()'.
	(GenericDialog._create_icon): Namísto jména souboru ber jako
	argument wx identifikátor ikony.  Získávej ikonu pøes
	`wx.ArtProvider'.
	(GenericDialog._finish_dialog): Metoda zru¹ena
	(GenericDialog._can_commit): Nová metoda.
	(GenericDialog._end_modal): Nevolej `_finish_dialog'.
	(GenericDialog._on_set_focus): Metoda zru¹ena.
	(GenericDialog._on_idle): Nová metoda.
	(GenericDialog._navigate): Nová metoda.
	(GenericDialog._commit_dialog): Zji¹»uj zda aktivní widget mù¾e
	ukonèit dialog pomocí `self._can_commit()'.  Pokud ne, vyvolej
	navigaèní událost.
	(Message.ICON_INFO, Message.ICON_QUESTION, Message.ICON_WARNING)
	(Message.ICON_ERROR, Message.ICON_TIP): Pøiøaï konstantám hodnoty
	wx identifikátorù ikon.
	(Login._create_content): Neo¹etøuj `wx.EVT_KEY_DOWN' na vstupních
	políèkách.  Pou¾ívej `self._want_focus' namísto pøímého
	nastavování focusu.
	(Login._on_key_down): Metoda zru¹ena.
	(Login._navigate): Metoda zru¹ena.
	(Login._on_show): Zru¹eno.
	(OperationDialog._on_show): Volej `wx_yield_()'.
	(Calendar._create_content): Nastavuj `self._want_focus'.
	(Calendar._on_set_focus): Metoda zru¹ena.
	(Calendar._can_commit): Nová metoda.
	(RunFormDialog._customize_result): O¹etøuj také pøípad odeslaného
	dialogu na widgetu kalendáøe.
	(BugReport._create_content): Nastavuj `self._want_focus'.
	(_on_set_focus): Metoda zru¹ena.

	* pytis/form/_grid.py (ListTable._get_row): Update docstringu.
	(ListTable.row): Pokud je øádek vrácený z `_get_row()' instancí
	PresentedRow, vra» jej pøímo.

	* pytis/form/list.py (ListForm._is_editable_cell): Update komentáøe.

2005-11-29  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/dialog.py (Calendar._create_content): Upravuj
	velikost pouze pokud je verze wxWidgets men¹í ne¾ 2.6.

	* pytis/form/list.py (CodebookForm._default_sorting): O¹etøi
	výjimku resolveru.

	* pytis/form/inputfield.py (GenericCodebookField.__init__):
	Nespoléhej na `self.spec()' pøed voláním rodièovského
	konstruktoru.  Radìji vyber odkaz na FieldSpec pøímo z argumentù.

2005-11-28  Tomas Cerha  <cerha@brailcom.org>

	* pytis/util/configuration.py
	(Configuration._Option_dbhost.long_option): Nová metoda.
	(Configuration._Option_dbport): Nová konfiguraèní volba.
	(Configuration._Option_dbconnection.default): Pou¾ívej novou volbu
	`dbport'.

	* pytis/form/list.py (ListForm._post_selection_hook): Na
	`DataAccessException' se odkazuj celým jménem.
	(ListForm.on_command): Neignoruj výjimky pøi volání metody
	on_command aktivního vstupního políèka.

	* pytis/form/inputfield.py (ListField._set_selection): Pøidán
	komentáø.
	(ListField._create_ctrl): O¹etøuj události koleèka my¹i.
	(GenericCodebookField._select_row_arg): Vracej None, pokud je
	Pythonová hodnota instance Value nepravdivá.
	(InputField.CALL_FIELD_CHANGE, InputField.CALL_SKIP_NAVIGATION):
	Aktualizace docstringu.
	(ListField._on_change): Pøejmenováno na `_on_select'.  Pokud je
	pole needitovatelné, vra» výbìr na pøedchozí vybranou polo¾ku.
	(ListField._create_ctrl): O¹etøuj wx událost výbìru volámím
	`_on_select' a zru¹ení výbìru volámím `_on_deselect'.
	(ListField._disable): Nenastavuj widget nako needitovatelný, pouze
	zmìò barvu.
	(ListField._set_selection): Nový argument `make_visible'.
	(GenericCodebookField._read_cb_spec): Metoda zru¹ena.
	(GenericCodebookField.__init__): Naèítej `CodebookSpec' zde.
	(CodebookField._create_widget, ListField._create_ctrl): Nevolej
	`self._read_cb_spec()'.

2005-11-25  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/field.py (PresentedRow._init_row.genval):
	Odstranìn hack umo¾òující pou¾ití computer namísto default.

	* pytis/form/inputfield.py (__getattr__): Zru¹eno.
	(_on_enumerator_change): Nepøenaèítej data hned, pouze nastav
	pøíznak.
	(ListField._set_value): Pøedávej v¹echny potøebné argumenty metodì
	`ListCtrl.SetItemState()'.  Zru¹ výbìr i v pøípadì nenalezení
	po¾adované hodnoty.
	(ListField._create_ctrl): Nastavuj pøíznak `self._data_dirty'.
	(ListField._on_idle): Nová metoda.
	(ListField._load_list_data): Nuluj pøíznak `self._data_dirty'.
	(ListField._set_selection, ListField._set_value): Pøi nastavování
	výbìru zaka¾ zpracování událostí listu.

2005-11-24  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (ListField._load_list_data): Zachovávej
	aktuální hodnotu i po pøenaètení dat.

	* pytis/form/list.py (CodebookForm._default_sorting): Nová metoda.

	* pytis/form/form.py (EditForm.__init__): Volej
	`self._select_row()' opìt jen pøi inicializaci novéhho záznamu.
	Problém neinicializovaných runtime filtrù byl vyøe¹en dne¹ní
	opravou `DescriptiveDualForm._do_selection'.

	* pytis/form/dualform.py (DescriptiveDualForm._do_selection):
	Nepøedávej pøímo PresentedRow -- namísto `set_row()' volej radìji
	`select_row()' a datovým øádkem jako argumentem.

2005-11-23  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/field.py (PresentedRow._init_row.genval):
	Inicializuj hodnotu voláním 'default' funkce pouze pokud jde o
	nový øádek.  Pøidán HACK, který doèasnì pova¾uje computery s
	prázdným depends za default funkce a volá je tedy také jen pøi
	inicializaci nového záznamu.

	* pytis/form/form.py (EditForm.__init__): Volej
	`self._select_row()' v¾dy kvùli inicializaci PresentedRow a
	pota¾mo runtime filtrù.
	(EditForm._select_row): Odstranìn neaktuální komentáø.

	* pytis/presentation/spec.py (CodebookSpec.__init__): Nový
	arguemnt `sorting'.
	(CodebookSpec.sorting): Nová metoda.

	* pytis/form/inputfield.py (ListField._load_list_data): Spojuj
	víceøádkové hodnoty.

2005-11-22  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (ListField.__getattr__): Nevolej zde
	`_load_list_data()'.
	(ListField.__getattr__): Nová metoda.
	(ListField._on_enumerator_change): Nedìlej nic, pokud je list ji¾
	po smrti.

	* pytis/data/dbdata.py (DBDataPostgreSQL.__init__): Kosmetická
	úprava (nepøedávej lokální promìnné do lambda funkce pøes klíèové
	arguemnty).

	* pytis/presentation/spec.py (FieldSpec.__init__): Kosmetická úprava.

	* pytis/presentation/field.py (PresentedRow.__getitem__): Pro
	virtuální políèko, které je¹tì nebylo nastaveno a nemá computer
	dosazuj automaticky hodnotu None.
	(PresentedRow.__setitem__): Nastavuj správnì i virtuální políèka.

	* pytis/data/types_.py (DataEnumerator._retrieve): Pøedávej
	konstruktoru výjimky øetìzcovou reprezentaci filtrovací podmínky.
	(MutableEnumerator.__init__): Inicializuj atribut `_running_hooks'.
	(MutableEnumerator._update): Blokuj vnoøená volání.

	* pytis/form/form.py (RecordForm.select_row): Akceptuj také
	'position' 'None'.

2005-11-21  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (InputField.create): Zprùhlednìno
	mapování typu pøes 'selection_type'.
	(InputField._set_disabled_color): Nová metoda.
	(InputField._set_value): Pøijímej argument 'value'.
	(TextField._set_value): Namísto nastavování barvy pozadí zde
	pou¾ívej `self._set_disabled_color()'.
	(Invokable): Podìï také `object'.
	(Invocable.on_command): Pøedka volej pomocí `super()'.
	(GenericCodebookField): Nová tøída.
	(CodebookField): Podìï také `GenericCodebookField'.
	(CodebookField._create_widget): Vyu¾ívej `_read_cb_spec()' z `GenericCodebookField'.
	(CodebookField._on_invoke_selection): Vyu¾ívej `_run_codebook_form()' z `GenericCodebookField'.
	(ListField): Kompletnì pøepsáno.  Zru¹eny v¹echny hacky s
	`refvalue', `choose_key' apod.

	* pytis/presentation/field.py (PresentedRow._process_fieldspec):
	Neinicializuj `self._refvalues'.
	(PresentedRow.listfield_choose): Metoda zru¹ena.
	(PresentedRow.refvalue): Pou¾ití této potlaèené metody loguj a
	vracej v¾dy None.

	* pytis/form/form.py (EditForm.on_command): Nestarej se zde o
	`ListField.COMMAND_CHOOSE_KEY'.

	* pytis/form/command.py: Úprava docstringu.

	* pytis/form/_commands.py: Nový pøíkaz
	`GenericCodebookField.INVOKE_CODEBOOK_FORM'.  Zru¹en pøíkaz
	`ListField.CHOOSE_KEY'.
	
	* pytis/data/types_.py (DataEnumerator.values): Kosmetická úprava.
	(DataEnumerator.iter): Nová metoda.

	* pytis/presentation/spec.py (FieldSpec.__init__): Loguj pou¾ití
	potlaèeného argumentu `references'.
	(FieldSpec.references): Metoda zru¹ena.
	(RefSpec): V¹e zru¹eno, ponechán jen konstruktor pro zpìtnou
	kompatibilitu.
	(SelectionType.LIST): Nová konstanta.
	(FieldSpec.__init__): Nastavuj výchozí hodnotu `selection_type'
	podle pøítomnosti `codebook'.  Aktualizován docstring.  Pøidán
	assert na kombinaci 'selection_type' a 'codebook'.

2005-11-18  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/list.py (ListForm._find_row_by_values): Není-li k
	dispozici ¾ádný øádek, vracej None.	

2005-11-18  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm.select_row): Pøedávej argument `quiet'.
	(ListForm.refresh): Volej `select_row' s nastaveným `quiet=True'.

	* pytis/form/form.py (EditForm.set_row): Nastavuj také
	editovatelnost políèek.
	(EditForm.__init__): Inicializuj editovatelnost políèek zde.
	(EditForm._init_fields): Pøejmenováno na `_set_focus_field'.
	Nestarej se zde o editovatelnost políèek, pouze nastav focus.
	(PopupEditForm._on_next): Nevolej zde `self._init_fields()'.
	(EditForm.__init__): `self._init_fields()' ->
	`self._set_focus_field()'.
	(ShowForm._create_form_parts): Pøidávej titulek do sizeru s
	nastaveným `wx.FIXED_MINSIZE'.
	(RecordForm.select_row): Instanci Value pova¾uj za klíè.
	(RecordForm._find_row_by_key): Umo¾ni tak pøedat jako `key' také
	pøímo instanci `Value' a pøedádìj ji automaticky na tuple.
	(RecordForm.select_row): Nový argument `quiet'.  Zobraz chybový
	dialog, pokud øádek nebyl nalezen a `quiet' není nastaveno.
	(LookupForm._on_sort_column, RecordForm.on_command): Pou¾ívej
	`self._current_key()' namísto `self.current_key()'.
	(LookupForm._filter): Pou¾ívej `self._current_key()', ne
	`self._row.row()', jako argument `select_row'.

	* pytis/form/inputfield.py (CodebookField._create_widget):
	Pøebírej `display_size' z `cb_spec' jen pokud je None (ne pøi
	jakékoliv nepravdivé hodnotì).
	(CodebookField._create_widget): Vytváøej display jen pokud je
	¹íøka nenulová.

	* pytis/presentation/spec.py (CodebookSpec.__init__): Úprava
	docstringu.  Loguj pou¾ití potlaèeného argumentu
	`insert_unknown_values'.
	(CodebookSpec.insert_unknown_values): Metoda zru¹ena.

2005-11-17  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (RecordForm.select_row): Doèasnì o¹etøi
	pøípad, kdy se pøedá jako position instance Value.
	(LookupForm._on_sort_column): Jako argument self.select_row()
	pou¾ij self.current_key().

2005-11-16  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (KeyHandler.__init__): Inicializuj
	`_prefix_key_sequence' zde, nikoliv jako atribut tøídy.
	(Keymap._define_key): Namísto pouhého assertu vyvolávej
	`ProgramError', pokud jde o kolidující definici prefixové klávesy.

2005-11-15  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (Application.run_form): Pøidáno
	o¹etøení zru¹ených argumentù `key' a `new' a jejich pøevedení na
	nové `select_row' a `mode'.

	* pytis/form/dualform.py (BrowseShowDualForm._create_side_form)
	(BrowseDualForm._on_show_record): Pøedávej funkci `run_form'
	argument `select_row' nikoliv `key'.
	(BrowseShowDualForm._create_side_form): Nepøedávaj konstruktoru
	`ShowForm' argument `editable=True'.

	* pytis/form/inputfield.py (ListField.on_command): Pøedávej funkci
	`run_form' argument `select_row' nikoliv `key'.

	* pytis/form/form.py (RecordForm._init_attributes): Zru¹en
	argument `key'.  Nenastavuj `self._key'.
	(RecordForm._select_row): Argument `new' konstruktoru
	`PresentedRow' nastavuj podle `self._new', nikoliv `self._key'.
	(RecordForm._run_form): Pøi vytváøení formuláøe v¾dy nastavuj
	argument `select_row', ne `key'.
	(LookupForm._filter, LookupForm._on_sort_column): Jako argument
	pro `select_row()' pou¾ívej aktuální datový øádek, ne `self._key'.
	(EditForm): Aktualizace docstringu.
	(EditForm.MODE_INSERT, EditForm.MODE_EDIT, EditForm.MODE_VIEW)
	(EditForm.__init__): Nevolej `self.select_row()', pouze v re¾imu
	vkládání záznamù inicializuj formuláø prázdným øádkem.
	(EditForm.init): Pøejmenováno na `_init_fields'.
	(EditForm.__init__, PopupEditForm._on_next): `init' ->
	`_init_fields'.
	(EditForm._init_fields): Neber v potaz editovatelnost políèka v
	PresentedRow, nastavuj editovatelnost pouze podle módu formuláøe.
	(EditForm._create_form): Pou¾ívej `self._mode' k urèení typu
	pøístupových práv.  Urèi typ práv pouze jednou na zaèátku cyklu.
	(EditForm._commit_form): Jako argument pro `data.update()'
	pou¾ívej `self._current_key()', ne `self._key'.  Pou¾ívej
	`self._mode' k zji¾dìní typu operace.
	(PopupEditForm.run): Klíè zjisti pøes `self._current_key()', ne
	`self._key'.  Zamykej pouze v editaèním re¾imu.
	(RecordForm._select_row): Zde pouze vyvolej výjimku --
	implementace pøesunuta do `EditForm'.
	(EditForm._select_row): Nová metoda.
	(EditForm._navigate): Pou¾ívej `self._mode' namísto
	`self._editable'.
	(PopupEditForm._create_buttons): Pou¾ívej `self._mode' namísto
	`self._new.
	(ShowForm._init_attributes): Namísto `editable' pøedávej `mode'.
	

2005-11-11  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/form.py (RecordForm._find_row_by_number): Nová
	meotda.
	(RecordForm._get_row_number): Nová metoda.
	(RecordForm.select_row): Pøijímej na vstupu také integer, jako
	èíslo øádku.  K vlastnímu nastavení pou¾ívej `self._select_row()'
	(LookupForm._select_row): Nová metoda.
	(LookupForm._on_jump): Namísto vracení hodnoty rovnou proveï jump.
	(LookupForm._on_sort_column, EditForm.__init__)
	(EditForm.__init__, PopupEditForm._on_next)
	(BrowsableShowForm._on_next_record)
	(BrowsableShowForm._select_row, LookupForm._filter): Namísto
	`self._set_row()' pou¾ívej `self._select_row()'.
	(BrowsableShowForm.on_command): Namísto
	`self._on_set_row()' pou¾ívej `self.select_row()'.
	(BrowsableShowForm._on_next_record): Kosmetické úpravy.
	(BrowsableShowForm._on_set_row): Metoda zru¹ena.
	(RecordForm._find_row_by_key): Nová metoda.
	(RecordForm.select_row): Pou¾ívej ji.
	(_find_row): Metoda zru¹ena.
	(LookupForm._filter, LookupForm._on_sort_column) 
	(EditForm.__init__): Namísto kombinace `self._find_row()' a
	`self._select_row()' pou¾ívej `self.select_row()'.

	* pytis/form/list.py (ListForm.__init__, ListForm._update_grid)
	(ListForm.refresh): Namísto `self.select_row()' pou¾ívej
	`self._select_cell()'.
	(_on_jump): Metoda zru¹ena.
	(_find_row_by_values): Vracej instanci `Row', ne èíslo øádku.
	(ListForm._find_row_by_number): Nová metoda.
	(ListForm.select_row): O¹etøi pouze speciální pøílady a jinak
	volej metodu pøedka.
	(ListForm._select_row): Nová metoda.

2005-11-09  Tomas Cerha  <cerha@brailcom.org>

	* pytis/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_search.sorting_condition):
	Pøi sestavování podmínky o¹etøuj dùkladnìji mo¾nost výskytu NULL
	hodnot v tøídících sloupcích.
	

2005-10-19  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/screen.py (Menu.create): Pokud k pøíkazu nejsou
	pøístupová práva, pou¾ij jako hotkey "(N/A)".

	* pytis/form/command.py (Command.has_access): Nová veøejná metoda.

2005-10-11  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (EditForm._commit_form): Pokud je odeslání
	neúspì¹né a je vrácen textový popis pøíèiny, zobraz ho.

	* pytis/data/dbdata.py (DBDataPostgreSQL.insert): Pokud je známa
	pøíèina neúspìchu, vracej ji v první polo¾ce výstupního tuple.
	(DBDataPostgreSQL.update): Pokud je známa
	pøíèina neúspìchu, vracej ji v první polo¾ce výstupního tuple.

	* pytis/data/data.py (Data.insert): Oprava dokumentaèního øetìzce.
	(Data.update): Oprava dokumentaèního øetìzce.

2005-10-03  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/_grid.py (ListTable._retrieve_row): Pøidána
	zapomenutá specifikace modulu.

	* pytis/form/list.py (ListForm._on_delete_record): Proveï refresh
	celého formuláøe na vrcholu zásobníku oken.

2005-09-21  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/_grid.py (IncrementalSearch._exit): O¹etøi uzavøení
	okna listformu pøed ukonèením vyhledávání.

2005-09-15  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/list.py (ListForm._select_cell): Nevoláme
	'self.show_position'. 
	(ListForm._post_selection_hook): Voláme 'self.show_position'.

2005-09-09  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (Application.on_command): Pokud jde o
	u¾ivatelský pøíkaz tøídy `Application', o¹etøuj jej v¾dy zde
	voláním u¾ivatelského handleru.

	* pytis/form/command.py (Command.__init__): Nová metoda.

2005-09-06  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/form.py (RecordForm._on_edit_record) 
	(RecordForm._on_new_record): Zru¹eny doèasné refreshe.

	* pytis/form/dualform.py (BrowseDualForm.refresh): Volej také refresh
	sideformu.
	(BrowseDualForm.refresh): Pøidán komentáø.

	* pytis/form/list.py (ListForm._update_grid): Obejití chyby
	wxWidgets: po zmìnì poètu øádkù gridu vyvolej SizeEvent, aby byly
	pøípadnì skryty, èi zobrazeny scrollbary.

2005-09-02  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/__init__.py: Zohledni nahrazení 'commands.py' modulem
	'_commands.py'.	

	* pytis/form/_commands.py: Nový modul (nahrazuje commands.py).

	* pytis/form/commands.py: Zru¹en (tluèe se s pythonovským modulem
	commands).

	* pytis/form/search.py (SFSDialog._create_choice):
	Po vytvoøení 'wx.Choice' zavolej je¹tì 'SetSelection' pro
	nastavení implicitní volby.		

2005-09-01  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py: Kosmetické úpravy.

2005-08-31  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/inputfield.py
	(Invocable.get_command_handler_instance): Nová metoda.

2005-08-31  Tomas Cerha  <cerha@brailcom.org>

	* pytis/data/_test.py (DataEnumerator.test_values): Nová metoda.
	(DBDataDefaultClass.setUp): Zru¹eny zakomentované èásti testující
	multi-codebooky.
	(DBDataDefaultClass.test_lock): -> '_test_lock'.
	(DBDataFetchBuffer.setUp): Pou¾ívej konfiguraèní promìnné namísto
	konstang tøídy `DBDataPostgreSQL'.
	(DBDataFetchBuffer.setUp): Vytvoø tabulku `small' a pøíslu¹né
	vazby..
	(DBDataFetchBuffer.tearDown): Dropni tabulku `small'.
	(DBDataFetchBuffer.test_skip_fetch): Pøijímej datový objekt jako
	argument.  Pødáno nìkolik fetchù pro testování nìkterých záludností.
	(DBDataReuse.test_it): Pou¾ívej konfiguraèní promìnné namísto
	konstang tøídy `DBDataPostgreSQL'.
	(TutorialTest.test_it): Pøedávej arguemnty konstruktoru podle
	nových pravidel.
	(TutorialTest.test_it): Zakomentovány problematické testy (doèasnì).

	* pytis/form/__init__.py (_list): Load `command' sooner.  Load
	`commands' at the end.

	* pytis/form/inputfield.py (InputField, Invocable): Buï potomkem
	`CommandHandler'.
	(InputField.get_command_handler_instance): Nová metoda.

	* pytis/form/form.py (Form): Buï potomkem
	`CommandHandler'.
	(Form.get_command_handler_instance): Nová metoda.

	* pytis/form/dualform.py (DualForm.get_command_handler_instance):
	Nová metoda.

	* pytis/form/dialog.py (Dialog): Buï potomkem `CommandHandler'.
	(Dialog.get_command_handler_instance): Nová metoda.
	(GenericDialog._create_dialog_elements): Nastavuj výchozí tlaèítko
	pomocí `SetDefaultItem'.

	* pytis/form/application.py (Application): Buï potomkem
	`CommandHandler'.
	(Application.get_command_handler_instance): Nová metoda.

	* pytis/form/command.py: Pøepis dokumentace.
	(CommandHandler): Nová tøída.
	(Command): Aktualizace docstringu.
	(Command.__init__): Nový povinný argument `cls'.  `id' nahrazeno
	`name'.  Poøadí klíèových arguemntù zmìnìno.  Pøidáno doèasné
	o¹etøení starého zpùsobu pøedání arguemntù s logováním.  Vyvolej
	výjimku, pokud stejný pøíkaz ji¾ byl definován.  Vytváøej
	automaticky konstantu `COMMAND_<name>' tøídy `cls'.
	(Command.enabled): Testuj také, zda aktivní prvek aplikace umí
	zpracovat pøíkaz a zda jeho metoda 'can_<name>' vrací pravdu.
	(define_cmd): Zru¹eno.
	V¹echny definice pøíkazù a pøiøazení kláves pøesunuty z tohoto
	modulu do nového modulu `commands'.
	(FORM_COMMAND_MENU): Také pøesunuto do `commands'.
	(Command.name): Nová metoda.

	* pytis/form/commands.py: Nový modul.

2005-08-30  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._on_handled_command): Oprava
	podmínky pro pøedávání argumentù.

	* pytis/form/command.py (Command.__init__): Doèasnì pøijímej i
	argumenty podle budoucí verze.

2005-08-26  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (RecordForm._check_record): Oprava
	'failed_id' na 'field_id'.
	(RecordForm._check_record): Pro chybové políèko pou¾ívej radìji
	v¹ude 'failed_id'. 
	(EditForm._commit_form): Pro chybové políèko pou¾ívej radìji
	v¹ude 'failed_id'. 

2005-08-25  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (RecordForm._on_new_record): Doèasnì pøidán
	refresh.
	(RecordForm._on_edit_record): Doèasnì pøidán
	refresh.

	* pytis/form/output.py (PrintForm._create_controls):
	Pro EVT_SIZE zaregistruj `self._on_size'.
	(PrintForm._on_size): Nová metoda.
	(OnSize): Metoda zru¹ena.

2005-08-25  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._create_grid): V cyklu pro
	nastavení parametrù sloupcù vyu¾ívej `enumerate()' a jdi pouze
	pøes `visible_columns'.

2005-08-23  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._select_cell): Vracej pravdu, pokud
	má být událost dokonèena.
	(ListForm._finish_editing): Pokud je result None /mapø. opu¹tìní dialogu
	klávesou Esc/, pokraèuj v editaci.
	(ListForm._find_next_editable_cell): Spus» editaci nalezené buòky.
	(ListForm._on_select_cell): Pøedávej událost k dal¹ímu zpracování
	pouze pokud `_select_cell' vrátí pravdu.  Jinak událost vetuj a
	obnov výbìr.
	(ListForm._on_edit): Vyu¾ívej `RecordForm._lock_record'.
	(ListForm._on_line_commit): Vyu¾ívej `RecordForm._check_record',
	`RecordForm._record_data' a `RecordForm._unlock_record'
	(ListForm._on_line_rollback): Vyu¾ívej `RecordForm._unlock_record'

	* pytis/form/form.py (Form._print_menu): Neodkazuj se na
	identifikátory z `lib.form' zbyteènì celým názvem.
	(RecordForm._lock_record, RecordForm._unlock_record)
	(RecordForm._check_record, RecordForm._record_data): Nové metody.
	(LookupForm._on_jump): Neodkazuj se na identifikátory z `lib.form'
	zbyteènì celým názvem.  Obaluj øetìzce voláním gettext.
	(EditForm._lock, EditForm._unlock, EditForm._validate): Metody zru¹eny.
	(EditForm._validate_fields): Nová metoda.
	(EditForm._edit_insert, EditForm._edit_update): Metody zru¹eny.
	(EditForm._commit_form): Vyu¾ívej metod z `RecordForm'.
	Nevyu¾ívej `_edit_insert' a `_edit_update'.  
	(PopupEditForm._create_buttons): Obaluj øetìzce voláním gettext.
	(PopupEditForm.run): Vyu¾ívej `_lock_record'.
	(PopupEditForm.run): Vyu¾ívej `_unlock_record'.
	(RecordForm._record_data): Zahrnuj do øádku pouze sloupce obsa¾ené
	v datovém objektu formuláøe.

2005-08-22  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/dualform.py (BrowseDualForm.refresh): Refreshuj pouze
	hlavní formuláø.  Vedlej¹í je tím refreshován díky své závislosti...
	(ShowDualForm._on_idle): Nevolej po pøefiltrování `_select_form()'.

2005-08-10  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/dualform.py (SideBrowseDualForm._do_selection): Pokud
	není zaostøeno ¾ádné okno, nic si z toho nedìlej a pokraèuj normálnì.
	

	* pytis/form/list.py (BrowseForm._on_import_interactive): Vkládané
	sloupce kontroluj oproti `self._fields', nikoli `self._columns'.

2005-07-26  Pavel Hanak  <hanak@asellus.cz>

	* pytis/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_search.sorting_condition):
	O¹etøení podmínky pro zji¹tìní vzdálenosti nalezeného øádku tak,
	aby respektovala mo¾ná výskyt NULL hodnot v 'sorting' sloupcích.	

2005-07-14  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/event.py (top_level_exception): Pøednastavuj adresu
	'from'.

	* pytis/output/formatter.py (LoutFormatter._lout): Smazáno
	zapomenuté vypisování do 'lout' souboru.

2005-07-13  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/inputfield.py (CodebookField._create_widget):
	Nový atribut 'self._insert_button'.
	(CodebookField._disable): Pøedefinovaná metoda - pøidáno
	znepøístupnìní 'self._insert_button'.	
	(CodebookField._enable): Pøedefinovaná metoda - pøidáno
	zpøístupnìní 'self._insert_button'.
	
2005-07-07  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (RecordForm._on_delete_record): Oprava chyby
	v pøedání øádku do 'on_delete_record'.

	* pytis/output/formatter.py (_INTRO): O¹etøení 'landscape' módu.

2005-07-01  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/application.py (Application._check_perm): Vypu¹tìno
	podivné úvodní znepøístupnìní pro 'Permission.INSERT'.

	* pytis/data/types_.py (_check_format): Vypu¹tìn omylem zdvojený
	kód. 

2005-06-30  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._current_row): Zru¹eno.
	(_current_key, current_key): Pøesunuto do `Form'.
	(ListForm.current_row, ListForm._search_adjust_data_position)
	(ListForm.show_position, ListForm._on_edit)
	(ListForm._on_insert_line, ListForm.refresh)
	(BrowseForm._formatter_parameters, BrowseForm._on_edit_record):
	Namísto `_current_row()' pou¾ívej `_current_cell()'.
	(ListForm.is_changed): Pøejmenováno na `_is_changed'.
	(ListForm.can_line_commit, ListForm.can_line_commit): Nové metody.
	(ListForm.on_command): Neo¹etøuj zru¹ený pøíkaz
	`ListForm.COMMAND_LINE_DELETE'.
	(can_show_cell_codebook): Buï metodou instance, nikoli tøídy.
	(ListForm._on_handled_command): `row' -> `the_row'.
	(_on_delete_line): Zru¹eno.
	(ListForm._on_delete_record): Nová metoda.
	(BrowseForm._context_menu): `ListForm.COMMAND_LINE_DELETE' nahraï
	`RecordForm.COMMAND_DELETE_RECORD'.
	(BrowseForm): Callbacky CALL_EDIT_RECORD a CALL_NEW_RECORD
	pøesunuty do `RecordForm'.
	(BrowseForm.__init__): Nenastavuj zru¹ené callbacky.
	(BrowseForm._run_form, BrowseForm._redirected_name)
	(BrowseForm._on_new_record, BrowseForm._on_edit_record): Pøesunuto
	do `RecordForm'.
	(BrowseForm.on_command): Neo¹etøuj pøíkazy `COMMAND_NEW_RECORD',
	`COMMAND_NEW_RECORD_COPY' a `COMMAND_EDIT_RECORD'.
	(ListForm._on_activation, ListForm._on_alternate_activation):
	Volej callback jen pokud je vybrán nìjaký øádek.

	* pytis/form/inputfield.py (InputField.can_reset_field): Nová
	metoda.
	(Invocable.can_invoke_selection, Invocable.can_invoke_selection)
	(ListField.can_invoke_edit_form)
	(ListField.can_invoke_browse_form, ListField.can_choose_key): Nové metody.

	* pytis/form/form.py (Form.__init__): Namísto volání
	`_add_menus()' pøidávej tiskové menu pøímo zde.
	(Form._add_menus): Zru¹eno.
	(Form._menus): Zru¹eno.
	(Form._print_menu): Nová metoda.
	(Form.check_permission): Nový nepovinný argument `quiet'.
	(print_menu): Zru¹eno.
	(RecordForm._init_attributes): Aktualizace docstringu.
	(RecordForm._signal_update): Nová metoda.
	(RecordForm.current_row): Nová metoda.
	(RecordForm._current_key): Nová metoda.
	(RecordForm.current_key): Nová metoda.
	(RecordForm._on_delete_record): Nová metoda.
	(RecordForm.can_delete_record): Nová metoda.
	(RecordForm.on_command): Nová metoda.
	(LookupForm.is_searching): Pøejmenováno na `_is_searching'.
	(LookupForm._is_searching, LookupForm._is_searching): Nové metody.
	(LookupForm.can_sort): Zru¹eno.
	(EditForm.ACT_EDITFORM, EditForm.ACTIVATIONS): Zru¹eno.
	(EditForm._edit_delete): Zru¹eno.
	(EditForm._menus): Zru¹eno.
	(EditForm.on_command): Neo¹etøuj `EditForm.COMMAND_RECORD_INSERT',
	`EditForm.COMMAND_RECORD_UPDATE',
	`EditForm.COMMAND_RECORD_DELETE'.
	`EditForm.COMMAND_RECORD_COMMIT' ->`EditForm.COMMAND_COMMIT_RECORD'.
	(RecordForm.CALL_EDIT_RECORD, RecordForm.CALL_NEW_RECORD): Nové callbacky.
	(RecordForm.__init__): Nová metoda.
	(RecordForm.select_row): Nová metoda /pøesunuto z EditForm/.
	(RecordForm._find_row_by_values): Nová metoda /pøesunuto z EditForm/.
	(RecordForm._redirected_name, RecordForm._run_form) 
	(RecordForm._new_form_kwargs, LookupForm._new_form_kwargs) 
	(RecordForm._on_new_record, RecordForm._on_edit_record): Nové metody.
	(RecordForm.on_command): O¹etøuj pøíkazy
	`RecordForm.COMMAND_NEW_RECORD',
	`RecordForm.COMMAND_NEW_RECORD_COPY' a `COMMAND_EDIT_RECORD'.
	(EditForm._find_row_by_values): Zru¹eno.
	(EditForm.select_row): Zru¹eno.
	

	* pytis/form/command.py: Buï potomkem `object'.
	(_check_perm, _can_run_form, _can_insert)
	(_current_form_can_insert, _current_form_can_update)
	(_current_form_can_delete, _current_form_searching)
	(_current_form_changed, _current_field_enabled)
	(_current_field_modified, _current_field_has_selection): Zru¹eno.
	(FORM_COMMAND_MENU): Nová konstanta.
	(define_cmd): Nová dunkce.  V¹echny pøíkazy nyní definovány s její
	pomocí.  Pøíkazy `EditForm.COMMAND_NEW_RECORD',
	`EditForm.COMMAND_NEW_RECORD_COPY' a
	`EditForm.COMMAND_EDIT_RECORD' pøesunuty do tøídy `RecordForm'.
	`EditForm.COMMAND_RECORD_COMMIT'
	->`EditForm.COMMAND_COMMIT_RECORD'.

	* pytis/form/application.py (Application.OnInit): Pøidávej také
	menu pøíkazù.  Pøejmenována lokální promìnná `spec' -> `name'.
	(Application._check_perm): Nová metoda.
	(Application.can_run_form): Nová metoda.
	(Application.can_new_record): Nová metoda.
	(window_count): Zru¹eno.
	(Application.can_next_form, Application.can_prev_form) 
	(Application.can_leave_form): Nové metody.

2005-06-30  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/dialog.py (RunFormDialog._create_content):
	Po vytvoøení 'wx.Choice' zavolej je¹tì 'SetSelection' pro
	nastavení implicitní volby.	

	* pytis/form/form.py (LookupForm._on_jump): Pro získání èísla
	øádku pou¾ívej 'InputNumeric'.

2005-06-30  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._total_height): Zji¹»uj vý¹ku
	nultého øádku, ne prvního. 

	* pytis/form/screen.py (Menu.create): Vylep¹en komentáø.

	* pytis/form/command.py: Opraveny identifikátory pøíkazù
	`LookupForm.COMMAND_SEARCH_NEXT' a
	`LookupForm.COMMAND_SEARCH_PREVIOUS'.

2005-06-29  Tomas Cerha  <cerha@brailcom.org>

	* pytis/util/configuration.py
	(Configuration._Option_startup_forms.long_option): Nová volba.

	* pytis/form/application.py (Application.OnInit): Otevøi v¹echny
	formuláøe z `config.startup_forms'.
	(Application.__init__): Inicializuj `self._window_menu_item' pøed
	voláním konstruktoru pøedka.

	* pytis/form/list.py (ListForm._column_width): Nová metoda.
	(ListForm._create_grid, ListForm._on_size): Vyu¾ívej ji.

2005-06-28  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/command.py (Application.COMMAND_LEAVE_FORM): Upravena
	`enabled' funkce aby brala v potaz i formuláøe, které nejsou na
	stacku.
	
2005-06-28  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/list.py (ListForm._on_line_commit): Spou¹tìj i check funkci
	z 'ViewSpec'.

2005-06-28  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._create_grid): Neo¹etøuj
	`EVT_GRID_CELL_LEFT_CLICK'.

2005-06-21  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (Application.run_form): Pokud je
	`name' callable, pova¾uj za `name' výsledek jeho volání.

	* pytis/form/command.py (_can_run_form): Pokud je `name' callable,
	pova¾uj za `name' výsledek jeho volání.
	(_can_run_form): Pøedchozí úprava zru¹ena.
	(ListForm.COMMAND_SHOW_CELL_CODEBOOK): Nový pøíkaz.
	(BrowseForm.COMMAND_RECORD_EDIT): Pøejmenováno na
	`BrowseForm.COMMAND_EDIT_RECORD'.
	(_can_run_form): Oprava chyby z minulého commitu.

	* pytis/form/inputfield.py (CodebookField._on_codebook_insert):
	Prefill vyplòuj pouze pokud je v políèku zeditovaná hodnota.

	* pytis/form/list.py (ListForm._init_attributes): Inicializuj
	`self._selection_candidate'.
	(ListForm._select_cell): Nenastavuj výbìr zde, pouze nastav
	`self._selection_candidate'.
	(ListForm._on_idle): Pokud je nastaveno
	`self._selection_candidate', nastav výbìr, jeho barvy a zviditelni
	buòku.
	(ListForm.show_context_menu): Kosmetické úpravy.
	(BrowseForm._context_menu, ListForm.show_context_menu): Kosmetické
	úpravy.
	(ListForm.on_command): O¹etøuj
	`ListForm.COMMAND_SHOW_CELL_CODEBOOK' voláním
	`self._on_show_cell_codebook()'.
	(ListForm.can_set_grouping): Zru¹en zapomenutý print.
	(ListForm._on_show_cell_codebook)
	(ListForm.can_show_cell_codebook): Nové metody.
	(BrowseForm._context_menu): Pøidána polo¾ka pro pøíkaz
	`ListForm.COMMAND_SHOW_CELL_CODEBOOK'.  Kosmetické úpravy.
	(ListForm._on_line_commit): Kosmetické úpravy.
	(BrowseForm._context_menu): `BrowseForm.COMMAND_RECORD_EDIT' ->
	`BrowseForm.COMMAND_EDIT_RECORD'.
	(BrowseForm.on_command): `BrowseForm.COMMAND_RECORD_EDIT' ->
	`BrowseForm.COMMAND_EDIT_RECORD'.
	(ListForm._on_select_cell): Callback volej jen pokud nejsme uvnitø
	`_select_cell()'.
	(ListForm._on_context_menu): Volej callback
	`CALL_USER_INTERACTION'.

	* pytis/presentation/field.py (PresentedRow.__init__): Namísto
	koncových akcí volej `self._set_row()'.
	(PresentedRow._set_row): Nová metoda.
	(PresentedRow.set_row): Vyu¾ívej `self._set_row()'.

	* pytis/form/_grid.py (IncrementalSearch._on_kill_focus): Nastavuj
	callback pouze pokud listform stále existuje.

	* pytis/form/form.py (LookupForm.can_sort): Oprava pøeklepu.
	(Form._menus): `BrowseForm.COMMAND_RECORD_EDIT' ->
	`BrowseForm.COMMAND_EDIT_RECORD'.

2005-06-20  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._select_cell): Pøechod na sloupeèek
	provádìj pouze pokud nebyl proveden pøechod na øádek /pøi nìm¾ je
	provádìn i pøechod na sloupeèek/.  Úprava výpoètu sloupeèku.
	(ListForm._on_handled_command): Pokud má handler ménì ne¾ dva
	pozièní arguemnty, pøedávej pouze `row', nebo vùbec nic.
	(ListForm._on_handled_command): Zohledòuj `None' ve výsledku
	volání `inspect.getargspec()'.

	* pytis/form/form.py (Form.check_permission): Vracej pravdu pokud
	je dané právo alespoò k jednomu sloupeèku datového objektu.  Pouze
	pro delete vracej globální právo.
	(LookupForm.can_sort_column): Oprava sémantiky.

2005-06-17  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm.UI_EDIT_CHANGE)
	(ListForm.UI_EXISTS_CONDITION, ListForm.UI_SORTING)
	(ListForm.UI_GROUPING): Konstanty zru¹eny.
	(ListForm.can_sort_column): Nová metoda.
	(ListForm._on_label_left): `ListForm.SORTING_CYCLE_DIRECTION' ->
	`LookupForm.SORTING_CYCLE_DIRECTION'.  Nepou¾ívej argument
	`uievent_id' konstruktoru `MItem'.
	(on_ui_event): Metoda zru¹ena.
	(ListForm.is_changed): Nová metoda.
	(ListForm.can_set_grouping): Nová metoda.

	* pytis/form/form.py (Form._menus): Nepou¾ívej argument `uievent_id' konstruktoru
	`MItem'.
	(Form.on_ui_event): Metoda zru¹ena.
	(Form.guardian): Nová metoda.
	(RecordForm.UI_ACCESS_INSERT, RecordForm.UI_ACCESS_UPDATE)
	(RecordForm.UI_ACCESS_DELETE): Konstanty zru¹eny.
	(RecordForm.on_ui_event): Metoda zru¹ena.
	(LookupForm.can_sort_column): Nová metoda.
	(LookupForm.sorting, LookupForm.can_sort): Nová metoda.
	(EditForm._menus): Nepou¾ívej argument `uievent_id' konstruktoru
	`MItem'.
	(EditForm.on_ui_event, BrowsableShowForm.on_ui_event): Zru¹eno.

	* pytis/form/dualform.py (on_ui_event): Zru¹eno.
	(DualForm.active_form): Nová metoda.

	* pytis/form/application.py (Application.UI_ALWAYS_DISABLED)
	(Application.UI_OPENED_WINDOW,
	Application.UI_OPENED_MORE_WINDOWS): Konstanty zru¹eny.
	(Application.new_record): Pou¾ívej `self._current_form()' namísto
	`current_form()'.
	(on_ui_event): Metoda zru¹ena.
	(Application.window_count): Nová metoda.
	(Application.current_form): Nová metoda.
	(get_status): Upraven docstring.
	(current_form): Pouze volej `_application.current_form()'.
	(exit): Upraven docstring.

	* pytis/form/command.py (Command.__init__): Nové arguemnty
	`enabled' a `static'.
	(Command.__init__): Pøidány asserty na `handler' a
	`access_groups'.  Zjisti pøítomnost v access groups ji¾ zde a
	zapamatuj.
	(access_groups): Metoda zru¹ena
	(Command.enabled): Nová metoda.
	(invoke_command): Vyvolej pøíkaz pouze pokud je `enabled'.
	(_check_perm, _can_run_form, _can_insert, _can_insert) 
	(_can_insert, _current_form_can_update, _current_form_can_update) 
	(_current_form_can_delete, _current_form_changed) 
	(_current_form_changed, _current_field_modified): Nové funkce.
	Vyu¾ívej tyto funkce v definicích pøíkazù.

	* pytis/form/screen.py (Keymap._define_key): V assertové zprávì
	vypisuj také pøíkaz a jeho argumenty.
	(MenuBar._create_menu): Neinicializuj `self._access_groups'.
	(MenuBar.activate): Neinicializuj `self._access_groups'.
	(Menu.create): Nezji¹»uj zde `access_groups' pøíkazu, radìji
	ponech uøèení na `Command.enabled()'.
	(MItem.__init__): Zru¹en arguemnt `uievent_id'.
	(MItem._on_ui_event): Nová metoda.
	(MItem.create): Namísto volání `Application.on_ui_event()' o¹etøuj
	`wx.EVT_UPDATE_UI' pomocí `self._on_ui_event()'.
	(MItem.uievent_id): Metoda zru¹ena.

	* pytis/form/inputfield.py (InputField.UI_IS_MODIFIED)
	(InputField.UI_IS_ENABLED, ListField.UI_LIST_ITEM_SELECTED):
	Konstanty zru¹eny.
	(InputField.on_ui_event): Metoda zru¹ena.
	(InputField._menu): Nepou¾ívej argument `uievent_id' konstruktoru
	`MItem'.
	(InputField.is_enabled): Nová mentoda.
	(Invocable._menu, CodebookField._menu, ListField._menu):
	Nepou¾ívej argument `uievent_id' konstruktoru `MItem'.
	(ListField.on_ui_event): Metoda zru¹ena.
	(ListField.has_selection): Nová mentoda.


2005-06-16  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/command.py (DEFAULT_COMMAND_KEYS): 

2005-06-15  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/dualform.py (DualForm._create_form): Na konci volej
	`_set_main_form_callbacks()' a `_set_side_form_callbacks()'.
	(DualForm._set_main_form_callbacks)
	(DualForm._set_main_form_callbacks)
	(SideBrowseDualForm._create_side_form)
	(BrowseDualForm._set_main_form_callbacks)
	(ShowDualForm._set_main_form_callbacks)
	(BrowseShowDualForm._set_main_form_callbacks)
	(DescriptiveDualForm._set_side_form_callbacks): Nové metody.
	(SideBrowseDualForm._create_side_form)
	(BrowseDualForm._create_main_form)
	(ShowDualForm._create_main_form)
	(BrowseShowDualForm._create_main_form)
	(DescriptiveDualForm._create_side_form): Nastavovvování callbackù
	pøenech novám metodám.
	(DescriptiveDualForm._init_attributes): Nová metoda.
	(DescriptiveDualForm._do_selection): Nastavuj
	`self._in_mainform_selection'.
	(DescriptiveDualForm._on_side_selection): Nedìlej nic, pokud je
	nastaveno `self._in_mainform_selection'.

	* pytis/presentation/spec.py (FieldSpec.__init__): Nový argumert
	`fixed'.
	(FieldSpec.fixed): Nová metoda.

	* pytis/form/list.py (ListForm._on_size): Korekci ¹íøky kvùli
	scrollbarùm provádìj a¾ po kontrole shody nové a pùvodní velikosti.
	(ListForm._on_column_header_paint): Dedopus», aby label pøesahoval
	¹íøku sloupce.
	(ListForm._on_size): Ponech velikost fixních sloupcù nezmìnìnou.

2005-06-14  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (ListForm._select_cell): Neprovádìj zde rewind.
	(ListForm._create_grid): Zru¹en hack s initiálním fetchem.

	* pytis/form/dualform.py (DualForm._initial_sash_ratio) 
	(DescriptiveDualForm._initial_sash_ratio): Nová metoda.
	(DualForm._init_attributes): Vyu¾ívej ji.

	* pytis/data/_test.py (DataEnumerator.test_values): Nová metoda.
	(DBDataDefaultClass._test_lock): Test odstaven pro momentální
	nefunkènost.
	(DBDataFetchBuffer.setUp): Pou¾ívej konfiguraèní volby namísto
	zru¹ených konstant.
	(DBDataFetchBuffer.setUp): Vytváøej je¹tì duhou tabulku s malým
	poètem øádkù.
	(_check_skip_fetch): Pøijímej datový objekt jako argument.
	(DBDataFetchBuffer.test_skip_fetch): Pøidány nové testy pracující
	s malou tabulkou.

	* pytis/data/types_.py (Type.export, Type.default_value):
	Odstranìny hrátky pøekladem hodnot sekvence podle `_SPECIAL_VALUES'.
	(Enumerator.values): Nová metoda.
	(DataEnumerator.values): Nová metoda.
	(Value.__init__): Pou¾ívej `super()' k volání metody pøedka.

	* pytis/data/dbdata.py (DBDataPostgreSQL._PgBuffer.fetch):
	Kosmetické úpravy.
	(DBDataPostgreSQL._PgBuffer.fetch): Loguj jen èíslo øádku, ne
	data.
	(DBDataPostgreSQL._PgBuffer.correction): Kosmetické úpravy.
	Pøidán komentáø.
	(DBDataPostgreSQL.__init__): Zru¹en nepou¾itý atribut
	`_cache_size'.  Pøidány nové atributy zrcadlící konfiguraèní
	promìnné (výkonnostní mikro-optimalizace, leè dle profileru
	pomìrnì úèinná).
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Pou¾ívej
	`self._db_encoding', namísto `config.db_encoding'.
	(DBDataPostgreSQL.fetchone): Pou¾ívej
	`self._pg_initial_fetch_size' namísto `config.initial_fetch_size'
	a `self._pg_fetch_size' namísto `config.fetch_size'.
	Odstranìna prazvlá¹tní korekce '-2' pøi urèování poètu
	pøeskoèených øádek pøi zpìtném chodu.
	(PostgreSQLStandardBindingHandler._pdbb_get_type): Postgresový typ
	`float8' mapuj na `Float'.

	* pytis/form/_grid.py (ListTable._retrieve_row): Vypoèti skip tak,
	aby mohl být fetch proveden skuteènì ve smìru pohybu, ne v¾dy
	dopøedu.
	Pøed prvním fetchem provádìj je¹tì fetch prvního øádku dopøedu,
	aby byl naplnìn buffer.
	(ListTable._retrieve_row.fetch): Provádìj fetch ve smìru `direction'.
	(ListTable._retrieve_row): Provádìj také fetch ve smìru pohybu.
	(ListTable._panic): Opravena indentace.

2005-06-13  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/field.py (PresentedRow): Buï potomkem `object'.

	* pytis/form/dualform.py (SideBrowseDualForm._do_selection):
	importuj `_grid'.  `ListForm.IncrementalSearch' ->
	`_grid.IncrementalSearch'.
	

	* pytis/form/form.py (LookupForm._init_select): Upravena logovací
	hlá¹ka.

	* pytis/form/inputfield.py: Zru¹en docstring.
	(EnumerationField._values): Oprava pøeklepu.
	(EnumerationField._set_value): Vracej výsledek volání
	`SetStringSelection()'.
	(ChoiceField._create_ctrl): Nepøedávej konstruktoru zbyteèné
	argumenty.
	(ColorSelectionField._set_value): Vracej výsledek volání metody
	pøedka.

	* pytis/form/list.py (ListForm._create_grid): Kosmetické úpravy.
	Hack o¹etøující vyøazený buffer pøi zpìtném naèítání øádkù gridu.
	(ListForm._update_grid, ListForm._update_grid): Nový/vrácený argument
	`data_init'.  Popkud je True, inicializuj datový select, jinak
	volej `rewind()'.
	(ListForm.refresh): Neinicializuj select zde, ale nastavuj
	`data_init' pøi volání `_update_grid()'.
	(ListForm.focus): Neprovádìj refresh.

	* pytis/form/application.py (Application.restore): Pokud je
	aktivní formuláø `Refreshable', volej `refresh()'.

2005-06-10  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/form.py (LookupForm._init_select): Obaluj databázovou
	operaci do `db_operation'.

	* pytis/form/list.py (ListForm._create_grid): Neobaluj volání
	`_init_select()' do `db_operation'.
	(ListForm._create_recreate_grid): Pøejmenováno na
	`_update_label_colors()'.
	(ListForm._recreate_grid): Pøejmenováno na `_update_grid()'.
	(ListForm._create_grid, ListForm._update_grid):
	`_create_recreate_grid' -> `_update_label_colors()'.
	(ListForm._on_insert_line, ListForm._on_line_rollback):
	`_recreate_grid()' -> `_update_grid()'.  Nepøedávej zru¹ený
	argument `data_init'.
	(ListForm.refresh): Neobaluj volání `_init_select()' do
	`db_operation'.  `_create_recreate_grid' ->
	`_update_label_colors()'.

	* pytis/presentation/spec.py (GroupSpec.__init__): Odstranìn
	zapomenutý argument `box'.

2005-06-09  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/dualform.py (SideBrowseDualForm._do_selection): Volej
	`Show()' formuláøe bez arguemntu `refresh'.

	* pytis/form/__init__.py: Importuj `_grid' a aktualizuj jeho
	jmenný prostor. 

	* pytis/form/form.py (PopupForm._popup_frame): Zru¹en argument
	`title'.
	(PopupForm._popup_frame): Ke stylu dialogu pøidej také
	`wx.DEFAULT_DIALOG_STYLE'.
	(PopupForm.run): Volej na `frame' `SetTitle()' a `SetClientSize()'.
	(_finish_top_level_sizer): Zru¹eno.
	(Form._create_form): Nevolej `_finish_top_level_sizer()'.
	(Form._finish_top_level_sizer): Zru¹eno.
	(PopupEditForm._finish_top_level_sizer): Zru¹eno.

	* pytis/form/list.py (ListForm._init_attributes): Atribut
	`self._size' zru¹en.
	(ListForm._create_form_parts): Neukládej `self._size'.
	(ListForm._create_grid, ListForm._on_size): Nepou¾ívej
	`self._size'.
	(ListForm._on_size): Zru¹eno `SPECIAL_WX_CORRECTION'.  Zpøehlednìn
	a zjednodu¹en cyklus pøepoèítávání sloupcù.  I pøi pøedèasném
	opu¹tìní volej `Skip()'.  Nenastavuj velikost gridu explicitnì.
	Nepøipoèítávaj velikosti scrollbarù.
	(ListForm._recreate_grid): Neprovádìj
	`self.SetSize(self.GetSize())'.
	(ListForm.total_width): Zru¹eno
	(ListForm.total_height): Pøejmenováno na `_total_height()'.
	(CodebookForm_DEFAULT_WINDOW_HEIGHT): Zvý¹eno na 500.
	(CodebookForm.__init__): Nepøedávej `title' volání
	`_popup_frame()'.  Nastavuj velikost formuláøe, ne rodièovského
	okna/framu.
	(_InputFieldCellEditor, _ListTable, IncrementalSearch.__init__):
	Pøesunuto do nového modulu `_grid'.
	(_create_grid): Zru¹eny nepou¾ité argumenty `data_init',
	`inserted_row_number' a `inserted_row'.
	(ListForm._create_grid): `self._ListTable' -> `_grid.ListTable'.
	`_InputFieldCellEditor' -> `_grid.InputFieldCellEditor'.
	(ListForm._recreate_grid): Zru¹en arguemnt `data_init'.
	Neprovádìj zde inicializaci dat.
	(ListForm._select_cell): Nepøepisuj si `col'.
	(ListForm.on_data_change): Update docstringu.
	(ListForm._on_incremental_search): `self.IncrementalSearch' -> `_grid.IncrementalSearch'.
	(ListForm.refresh): Inicializuj sde datový select.
	(ListForm.Show): Nevolej refresh().
	(ListForm._select_cell): Volej `MakeCellVisible()' dvakrát...

2005-06-13  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/dualform.py (DualForm._init_attributes): Nastavuj
	'sash_ratio' podle specifikace.

	* pytis/presentation/spec.py (DualSpec.__init__):
	Nový argument 'sash_ratio'.
	(DualSpec.sash_ratio): Nová metoda.

2005-06-08  Tomas Cerha  <cerha@brailcom.org>

	* pytis/data/data.py (Data.row_key): Pou¾ívej "list comprehension"
	namísto 'map()'.

	* pytis/form/application.py (Application.OnInit): V debug re¾imu
	vypisuj verzi wxWidgets.

	* pytis/form/dualform.py (ExtInfoDualForm): Pøejmenováno na
	`BrowseShowDualForm'.
	(DescriptiveDualForm): `ExtInfoDualForm' -> `BrowseShowDualForm'.

	* pytis/form/list.py (total_height): Zji»uj vý¹ku øádku jen pokud
	je zobrazen alespoò jeden øádek.

	* pytis/presentation/spec.py (BorderStyle, Orientation, Button) 
	(GroupSpec, LayoutSpec, ViewSpec, DualSpec, Editable) 
	(SelectionType, Color, TextFormat, FieldStyle, PostProcess) 
	(TextFilter, Computer, RefSpec, FieldSpec): Buï potomkem `object'.
	(Spec): Tøída zru¹ena.
	(SelectionType): Upraveny docstringy.
	(SelectionType.CODEBOOK): Nová konstanta.
	(FieldSpec.__init__): Upraven docstring.

2005-06-07  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (Window.resize): Namísto `OnSize(event)'
	volej prostì `SetSize(size)'.

	* pytis/form/dualform.py (DualForm.__init__): Wx callback
	`EVT_SIZE' o¹etøuj pomocí `self._on_size' a `EVT_SET_FOCUS' pomocí
	`self._on_focus'.
	(DualForm._on_size): Nová metoda.
	(DualForm..OnSize): Zru¹eno.
	(DualForm._init_attributes): `self._sash_ratio' nastav na 0.5.
	(DualForm._create_form): `OnSashChanged' -> `_on_sash_changed'.
	(DualForm._sash_position): Neoèekávej None v `self._sash_ratio'.
	(DualForm._on_size_hook): Zru¹eno.
	(DualForm.OnSashChanged): Pøejmenováno na `_on_sash_changed'.
	(DualForm.OnSize): Pøejmenováno na `_on_size'.  V¾dy nakonec volej
	'Skip()'.
	(ShowDualForm._sash_position): Nepou¾ívej nikdy `self._sash_ratio'.
	(ShowDualForm._on_size_hook): Zru¹eno.
	(ExtInfoDualForm): Nová tøída.
	(DescriptiveDualForm): Buï jejím potomkem.
	(DescriptiveDualForm._sash_position)
	(DescriptiveDualForm._on_size_hook, DescriptiveDualForm.refresh)
	(DescriptiveDualForm._create_main_form): Zru¹eno.

	* pytis/form/form.py
	(EditForm._find_row_by_values): Nová metoda.
	(EditForm.size): Doplnìn docstring.
	(EditForm.set_scrollbars):  Kosmetické úpravy.
	(select_row): Argument `key' pøejmenován na `position'.  Umo¾nìno
	pou¾ití slovníku hodnot jako `position'.
	(EditForm._find_row_by_values): Nová metoda.
	(ShowForm._init_attributes): Wx callback
	`EVT_SIZE' o¹etøuj pomocí `self._on_size'.
	(ShowForm._on_size): Nová metoda.
	(ShowForm.OnSize): Zru¹eno.

	* pytis/form/dialog.py (InputDialog.__init__): Pøijímej klíèové
	argumenty 'report' a 'report_format'.
	(FileDialog.__init__): Výchozí hodnota argumentu `wildcards'
	nastavena tak, aby byly zobrazeny v¹echny soubory.

	* pytis/form/command.py (BrowseForm.COMMAND_IMPORT_INTERACTIVE):
	Nový pøíkaz. 
	(DEFAULT_COMMAND_KEYS): Pøiøaï mu klávesu.

	* pytis/form/list.py (BrowseForm.on_command): O¹etøuj
	`COMMAND_IMPORT_INTERACTIVE' voláním
	`self._on_import_interactive()'.
	(BrowseForm._on_import_interactive): Nová metoda.
	(BrowseForm._on_new_record): Upravena chybová hlá¹ka.
	(ListForm.__init__): Wx callback `EVT_SIZE' o¹etøuj pomocí
	`self._on_size'.
	(ListForm.OnSize): Zru¹eno.
	(ListForm.SetSize): Pøejmenováno na `_on_size()'.  Transformováno
	na event handler.  Na konci volej `event.Skip().

2005-06-06  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/list.py (_select_cell): Eliminuj násobná volání
	`SetGridCursor()', `GetGridCursorCol()' a `GetGridCursorRow()'.
	(BrowseForm._PrintResolver._Spec.body) 
	(BrowseForm._PrintResolver._Spec.doc_header) 
	(BrowseForm._PrintResolver._Spec.doc_footer) 
	(BrowseForm._PrintResolver._Spec.coding): Akcepruj klíèový
	argument `variant'.

2005-06-03  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (InputField.validate): Pøejímej
	(InputField._value): Nová metoda.
	(InputField._is_valid): Nová metoda.
	(DateField._on_invoke_selection): Pou¾ívej `self._value()'.
	Pou¾ívej pøímo metody `value' a `self._type' a ne oklikou pøes
	vytváøení nové instance typu `Date'.
	(CodebookField._on_change_hook): Vyu¾ívej `self._value()'.
	Pødávej metodì `get()' enumerátoru Pythonovou hodnotu, ne stringovou.
	(CodebookField._on_invoke_selection): Vyu¾ívej `self._value()'.
	(CodebookField._on_codebook_insert): Vyu¾ívej `self._is_valid()'.

	**kwargs a pøedávej je metodì `validate()' datového typu.

	* pytis/form/form.py (RecordForm._on_editability_change): Nech»
	metoda pøijímá dva arguemnty.
	(EditForm._on_editability_change): Pøejmenován argument.

2005-06-02  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/form.py (EditForm._field_change): 
	Pøejmenováno na `_on_field_edit()'.
	(EditForm._create_form): `_field_change()' -> `_on_field_edit()'.

	* pytis/form/dualform.py (SideBrowseDualForm._create_side_form):
	Ukládej vazební sloupce do atributù.  Zapamatuj si typ vazebního
	sloupce v side_formu.
	(SideBrowseDualForm._do_selection): Vyu¾ívej tìchto atributù.

	* pytis/presentation/field.py (_finalize): Pøejmenováno na
	`_resolve_dependencies()'.  Zru¹en argument `invoke_callbacks'.
	Oznaèování dirty políèek provádìj zde.
	(PresentedRow.__setitem__): Namísto `_finalize()' pou¾ívej
	`_resolve_dependencies()' a pøenech mu také oznaèování dirty
	políèek.
	(PresentedRow._recompute_editability): Kosmetické úpravy.
	(PresentedRow._recompute_codebook_runtime_filter): Pøejmenováno na
	`_notify_runtime_filter_change()'.
	(PresentedRow.__setitem__): `_recompute_codebook_runtime_filter'
	-> `_notify_runtime_filter_change()'.
	(PresentedRow.set_row, PresentedRow.listfield_choose)
	(PresentedRow.__init__): : `_finalize()' ->
	`_resolve_dependencies()'.
	(PresentedRow._resolve_dependencies): Oznam zmìnu runtime
	codebookù je¹tì pøed pøepoèítáváním editovatelnosti.

2005-06-01  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/_test.py: Opraveny importy.  Instance
	 datových typù nezískávej pøes `.make()'.

	* pytis/presentation/field.py (PresentedRow.__init__): Argumenty
	`enable_field_callback' a `disable_field_callback' nahrazeny
	jediným `editability_change_callback'.
	(PresentedRow.__init__): Pøidány v¹emo¾né asserty na argumenty.
	Inicializuj cache vypoètených virtuálních hodnot `self._virtual'.
	Vyu¾ívej `_finalize()'.
	(PresentedRow._init_row.genval): Promìnná `id' pøejmenována na
	`key'.
	(PresentedRow.__getitem__): Dopoèítávej dopoèítávané hodnoty pøímo
	zde.  Cachuj vypoèené hodnoty virtuálních sloupcù.  Pokud dojde ke
	zmìnì hodnoty, volej change_callback ihned po dopoèítání nové
	hodnoty.
	(_invoke_callbacks, _needs_recomputation, _compute)
	(_recompute_dependencies): Zru¹eno.
	(PresentedRow._finalize): Nová metoda.
	(PresentedRow._recompute_editability): Namísto `id' pou¾ívej
	promìnnou `key'.
	(PresentedRow._compute_editability): Ukládej vypoøtenou hodnotu do
	`self._editable' a nuluj "dirty" pøíznak.
	(PresentedRow._recompute_codebook_runtime_filter): Kosmetické
	úpravy.
	(PresentedRow.row): Nesna¾ se zde øe¹it, co sem nepatøí.  Hodnotu
	získávej pøes pøístup ke slovníku /__getitem__/.
	(PresentedRow.format): Nesna¾ se zde øe¹it, co sem nepatøí.
	Hodnotu získávej pøes pøístup ke slovníku /__getitem__/.
	(PresentedRow.field_changed): Kosmetická úprava.
	(PresentedRow.editable): Neøe¹ zde co je nyní v
	`_compute_editability'.
	(PresentedRow.listfield_choose): Vyu¾ívej `_finalize()'.
	(PresentedRow.__setitem__): Vyu¾ívej `_finalize()'.
	(PresentedRow.set_row): Vyu¾ívej `_finalize()'.

	* pytis/form/form.py (RecordForm._set_row): Respektuj zmìnu
	argumentù `PresentedRow'.
	(RecordForm._on_row_change, EditForm._on_row_change):
	Pøejmenováno na `_on_field_change'.
	(RecordForm._on_field_enable, RecordForm._on_field_disable)
	(EditForm._on_field_enable, EditForm._on_field_disable): Zru¹eno.
	(RecordForm._on_editability_change)
	(EditForm._on_editability_change): Nové metody.
	():

2005-05-31  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (CodebookField._on_invoke_selection):
	Pøedávej øádek jako slovník s value_column jako klíè.

	* pytis/form/list.py (select_row): Umo¾ni pøedat øádek také jako
	slovník.

2005-05-30  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/field.py (PresentedRow.__setitem__):
	Kontroluj typ nastavované hodnoty.

	* pytis/form/application.py
	(Application._WINDOW_MENU_TITLE): Pou¾ij `&' pro klávesovou
	zkratku.
	(Application.OnInit): Vynech v menu oken pøíkazy pro manipulaci s
	okny.
	(Application._window_menu): Zru¹eno.
	(Application._update_window_menu): Nepou¾ívej
	`self._window_menu()'.  Pøidávej do titulku èíslo formuláøe,
	fungující také jako klávesová zkratka.  Popis formuláøe uvádìj
	pouze pokud nejde o BrowseForm.

	* pytis/form/dualform.py (DualForm._DESCR,
	DescriptiveDualForm._DESCR): Nové konstanty.

	* pytis/form/form.py (Form._menus, EditForm._menus): Pøidány pøíkazy pro
	manipulaci s okny.
	(Form.descr): Pokud `self._DESCR' není None, vracej jeho hodnotu.
	(EditForm._validate): Neprovádìj kontrolu datového typu hodnot v
	row zde.
	(ShowForm): Nová konstanta.

2005-05-30  Tomas Cerha  <cerha@brailcom.orWg>

	* pytis/form/dualform.py (DualForm._DESCR) 
	(DescriptiveDualForm._DESCR): Nové konstanty.

	* pytis/form/list.py (_post_selection_hook): O¹etøuj
	`DataAccessException' pøi zji¹»ování hodnoty displeje.

2005-05-26  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/spec.py (FieldSpec.__init__): Nové argumenty
	`allow_codebook_insert', `codebook_insert_spec'.
	(FieldSpec.allow_codebook_insert) 
	(FieldSpec.allow_codebook_insert): Nové metody.

	* pytis/form/inputfield.py (InputField._validation_error_handler):
	Zru¹eno.
	(InputField.validate): Zapomeò na `_validation_error_handler'.
	(TextField._create_ctrl): Vý¹ka políèka lehce zvìt¹ena.  Volej
	také `self.SetSize()'.
	(Invocable._create_widget): Nastavuj tlaèítku tooltip.
	(Invocable._create_widget): Mezeru v sizeru vytváøej zleva.
	Nastavuj `wx.FIXED_MINSIZE' pøi vkládání do sizeru.
	(Invocable._create_button): Namísto `SetSize()' pou¾ij
	`SetMinSize()'.
	(CodebookField._create_widget): Pokud bylo ve specifikaci povoleno
	`allow_codebook_insert', vytvoø také pøidávací tlaèítko.  Nastavuj
	`wx.FIXED_MINSIZE' pøi vkládání do sizeru.
	(CodebookField._validation_error_handler): Zru¹eno.
	(CodebookField._on_codebook_insert): Nová metoda.
	(CodebookField._create_widget): Nech» je tlaèítko pro pøidávání
	záznamù pøeskakováno pøi prùchodu formuláøem.

	* pytis/form/list.py (_post_selection_hook): Pokud nejsi
	zaostøeným oknem, nic neprovádìj.

2005-05-25  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/field.py (PresentedRow._Column.__init__):
	Zru¹en argument separator.
	(PresentedRow._process_fieldspec): Nepøedávej `separator'.
	(PresentedRow.__setitem__): Pøidán zatím zakomentovaný assert na
	typ nastavované hodnoty.

	* pytis/presentation/spec.py (ViewSpec.__init__): Kosmetická úprava.
	(FieldSpec.__init__): Zru¹en argument `separator'.
	(FieldSpec.separator): Metoda zru¹ena.
	(CodeBookSpec): Tøída zru¹ena.
	(FieldSpec.__init__): Povol pouze øetìzec jako argument `codebook'.

	* pytis/form/inputfield.py (InputField.create): Enumerátor zkoumej
	jak pro typ `String', tak `Number'.
	(CodebookField._maxlen): Pokud dojde k `AttributeError', vracej None.
	(CodebookField._create_widget): Zru¹eny hacky kvùli kompatibilitì
	se starou definicí `codebook'.
	(CodebookField._on_invoke_selection)
	(CodebookField._validation_error_handler): Respektuj to.

	* pytis/form/list.py (ListForm._ListTable.GetColLabelValue):
	Zru¹eno.
	(ListForm._on_column_header_paint.triangle): Nová metoda.
	(_InputFieldCellEditor.BeginEdit): Nezkou¹ej
	`control.SetInsertionPoint()'
	(ListForm._create_grid): Nastav callback `wx.EVT_PAINT' na
	`self._on_column_header_paint()'.
	(ListForm._ListTable.column_id): Nová metoda.
	(ListForm._ListTable.column_label): Nová metoda.
	(ListForm._SELECTION_CALLBACK_DALAY): Pøejmenováno na
	`_SELECTION_CALLBACK_DELAY'.
	(ListForm._select_cell): `_SELECTION_CALLBACK_DALAY' ->
	`_SELECTION_CALLBACK_DELAY'
	(ListForm._post_selection_hook): Nová metoda.
	(ListForm._on_idle): Volej ji.

2005-05-24  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/command.py (DEFAULT_COMMAND_KEYS): Pøehozeny klávesy
	pøíkazù `Application.COMMAND_NEXT_FORM' a
	`Application.COMMAND_PREV_FORM'.

	* pytis/form/application.py (Application.OnInit): Pøehozeno poøadí
	pøíkazù v menu oken.
	(Application._add_window_menu_item)
	(Application._remove_window_menu_item)
	(Application._check_window_menu_item): Metody zru¹eny.
	(Application._update_window_menu): Nová metoda.
	(Application.run_form): Namísto `self._add_window_menu_item()'
	pou¾ívej `self._update_window_menu()'.
	(Application.leave_form): Namísto `self._remove_window_menu_item()'
	pou¾ívej `self._update_window_menu()'.
	(Application.restore): Namísto `self._check_window_menu_item()'
	pou¾ívej `self._update_window_menu()'.
	(Application.on_ui_event): Opravena podmínka pro `UI_OPENED_WINDOW'.

	* pytis/output/resolver.py (OutputResolver.output_parameter):
	Pøebírej klíèové argumenty a pøedávej je metodì `get()'.

	* pytis/form/inputfield.py (CodebookField._on_invoke_selection):
	Hodnotu argumentu `select_row' pøedávej jako tuple.

	* pytis/data/_test.py (Module): Nastav implicitní kódování na
	'iso-8859-2' voláním `sys.setdefaultencoding()'.
	(Color): Nový test.
	(Enumeration): Zru¹eno.
	(Enumerator): Pøejmenováno na `DataEnumerator'.
	(DataEnumerator.test_get): Nový test.
	(FixedEnumerator): Nový test.
	(Sequence): Zru¹eno.
	(Date.test_validation): Netestuj dvouciferný rok jako validní hodnotu.
	(Boolean.test_values): Zru¹eno.

	* pytis/data/types_.py (Type.__cmp__): Porovnávej
	`self._enumerator', nikoliv `self._enumeration'.
	(Color._VALIDATION_REGEX): Oprava.

	* pytis/util/util.py (direct_public_members): Testuj tøídu pomocí
	`isinstance()' Pou¾ívej "list comprehension" namísto `map()' a
	`filter()'.
	(XStack.__init__): Vyu¾ívej `super()' k volání pøedka.
	(XStack.push): Pøidávej prvek za právì aktivní prvek, ne na konec.
	(XStack.pop): Vyu¾ívej `super()' k volání pøedka.
	(XStack.remove): Aktivuj následující, resp. pøedchozí prvek, ne
	vrcholový prvek.

	* pytis/util/test.py (prefix_test): Pou¾ívej "list comprehension"
	namísto `map()' a `filter()'.

	* pytis/presentation/spec.py (CodebookSpec.__init__): Oprava chyby.

2005-05-23  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/spec.py (CodebookSpec): Nová tøída.
	(CodeBookSpec): Buï potomkem `CodebookSpec'.
	(FieldSpec.__init__): Aktualizace docstringu.
	(FieldSpec.__init__): Nový argument `display_size'.
	(FieldSpec.display_size): Nová metoda.
	(FieldSpec.__init__): Povol také øetìzec jako argument `codebook'.

	* pytis/form/dialog.py (RunFormDialog._CODEBOOK_FORM) 
	(RunFormDialog.__init__): `CodeBook' -> `CodebookForm'.

	* pytis/form/list.py (_on_incremental_search): Zapomeò na typ
	`pytis.data.Codebook'.
	(CodeBook): Pøejmenováno na `CodebookForm'.
	(CodebookForm.__init__, CodebookForm._init_attributes) 
	(CodebookForm.on_command): `CodeBook' -> `CodebookForm'.

	* pytis/form/inputfield.py (CodeBookField): Pøejmenováno na
	`CodebookField'.
	(InputField.create): `CodeBookField' ->	`CodebookField'.
	(InputField._init_ctrl): Kosmetické úpravy.
	(EnumerationField): Aktualizace docstringu.
	(Invocable): Aktualizace docstringu.
	(CodebookField): Aktualizace docstringu.
	(CodebookField._create_widget): Specifikaci èíselníku získávej
	pøes resolver zde, pokud je self.spec().codebook() øetìzec.  Ulo¾
	ji do `self._cb_spec' a název do `self._cb_name'.
	(CodebookField._on_invoke_selection): Pou¾ívej `self._cb_spec'.
	(CodebookField._validation_error_handler): Pou¾ívej
	`self._cb_spec' a `self._cb_name'.
	(CodebookField._on_invoke_selection): `CodeBook' -> `CodebookForm'.

2005-05-23  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (EditForm.print_menu): Odstranìno.

2005-05-23  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/application.py (Application.leave_form): Neloguj
	ukonèení dialogu.

	* pytis/form/screen.py (wx_text_view): Drobná oprava.

2005-05-19  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (wx_text_view): Odhaduj velikost okna i pro
	WIKI formát ze zdrojového textu.

	* pytis/data/__init__.py: Neimportuj `xtypes'.  Aktualizuj jmenný
	prostor modulu `types_'.

	* pytis/data/_test.py (Boolean.test_values): Oèekávej vnitøní
	hodnoty, nikoli u¾ivatelské. 
	(Boolean.test_noncmp): Porovnávej s typem `String', ne `Enumeration'.
	(Codebook): Zru¹eno.
	(Enumerator): Nový test.

	* pytis/data/types_.py (Type.VM_NULL_VALUE): Nová konstanta.
	(Type._VALIDATION_MESSAGES): Pøidána zpráva pro `VM_NULL_VALUE'.
	(Type.__init__): Nový argument `enumerator'.
	(Type._complete): Zru¹eno.
	(Type.__cmp__): Porovnávej také enumerátory.
	(Type.__getattr__): Nevolej `self._complete()'.
	(Type._check_constraints): Pokud je value None a typ není "NOT
	NULL", vracej True bez dal¹ích kontrol.  Pokud je definován
	enumerátor, kontroluj hodnotu jeho prostøednictvím.
	(Type.enumerator): Nová metoda.
	(Type.constraints): Zru¹eno.
	(MutableType): Tøída zru¹ena.
	(Enumeration): Tøída zru¹ena.
	(Boolean): Buï rovnou potomkem `Type' s vyu¾itím `enumerator'.
	(FixedEnumeration): Tøída zru¹ena.
	(Enumerator, FixedEnumerator, MutableEnumerator, DataEnumerator): Nové tøídy.
	(Sequence): Tøída zru¹ena.
	(_Value.__cmp__): Pokud dojde na porovnávání hodnot, pou¾ij
	`cmp()', ne `compare_objects()'.
	(Boolean.__init__): Pøedávej argument `not_null'.

	* pytis/data/dbdata.py (DBDataPostgreSQL._pg_codebook_cache):
	Zru¹eno.
	(DBDataPostgreSQL._pg_query): Nevytváøej `_pg_codebook_cache'.
	(DBDataPostgreSQL._pg_create_make_row_template): Odstranìno
	zpracování typù `Codebook' a `Sequence'.  `DateTime' a `Time'
	zpracovávej spoleènì.  Neøe¹ `icount', je nyní v¾dy 1.
	(DBDataPostgreSQL._pg_validate_codebook): Metoda zru¹ena.
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Neoèekávej `icount'
	v `self._pg_make_row_template'.  Zapomeò na typy typy `Codebook' a
	`Sequence'.  `DateTime' a `Time' zpracovávej spoleènì.
	(DBDataPostgreSQL._pg_value): Namísto `Enumeration' pracuj s `Boolean'.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Zru¹eny v¹echny hacky se zpracováním `Codebook' a `Sequence'.
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql.relop):
	Zapomeò na typy typ `Codebook'.

	* pytis/presentation/field.py (PresentedRow._process_fieldspec):
	Pracuj s enumerátorem, ne pøímo s typem.
	(PresentedRow.__str__): Volej metodu pøedka, pokud je¹tì
	neexistuje `self._row'.
	(PresentedRow._recompute_codebook_runtime_filter): Pracuj s
	enumerátorem, ne pøímo s typem.

	* pytis/form/inputfield.py (InputField.create): Èíselníková
	políèka rozpoznávej podle enumerátoru, ne podle typu.
	(EnumerationField._values): Pracuj s enumerátorem.
	(EnumerationField._set_value, EnumerationField.get_value): Zru¹en
	neaktuální docstring.
	(ListBoxField._create_ctrl): Kosmetické úpravy.
	(CodeBookField._on_change_hook):
	(CodeBookField._on_invoke_selection): Zru¹en hack s validací podle
	typu sloupce èíselníku.  Pracuj s enumerátorem.  Nepou¾ívej
	`returned_column'.
	(CodeBookField._validation_error_handler): Validuj typ pøímo, ne
	pøes sloupce èíselníku.
	(CodeBookField._validation_error_handler): Nepou¾ívej
	`returned_column'.

	* pytis/form/list.py (CodeBook.__init__): O¹etøuj Double-click
	voláním `_on_activation()'.
	(CodeBook._init_attributes, CodeBook._init_attributes): Argument
	`ctype' nahrazen argumentem `condition'.
	(BrowseForm._context_menu): Kosmetické úpravy.

	* pytis/form/application.py (Application.run_form): Po uzavøení
	formuláøe volej `busy_cursor(False)'.
	(Application.run_dialog): Po uzavøení dialogu volej
	`busy_cursor(False)'.

	* pytis/data/xtypes.py: Removed.

	* pytis/data/data.py (MemData.select): `cond' není nikdy None.
	Vracej poèet nalezených øádek.

2005-05-19  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (Form.print_menu): Zohledni vrácení 'None' z
	'print_spec'. 

2005-05-18  Pavel Hanak  <hanak@asellus.cz>

	* pytis/util/configuration.py (Configuration._Option_doc_dir):
	Nová konfiguraèní volba.

2005-05-13  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (wx_text_view): Pou¾ívej `lcg.WikiNode', ne
	pøímo `lcg.wiki.Parser'.
	(wx_text_view): Výstup Wiki parseru také obaluj HTML kódem.

	* pytis/form/dialog.py (GenericDialog._create_dialog_elements):
	Vkládej report do sizeru bez okrajù.

2005-05-12  Tomas Cerha  <cerha@brailcom.org>

	* pytis/presentation/spec.py (TextFormat.PLAIN): Nová tøída.

	* pytis/form/screen.py (wx_text_view): Nová funkce.
	(InfoWindow._create_content): Vyu¾ívej ji.
	(wx_html_view): Nová funkce.
	(HtmlWindow._create_content): Vyu¾ívej ji.
	(InfoWindow.__init__): Nepøedáven argument `title' volání
	`_create_content()'.
	(InfoWindow.__init__): Nový argument `format'.  Vytváøej widget
	pøímo zde voláním `wx_text_view()'.  Pøidány asserty na typy arguemntù.
	(InfoWindow._create_content): Metoda zru¹ena.
	(HtmlWindow): Tøída zru¹ena.
	(wx_html_view): Funkce zru¹ena.
	(wx_text_view): Nový argument `format'.  Vytváøej odpovídající
	widget podle tohoto argumentu.

	* pytis/form/dialog.py (GenericDialog.__init__): Nové arguemnty
	`report' a `html'.
	(GenericDialog._create_dialog): Pokud byl specifikován `report',
	pøidej do dialogu pøíslu¹ná prvek.
	(Message.__init__, MultiQuestion.__init__, Question.__init__):
	Nové arguemnty `report' a `html'.
	(GenericDialog.__init__): Argument 'html' nahrazen argumentem
	'report_format'.
	(GenericDialog._create_dialog_elements): Pøedávaj `report_format'
	volání `wx_text_view()'.  Nepou¾ívej ji¾ `wx_html_view()'.
	(Message.__init__, MultiQuestion.__init__, Question.__init__):
	Argument 'html' nahrazen argumentem 'report_format'.

	* pytis/util/log.py (SyslogLogger.FACILITY_LOCAL0) 
	(SyslogLogger.FACILITY_LOCAL1, SyslogLogger.FACILITY_LOCAL2)
	(SyslogLogger.FACILITY_LOCAL3, SyslogLogger.FACILITY_LOCAL4)
	(SyslogLogger.FACILITY_LOCAL5, SyslogLogger.FACILITY_LOCAL6)
	(SyslogLogger.FACILITY_LOCAL7): Nové konstanty.
	(SyslogLogger.__init__): Pøidán assert na hodnotu `facility'.
	
2005-05-11  Pavel Hanak  <hanak@asellus.cz>

	* pytis/form/form.py (EditForm._commit_form): Cleanup provádìj
	pouze pokud projde 'check'.

2005-05-10  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/form/list.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/form/screen.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/form/output.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/remote/data.py (_DataChangesWatcher._watcher)
	(_DataChangesWatcher.register_callback)
	(_DataChangesWatcher.unregister_callback): Volání 
	`log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/util/util.py (copy_stream): Volání
	`log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/util/resolver.py (FileResolver._get_module): Odstranìna
	debug hlá¹ka.

	* pytis/output/formatter.py (LoutFormatter._resolve)
	(LoutFormatter._lout, LoutFormatter._lout, LoutFormatter._lout):
	Volání `log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/form/form.py (Form._on_parent_close): Volání
	`log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/form/event.py (wx_callback.process_event): Volání
	`log(DEBUG, ...)'  uvozeno podmínkou `if __debug__: ...'.

	* pytis/data/dbdata.py (Module): V¹echna volání `log(DEBUG, ...)'
	uvozena podmínkou `if __debug__: ...'.

	* pytis/util/configuration.py
	(Configuration._Option_application_name.default): Vracej `Pytis'.
	(Configuration._Option_log_logger.default_string): Vracej hodnotu
	korespondující s `default' hodnotou.

	* pytis/form/application.py (Application.OnInit): titulek aplikace
	získávej pøímo z konfiguraèní volby `application_name', nikoliv ze
	specifikace.
	(set_status): Volání `log(DEBUG, ...)'  uvozeno podmínkou 
	`if __debug__: ...'.
	(Application.OnInit, Application.run_dialog): Zmìnìna logovací
	priorita.

	* pytis/util/log.py (StreamLogger): Buï potomkem `object'.
	(StreamLogger.__init__): Pou¾ívej `super()'.
	(SyslogLogger._prefix): Loguj také jméno u¾ivatele.
	(LoggingInterface.__call__): Kosmetické úpravy.
	(SyslogLogger.__init__): Nová metoda.
	(SyslogLogger._send): Zakóduj pøedanou `facility' do `priority'.

2005-05-09  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/screen.py (HtmlWindow, InfoWindow): Nové tøídy.

	* pytis/form/application.py (Application.wx_frame): Nová metoda.
	(wx_frame): Nová funkce.

2005-05-06  Pavel Hanak  <hanak@asellus.cz>

	* pytis/data/dbdata.py
	(DBDataPostgreSQL._pg_create_make_row_template): Doplò o testování
	instance 'Time'.
	(DBDataPostgreSQL._pg_make_row_from_raw_data): O¹etøi typ 'Time'.

2005-05-06  Petr Malivanek  <malivanek@asellus.cz>

	* pytis/presentation/spec.py, pytis/form/screen.py (init_colors):
	Doplnìní konstant:
        BLANCHETALMOND:(255, 235, 205),
        LIGHTYELLOW:(255, 255, 224),
        PEACHPUFF2:(238, 203, 173),
        SLATEGRAY2:(185, 211, 238),
        LIGHTSALMON:(255, 160, 122)	

2005-05-05  Tomas Cerha  <cerha@brailcom.org>

	* pytis/data/xtypes.py (Codebook.validity_condition): Povol None,
	jako hodnotu vrácenou providerem.

	* pytis/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_get_table_type): Nový
	argument `type_kwargs'.  Pøedávej jej volání
	`self._pdbb_get_type()'
	(PostgreSQLStandardBindingHandler._pdbb_get_type): Nový argument
	`type_kwargs'.  Nech» je argument `ctype' nepovninný.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Nepodporuj ji¾ specifikaci typu ani enumerátoru obsahující tuple.
	Pøedávej klíèové argumenty z DBColumnBinding do volání
	`self._pdbb_get_table_type()' a konstruktorùm typù.
	(DBBinding.__init__): Pøidán assert na typ argumentu `id'.
	(DBColumnBinding.__init__): Nový argument `**kwargs'.
	Zdokumentovány zmìny v chápání argumentù `enumerator' a `type_'.
	Pøidány asserty an datové typy v¹ech arguemntù.
	(DBColumnBinding.kwargs): Nová metoda. 

2005-05-02  Tomas Cerha  <cerha@brailcom.org>

	* pytis/form/inputfield.py (CodeBookField._on_invoke_selection):
	`begin_search' condition fixed.

	* pytis/form/list.py (CodeBook._on_idle): `begin_search' handling
	simplified.  Report invalid `begin_search' argument.

	* pytis/form/search.py: Import everything from `pytis.presentation'.

