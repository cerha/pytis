# -*- coding: iso-8859-2 -*-

# Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Brailcom, o.p.s.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

"""Formuláøe pro editaci konfiguraèních voleb v u¾ivatelském rozhraní.

Formuláøe nejsou vázány na ¾ádnou specifikaci.  Datový objekt i prezentaèní
specifikace jsou generovány automaticky pøi vytvoøení formuláøe.  Layout je
zvolen podle argumentu 'name' konstruktoru formuláøe jako jedna z polo¾ek
konstanty '_LAYOUT' definované ní¾e.  Tak¾e výbìr specifikace z resolveru,
bì¾ný u jiných formuláøù je zde nahrazen výbìrem layoutu z pøeddefinovaných
layoutù a vygenerováním zbylých specifikaèních parametrù podle vlastností
konfiguraèních voleb obsa¾ených v tomto layoutu.

"""

from pytis.form import *

_LAYOUT = (
    ('ui', LayoutSpec(_("Nastavení u¾ivatelského rozhraní"), VGroup(
    LVGroup(_("Barvy"),
            HGroup(LVGroup(_("Aktivní øádek"),
                           'row_focus_fg_color','row_focus_bg_color'),
                   LVGroup(_("Neaktivní øádek"),
                           'row_nofocus_fg_color', 'row_nofocus_bg_color'),
                   LVGroup(_("Editovaný øádek"),
                           'row_edit_fg_color','row_edit_bg_color'),
                   ),
            'cell_highlight_color',
            'grid_line_color',
            'grouping_background_downgrade',
            'field_disabled_color',
            'field_denied_color',
            'field_invalid_color',
            ),
    LVGroup(_("Chování"),
            'stretch_tables',
            'show_tooltips',
            'auto_menu_accel',
            'show_splash',
            'cache_spec_onstart'),
    LVGroup(_("Ostatní"),
            'sender_address'),
    ))),
    ('export', LayoutSpec(_("Nastavení exportu"),
                          VGroup('export_directory','export_encoding')),
     ))

_LABELS = {
    'row_focus_fg_color':    _("Text"),
    'row_focus_bg_color':    _("Pozadí"),
    'row_nofocus_fg_color':  _("Text"),
    'row_nofocus_bg_color':  _("Pozadí"),
    'row_edit_fg_color':     _("Text"),
    'row_edit_bg_color':     _("Pozadí"),
    'cell_highlight_color':  _("Zvýraznìní aktivní buòky"),
    'grid_line_color':       _("Møí¾ka tabulky"),
    'grouping_background_downgrade': _("Ztmavení øádkù pøi seskupování"),
    'field_disabled_color':  _("Neaktivní vstupní políèko"),
    'field_denied_color':    _("Zakázané vstupní políèko"),
    'field_invalid_color':   _("Nevalidní vstupní políèko"),
    'show_splash':           _("Zobrazovat úvodní dialog"),
    'show_tooltips':         _("Zobrazovat bublinovou nápovìdu"),
    'auto_menu_accel':       _("Automaticky èíslovat menu akceleraèními klávesami"),
    'stretch_tables':        _("Rozpínat tabulky na ¹íøku okna"),
    'cache_spec_onstart':    _("Naèítat specifikace pøi startu"),
    'sender_address':        _("E-mailová adresa"),
    'export_directory':      _("Výchozí adresáø"),
    'export_encoding':       _("Kódování exportovaných dat"),
}

_FIELDSPEC_KWARGS = {
    'export_directory': dict(width=45),
    'sender_address': dict(width=45),
}

def config_menu_items(hotkeys={}):
    """Vra» seznam polo¾ek menu pro otevøení konfiguraèních formuláøù.

    Vrací tuple instancí 'MItem', z nich¾ ka¾dá otevírá jeden ze standardnì
    definovaných formuláøù pro editaci konfiguraèních voleb.  Pou¾itím této
    funkce v definici menu aplikace budou automaticky do menu pøidávány polo¾ky
    standardních konfiguraèních formuláøù bez nutnosti zmìn v aplikaci pøi
    aktualizaci systému Pytis.

    """
    items = [MItem(layout.caption(),
                   command=pytis.form.Application.COMMAND_RUN_FORM,
                   args=dict(form_class=ConfigForm, name=name),
                   hotkey=hotkeys.get(name),
                   help=(_('Otevøít konfiguraèní formuláø "%s"') % \
                         layout.caption()),
                   icon='config-'+name)
             for name, layout in _LAYOUT]
    return tuple(items)

def configurable_options():
    """Vra» seznam v¹ech voleb nastavitelných pomocí konfiguraèních formuláøù.

    Vrací tuple øetìzcù odpovídajících názvùm konfiguraèních voleb.

    """
    options = ()
    for id, layout in _LAYOUT:
        options = options + tuple(layout.order())
    return options

class _ConfigData(pytis.data.RestrictedData):
    """Fale¹ná datová tøída."""
    
    def __init__(self, columns, **kwargs):
        super(_ConfigData, self).__init__(columns=columns, key=columns[0], **kwargs)
        self._giveone = False

    def select(self, *args, **kwargs):
        self._giveone = True
        return 1

    def fetchone(self, direction=pytis.data.FORWARD, transaction=None):
        if direction != pytis.data.FORWARD or not self._giveone:
            return None
        self._giveone = False
        row_data = [(o, pytis.data.Value(config.option(o).type(), getattr(config, o)))
                    for o in [c.id() for c in self.columns()]]
        return pytis.data.Row(row_data)

    def update(self, key, row, transaction=None):
        for option in row.keys():
            setattr(config, option, row[option].value())
        wx.ToolTip.Enable(config.show_tooltips)
        return row, True
        
        

class ConfigForm(PopupEditForm):
    """Formuláø pro editaci konfiguraèních voleb.

    Argument 'name' konstruktoru zde nemá obvyklý význam.  Slou¾í jako klíè do
    seznamu layoutù definovaného vý¹e (konstanta '_LAYOUT').  Datová i
    prezentaèní specifikace pro tento layout jsou vytvoøeny automaticky.
    
    Formuláø po svém ukonèení automaticky aktualizuje konfiguraci novými
    hodnotami.

    """
    DESCR = _("konfiguraèní formuláø")
    
    def __init__(self, *args, **kwargs):
        super(ConfigForm, self).__init__(*args, **dict(kwargs, mode=self.MODE_EDIT, select_row=0))
        
    def _layout(self):
        return dict(_LAYOUT)[self._name]

    def _create_view_spec(self):
        def descr(name):
            option = config.option(name)
            descr = option.description()
            doc = option.documentation()
            if doc:
                descr += "\n" + doc
            return descr
        fields = [Field(option, _LABELS.get(option, option), descr=descr(option),
                        **_FIELDSPEC_KWARGS.get(option, {}))
                  for option in self._layout().order()]
        return ViewSpec(_("Nastavení u¾ivatelského rozhraní"),
                        fields, layout=self._layout(), **self._spec_kwargs)

    def _create_data_object(self):
        columns = [pytis.data.ColumnSpec(option, config.option(option).type())
                   for option in self._layout().order()]
        return pytis.data.DataFactory(_ConfigData, columns).create()
    
    def _print_menu(self):
        return None
    
    def _buttons(self):
        button = dict(id=wx.ID_APPLY,
                      tooltip=_("Uplatnit zmìny bez uzavøení formuláøe"),
                      command=self.COMMAND_COMMIT_RECORD(close=False))
        buttons = super(ConfigForm, self)._buttons()
        return (buttons[0], button) + buttons[1:]
    
