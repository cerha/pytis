(defun pytis-has-key ()
  (interactive)
  (goto-char (point-min))
  (while (re-search-forward "\\(\\<not +\\)?\\([.a-zA-Z0-9_]+\\)\\.has_key(" nil t)
    (let ((not (or (match-string 1) ""))
          (dict (match-string 2))
          (end (1- (match-end 0)))
          point)
      (goto-char end)
      (delete-region (match-beginning 0) end)
      (setq point (point))
      (forward-sexp)
      (delete-char -1)
      (insert " " not "in " dict)
      (goto-char point)
      (delete-char 1))))

(defun pytis-callable ()
  (interactive)
  (goto-char (point-min))
  (re-search-forward "^\\(import\\|from\\)")
  (forward-line 0)
  (insert "import collections\n")
  (let ((case-fold-search nil))
    (while (re-search-forward "\\<callable(" nil t)
      (forward-char -1)
      (delete-region (- (point) 8) (point))
      (insert "isinstance")
      (forward-sexp)
      (forward-char -1)
      (insert ", collections.Callable"))))

(defun pytis-reduce ()
  (interactive)
  (goto-char (point-min))
  (re-search-forward "^\\(import\\|from\\)")
  (forward-line 0)
  (insert "import functools\n")
  (let ((case-fold-search nil))
    (while (re-search-forward "\\<reduce(" nil t)
      (forward-word -1)
      (insert "functools.")
      (forward-word 2))))
