2003-02-13  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (LookupForm._search): Odstranìn zapomenutý
	print.
	* lib/form/list.py (_search_adjust_data_position): Odstranìn
	zapomenutý print.

	* lib/data/_test.py (DBDataDefaultClass.check_select_aggregate):
	Nový test.
	* lib/data/dbdata.py (DBDataPostgreSQL.select)
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands): Nový
	atribut `_pdbb_command_select_agg'.
	(DBDataPostgreSQL.select_aggregate): Nová metoda.
	(PostgreSQLStandardBindingHandler._pg_select_aggregate): Nová metoda.
	* lib/data/data.py (Data.AGG_MIN, Data.AGG_MAX, Data.AGG_COUNT)
	(Data.AGG_SUM, Data.AGG_AVG): Nové konstanty.
	(Data.select_aggregate): Nová metoda.
	(Data.search): Doplnìno chybìjící `self' pøed
	UnsupportedOperation.

2003-02-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (Form._init): O¹etøuj ResolverError.

	* lib/form/dialog.py (db_operation): Pøi chybì loguj traceback.

	* lib/form/event.py (top_level_exception): Vyu¾ívej
	`format_traceback'.

	* lib/util/util.py (format_traceback): Nová funkce.

	* lib/output/formatter.py (LoutFormatter._MARK_PROCESSORS):
	Pøidáno HLine.
	(LoutFormatter._format_hline): Nová metoda.
	(_INTRO): Pøidán parametr @firstPageHeader.  Do @vfill pøidána
	rezervace místa pro zamezení nevhodného umístìní zlomu stránku.
	(LoutFormatter.__init__): Nový atribut `_first_page_header'.
	(LoutFormatter._process, LoutFormatter._format_document): Pøidána
	podpora pro first-page-header.
	* lib/output/markup.py (HLine): Nová znaèka.
	(Document): Pøidán parametr `first_page_header'.

	* lib/form/output.py (PrintForm._create_controls): Pøidáno
	tlaèítko pro tisk.
	(PrintForm._on_print_): Pøidán argument `__event'.

	* lib/form/list.py (_search_skip): _table pøetáèej na `new_row'.
	(_search_adjust_data_position): Nedìlej víc ne¾ volání
	self._table.rewind.
	(ListForm._ListTable.rewind): Nech» `row' je rovno `position', ne
	`position+1'.
	(_IncrementalSearch._search): Pøi urèení výsledného øádku
	zohledòuj "rozbìh" od pøedchozího øádku.

2003-02-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (ListForm._ListTable.__init__): Inicializuj
	atribut `_current_row'.
	(ListForm._ListTable.rewind): Reset provádìj jen kdy¾ `position'
	je None.  Místo `_fetch' pou¾ívej `_retrieve_row'.
	(ListForm._ListTable._fetch): Pøesunuto jako lokální funkce do
	_retrieve_row.
	(ListForm._ListTable._retrieve_row): Zohlednìna pøedchozí zmìna.
	Zru¹eny asserts na pozici ukazovátka datového objektu, pozice
	pøebírána pøímo z datového objektu.

2003-02-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_recreate_grid): Volej SetSize na self.
	(_IncrementalSearch.__init__, _IncrementalSearch._set_row):
	Opraveny pøeklepy list -> listform.

2003-02-08  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EditForm._create_group): Pøidána podpora pro
	kompaktní políèka.

	* lib/presentation/field.py (FieldSpec.__init__): Nový argument
	compact.
	(FieldSpec.compact): Nová metoda.

2003-02-07  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/util.py (xor): Nová funkce.

	* lib/form/list.py (ListForm._ListTable._retrieve_row): Pøidána
	asserts na pozici v datovém objektu.

	* lib/data/dbdata.py (DBDataPostgreSQL.last_row_number): Nová
	metoda.
	* lib/data/data.py (Data.__init__): Nový atribut
	`_select_last_row_number'.
	(Data.last_row_number): Nová metoda.
	(Data.select, Data.close): Nastavuj `_select_last_row_number'.
	(MemData.last_row_number): Nová metoda.

2003-02-07  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (CodeBookField._on_invoke_selection):
	Nakonec volej `self.set_focus()'.
	(InputField._on_change): Nech» je argument `event' nepovinný.
	(TextField._on_key_down_multiline): Pøi stisku klávesy Enter volej
	`self._on_change()'.
	(InputField.is_modified): Kosmetická úprava.

	* lib/data/data.py (Row.__init__): Více assertù na argument
	`data'.

2003-02-06  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (ListForm._ListTable.rewind): V¾dy resetuj
	aktuální ukazovátko a pøeviò `_data'.
	(_search_adjust_data_position, select_row.set): Volej
	self._table.rewind.
	(_recreate_grid, _create_grid): Zru¹eno `_last_select_row_count',
	pou¾ívej `_lf_select_count'.
	(ListForm._ListTable.rewind): Resetuj cache.
	(ListForm._ListTable.update): Neresetuj cache.

	* lib/form/form.py (LookupForm._init_select): Nastavuj
	`_lf_select_count'.  Zohledòuj `_lf_filter'.
	(LookupForm._init): Inicializuj `_lf_select_count' na None.
	(LookupForm._find_row.find_row): Nový select zahajuj
	prostøednictvím metody `_init_select' a jen tehdy, pokud je¹tì
	¾ádný nebyl zahájen.

2003-02-05  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application.on_command): Nejprve testuj
	`__debug__' a potom teprve `Application.COMMAND_CUSTOM_DEBUG'.

	* lib/form/form.py (EditForm._create_form): Vytvoø v¹echna políèka
	v poøadí daném `LayoutSpec.order()' a ulo¾ do `self._fields'.
	(EditForm._create_group): Zru¹en argument `data'.
	(EditForm._create_form_parts, EditForm._create_group): Respektuj
	to.
	(EditForm._create_group): `fields' pøejmenováno na `pack'.
	Upraven dokumentaèní øetìzec.
	(EditForm._pack_fields): Zru¹en argument `data'.  Argument fields,
	nech» je jen seznamem identifikátorù, nikolov specifikací.
	(EditForm._create_group, PopupEditForm._create_form_parts) 
	(ShowForm._create_form_parts): Respektuj to.
	(EditForm._pack_fields): políèka zde nevytváøej, pouze vybírej ze
	seznamu `self._fields'.

	* lib/form/spec.py (LayoutSpec.__init__): Úprava dokumentace.
	Doplnìn assert na tøídu argumentu `group'.  Pokud není urèen
	argument `order', vytvoø poøadí podle poøadí ve skupinách.  V
	opaèném pøípadì zkontroluj zda `order' obsahuje správné hodnoty.
	(LayoutSpec.order): Upraven dokumentaèní øetìzec.
	(ViewSpec.__init__): Doplnìny komentáøe.
	(ViewSpec.__init__.recourse_group): Nová funkce.
	(ViewSpec._recourse_group): Zru¹eno.
	(ViewSpec.__init__): Nekontroluj to, co mù¾e být zkontrolováno v
	konstruktoru `LayoutSpec'.

2003-02-04  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EditForm._create_form_parts): Velikost fontu
	urèi natvrdo, namísto pou¾ití `layout.caption_size()'.
	(EditForm._create_group): Úprava dokumentace.
	(PopupEditForm._create_form_parts): Velikost fontu
	urèi natvrdo, namísto pou¾ití `layout.caption_size()'.

	* lib/form/spec.py (GroupSpec): Více dokumentace.
	(LayoutSpec): Úprava dokumentace.
	(LayoutSpec.__init__): Nový argument `order'.  Zru¹en argument
	`caption_size'.
	(LayoutSpec.caption_size): Zru¹eno.
	(LayoutSpec.order): Nová metoda.
	(ViewSpec.__init__): Procházej skupinu jen, pokud je nataveno
	`__debug__'.  Zkontroluj správnost zadání `order' v layoutu.

	* lib/form/list.py (ListForm.show, ListForm.hide): Opìt nahrazeno
	metodou `Show'.  
	(ListForm._ListTable.GetValue): Pokud je `the_row' None,
	nepokou¹ej se volat `format()' a vra» rovnou `'.
	(ListForm._recreate_grid): Pøidáno TODO.

	* lib/form/application.py (_call_current_window): Zru¹eno.
	(Application.on_command): O¹etøuj pøíkaz
	`Application.COMMAND_REFRESH'.  Obejdi se bez metody
	`_call_current_window()'.
	(Application.on_ui_event): Obejdi se bez metody
	`_call_current_window()'.
	(Application.on_ui_event): Metodu volej na vrchní okno pouze,
	jde-li o instanci 'Form'.

	* lib/form/command.py (Application.COMMAND_REFRESH): Nový pøíkaz.
	(Dialog.COMMAND_CLOSE_DIALOG): Doplnìn dokumentaèní øetìzec.
	(Dialog.COMMAND_COMMIT_DIALOG): Doplnìn dokumentaèní øetìzec.

2003-02-03  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/flibdata.py (data_table): Okraje tabulky nastav na
	UFont(0.2).

	* lib/output/formatter.py (LoutFormatter._format_long_table):
	Nepøidávej pod labels //@smallmargin.  Odsazení oddìlovaèe
	pøidávej i v pøípadì absence oddìlovací èáry, nepou¾ívej pùvodní
	tvrdé implicitní mezerování.  Tlou¹»ky èar a okraje formátuj pøes
	_unit.
	(_INTRO): V @hline a @vline opìt neprovádìj kontrakci.

	* lib/form/list.py (BrowseForm._formatter_parameters): Do
	P_CONDITION pøidej _lf_initial_condition.

2003-01-31  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/flibdata.py (data_table): Do LongTable pøidáno
	`separator_margin' a `line_separator_margin'.  Doplnìna chybìjící
	hvìzdièka v pøedání `long_table_args'.

	* lib/output/formatter.py
	(LoutFormatter._format_table.cell_alignment)
	(LoutFormatter._format_image): Hlá¹ky TemplateException pøelo¾eny
	do èe¹tiny.
	(LoutFormatter._unit): Nová metoda.
	(LoutFormatter._format_space, LoutFormatter._format_table)
	(LoutFormatter._format_long_table): Formátuj délkové jednotky pøes
	`_unit'.
	(_INTRO): V @hline, resp. @vline, obal celou konstrukci voláním
	@HContract, resp. @VContract.  V @hgroup, resp. @vgroup, pøidávej
	závìreènou ukonèovací èáru odpovídajícího smìru.
	(LoutFormatter._format_group): Nepøidávej na konec ukonèovací èáru
	odpovídajícího smìru.
	(LoutFormatter._format_group, LoutFormatter._format_list):
	Opraveno TemplateError na TemplateException.

	* lib/output/markup.py (Spaces): Pøejmenováno na USpace.  Zmìnìna
	definice v docstringu na mezislovní mezeru.
	(UFont, UPoint): Nové tøídy.
	(Mm): Pøejmenováno na UMm.
	(Unit): Do docstringu doplnìna informace o mo¾nosti pou¾ití.
	(Unit.__nonzero__, Unit.__add__, Unit.__mul__): Nové metody.

2003-01-31  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (_IncrementalSearch): Argument `list'
	prejmenovan na `listform'.  Atribut `self._list' takté¾.
	(_IncrementalSearch._exit): `self._list' -> `self._listform'.
	(_IncrementalSearch._search): `self._list' -> `self._listform'.
	(_IncrementalSearch._set_row): `self._list' -> `self._listform'.
	(ListForm.__init__): Nevolej `self.SetFocus()'.
	(ListForm._recreate_grid): Namísto volání `self.SetFocus()'
	pøípadnì `self.OnKillFocus()' volej jen
	`self._change_selection_colors()'.
	(ListForm._change_selection_colors): Nech» je argument `colors'
	nepovinný.
	(ListForm._on_select_cell): Namísto volání `self.SetFocus()' volej
	jen `self._change_selection_colors()'.
	(ListForm.OnSetFocus, ListForm.OnKillFocus): Zru¹eno.
	(ListForm.SetFocus): Zru¹eno (pøesunuto do metody `focus()').
	(ListForm.Show): Zru¹eno (nahrazeno metodami `show()' a `hide()').
	(ListForm.show): Nová metoda.
	(ListForm.hide): Nová metoda.
	(ListForm.focus): Pøeber také funkènost zru¹ené metody
	`SetFocus()'.  Nevolej v¹ak `self._grid.MakeCellVisible()'.
	(ListForm.defocus): Namísto volání `self.OnKillFocus()' volej
	`self._change_selection_colors()'.
	(CodeBook.__init__): Nevy¾aduj pøítomnost `returned_columns' v
	`kwargs'.
	(ListForm.__init__): Pokud nebylo nastaveno `self._select_row',
	volej `self._grid.MakeCellVisible(0, 0)'.

	* lib/form/application.py (Application.OnInit): Definuj v globální
	klávesové mapì Klávesovou zkratku pro pøíkaz
	`Application.COMMAND_CUSTOM_DEBUG'.

	* lib/form/command.py (Command.__init__): Úprava logovací hlá¹ky.
	Nenastavuj potlaèený atribut `key' pøíkazu
	`Application.COMMAND_CUSTOM_DEBUG'.


	* lib/form/screen.py (Keymap._define_key): Úprava hlá¹ky assertu.
	(Keymap.define_key): Neloguj.
	(MenuBar.__init__.check_duplicate_keys): Nestì¾uj si na klávesu,
	pokud definuje stejný pøíkaz.  Loguj více informací.

	* lib/form/inputfield.py (InputField._skip_navigation_callback):
	Nová metoda.
	(InputField._init_controls, Invocable._create_widget) 
	(CodeBookField._create_widget): Vyu¾ívej ji.
	(InputField._on_set_focus): Pøidáno TODO.
	(TextField._on_set_focus): Nová metoda.
	(TextField._on_kill_focus): Nová metoda.

	* lib/form/form.py (EditForm._navigate): Vyka¹li se na wxWindows
	verzi < 2.3.

2003-01-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (LoutFormatter._format_font_family):
	Nastavuj øez fontu, na Base.
	(LoutFormatter._format_table, LoutFormatter._format_long_table):
	Pøidána podpora pro Table.Column.ALIGN_CENTER.
	(LoutFormatter._MARK_PROCESSORS): Pøidány znaèky AlignLeft,
	AlignRight a Nbsp.
	(_INTRO): Nové definice @alignLeft a @alignRight.  Do @lcell a
	@rcell doplnìn parametr `header'.  Nové macro "#A0".  @hline a
	@vline mají nové parametry `linewidth' a `margin'.  V @cell místo
	| pou¾ívej ||.
	(LoutFormatter._format_align_left)
	(LoutFormatter._format_align_right): Nové metody.
	(LoutFormatter._format_long_table): Hlavièku necentruj, nýbr¾ se
	øiï parametrem sloupce `label_alignment'.
	(LoutFormatter._format_table): Nápodobnì.  Rozdìleno generování
	specifikace øádkù a specifikace hlavièky.
	(LoutFormatter._format_nbsp): Nová metoda.
	(LoutFormatter._format_long_table): Nastavuj správnou tlou¹»ku
	oddìlovacích èar.  Zohledòuj margin.  Nevkládej tolik vertikálních
	mezer.

	* lib/output/markup.py (FontFamily): Dokumentaèní zmìna: Znaèka
	nastavuje základní øez fontu.
	(Table.Column.ALIGN_CENTER): Nová konstanta.
	(AlignLeft, AlignRight): Nové znaèky.
	(Table.Column.__init__): Nový argument a atribut
	`label_alignemnt'.
	(Nbsp): Nová znaèka.
	(LongTable.__init__): Nové argumenty `separator_margin' a
	`line_separator_margin'.
	(LongTable.separator_margin, LongTable.line_separator_margin):
	Nové metody.
	(Unit, Mm, Spaces): Nové tøídy.

2003-01-29  Pavel Hanak  <hanak@brailcom.cz>

	* lib/output/formatter.py (_INTRO): Nastav @lineSkip na 1.10fx.

2003-01-29  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (LoutFormatter._format_long_table):
	Kosmetická úprava formátování zdrojáku Lout.
	(_INTRO): Nové makro @lineSkip a definice @font.
	(LoutFormatter._format_font_size)
	(LoutFormatter._format_font_family): Místo @Font pou¾ívej @font.

2003-01-29  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dialog.py (Dialog.__init__): Konstruktor pøedka volej
	bez argumentù.
	(GenericDialog._create_dialog_elements): Pro ka¾dé tlaèítko
	o¹etøuj události kláves.
	(GenericDialog.on_command): Namísto
	`Application.COMMAND_LEAVE_FORM' o¹etøuj
	`Dialog.COMMAND_CLOSE_DIALOG' a `Dialog.COMMAND_COMMIT_DIALOG'.
	(GenericDialog._close_dialog): Nová metoda.
	(GenericDialog._commit_dialog): Nová metoda.
	(InputDialog._create_content): Namísto pøímého nastavování pomocí
	`wx_callback()' vyu¾ij metodu `KeyHandler._handle_keys()'.
	(InputDialog._on_key_down): Zru¹eno.
	(InputDialog._commit_dialog): Nová metoda.
	(Login._create_content): Namísto pøímého nastavování pomocí
	`wx_callback()' vyu¾ij metodu `KeyHandler._handle_keys()'.
	(RunFormDialog._CODEBOOK_FORM): Nová konstanta.
	(RunFormDialog.__init__): Pøidej `self._CODEBOOK_FORM' do slovníku
	tøíd.
	(RunFormDialog._create_content): Pøidej `self._CODEBOOK_FORM' do
	seznamu tøíd.
	(RunFormDialog._create_content): Namísto pøímého nastavování
	pomocí `wx_callback()' vyu¾ij metodu `KeyHandler._handle_keys()'.
	(Calendar._create_content): O¹etøuj události kláves na kalendáøi.
	(BugReport._create_content): Font vytváøej v¾dy jako novou
	instanci.
	(BugReport.on_command): Zru¹eno.
	(BugReport._close_dialog): Nová metoda.
	(FileDialog.on_command): Namísto `Application.COMMAND_LEAVE_FORM'
	o¹etøuj `Dialog.COMMAND_CLOSE_DIALOG'.

	* lib/form/command.py: Nové pøíkazy `Dialog.COMMAND_CLOSE_DIALOG'
	a `Dialog.COMMAND_COMMIT_DIALOG'.

	* lib/form/screen.py (KeyHandler.__init__): Ne¾ pou¾ije¹ `self'
	jako výchozí `widget', testuj, zda je potomkem `wx.wxWindow'.
	(KeyHandler._handle_keys): Nová metoda.
	(KeyHandler.__init__): Vyu¾ívej ji.

2003-01-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (Operator.logical): Pøidáno OR.

	* lib/form/search.py (SFDialog._run_dialog): Nevolej na dialog
	Destroy.
	(SFDialog._run_dialog): Zru¹eno.
	(SFDialog._finish_dialog): Nová metoda.
	(SFDialog._create_content.condition): Na zaèátku zru¹ obsah
	_selectors a _logical_selectors.

	* lib/form/dialog.py (GenericDialog._run_dialog): Nevolej na
	dialog Destroy.
	(GenericDialog.run): Volej na dialog Destroy.
	(GenericDialog._finish_dialog): Nová metoda.
	(GenericDialog._on_button): Volej ji.

	* lib/form/form.py (LookupForm._lf_translated_sorting): Vracej
	tuple.

	* lib/output/formatter.py (LoutFormatter._format_long_table):
	Mezera mezi øádky sní¾ena z 1vx na 0.2vx.

	* lib/form/list.py (BrowseForm._formatter_parameters): Odstranìny
	závorky za _lf_condition.  Místo _lf_sorting pøedávej
	transformované _lf_sorting.
	(FilteredBrowseForm._init_filter): Nová metoda.
	(FilteredBrowseForm.__init__): Volej ji.
	(SideBrowseForm._init_filter): Nová metoda.

2003-01-28  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/screen.py (MItem.hotkey): Upøesnìní dokumentaèního øetìzce.
	(MItem.__init__): Zru¹en ve¹kerý kód obstarávající pøidání popisu
	horké klávesy do názvy polo¾ku menu.
	(Menu.create): Pøipoj popis klávesové zkratky k názvùm polo¾ek.

	* lib/form/list.py (ListForm._ListTable._panic): Namísto podivného
	`self._frame._on_leave_form()' volej funkci `leave_form()'.
	(ListForm._create_grid, ListForm._recreate_grid): Nevolej
	`self._parent._on_leave_form()'.
	(ListForm.on_command): Nakonec je¹tì volej metodu pøedka.
	(CodeBook.__init__): Argumenty pøedávej jako `*args' a `**kwargs'.
	Klíèový arkument `returned_columns' zpracuj sám.
	(CodeBook.on_command): Namísto `self._on_leave_form()' volej
	`self._leave_form()'.
	(SideBrowseForm.__init__): Klíèové argumenty pøedávej pomocí
	`**kwargs'.

	* lib/form/form.py (Form.__init__): `EVT_CLOSE' o¹etøuj pro
	`self._parent', ne pro `parent' (mú¾e být zmìnìn).
	(Form._on_leave_form): Zru¹eno.
	(PopupForm._on_leave_form): Zru¹eno.
	(PopupForm._leave_form): Nová metoda.
	(EditForm._pack_fields): Neo¹etøuj callback `CALL_LEAVE_FIELD'
	políèka.
	(EditForm._on_commit_form): Pøejmenováno na `_commit_form'.
	Zru¹en argument `event'.
	(EditForm.on_command): Namísto `_on_commit_form' volej `_commit_form'.
	(PopupEditForm._on_submit): Nová metoda.
	(PopupEditForm._create_buttons): Vyu¾ívej ji.
	(PopupEditForm._on_cancel): Nová metoda.
	(PopupEditForm._create_buttons): Vyu¾ívej ji.

	* lib/form/application.py (leave_form): Opraven dokumentaèní
	øetìzec.
	(Application.run_form): Popup formuláøùm nastavuj klíèový argument
	`guardian' na vrchní modální formuláø, nebo sebe sama, není-li
	takový.

	* lib/form/event.py (wx_callback.process_event): Neloguj DEBUG
	hlá¹ku, pokud jde o `wx.wxIdleEvent' nebo `wx.wxUpdateUIEvent'.

	* lib/form/inputfield.py (_init_controls): `self._key_guardian'
	nenastavuj na `None'.

2003-01-28  Pavel Hanak  <hanak@brailcom.cz>

	* config/config_ebas.py: Návrat k pøedchozí verzi pøepsané omylem.

	* lib/form/list.py (SideBrowseForm.__init__): V konstruktoru
	nevolej self.filter({}).

2003-01-27  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/form.py (RecordForm._set_row): Je-li argument `row'
	None, nevracej None ale inicializuj nový prow.
	
2003-01-27  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/list.py (_on_sort_column): Zohledòuj správnì hodnotu
	parametrù `direction' a `col'.

	* lib/form/form.py (LookupForm._on_sort_column): Pro direction
	`SORTING_CYCLE_DIRECTION' nastav správnou hodnotu øazení.

2003-01-25  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Value._VOID): Nová konstanta.
	(Value._init): `_exported' inicializuj na _VOID.
	(Value.export): Nech» neinicializovanou hodnotou `_exported' je
	_VOID.

	* lib/util/util.py (safedel): Nová funkce.
	* lib/util/_test.py (IsSequence): Pøejmenováno na `MiscFunctions'.
	(MiscFunctions.check_it): Pøejmenováno na `check_is_sequence'.
	(MiscFunctions.check_safedel): Nový test.

	* lib/form/dualform.py (DualForm._create_main_form): Nový argument
	`**kwargs'.
	(DualForm.__init__): Zohlednìna pøedchozí zmìna.
	(BrowseDualForm._create_main_form._MainBrowseForm) 
	(ShowDualForm._create_main_form) 
	(DescriptiveDualForm._create_main_form): 

	* lib/form/form.py (LookupForm._find_row): Opraveno chybné
	testování klíèe na None.

2003-01-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_search_skip): Pøi zpìtném hledání zmìò
	znaménko výsledku.
	(BrowseForm._run_form): Nová metoda.
	(BrowseForm.__init__): Nastavuj ji pro callbacky.

	* lib/util/util.py (ecase): Nová funkce.
	* lib/util/_test.py (FindUtils.check_ecase): Nový test.

	* lib/form/screen.py (KeyHandler.on_key_down): Je-li klávesa pouze
	modifikátorem, ignoruj ji.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql): Pøidána
	podpora pro operátor OR jako primitivní operátor.
	(PostgreSQLStandardBindingHandler._pg_search.sorting_condition):
	Pøi pøidání implicitního tøídìní zohledni smìr vyhledávání.

	* lib/data/data.py (AND): Nepou¾ívej `apply'.
	(OR): Vytváøej instanci Operator.
	(Operator.__init__): Nový argument `translation'.
	(Operator.translation): Nová metoda.

	* lib/form/search.py (SFDialog._create_content.condition): `c'
	pøejmenováno na `sizer'.

	* lib/form/form.py (EditForm.on_command): Neo¹etøuj
	Application.COMMAND_LEAVE_FORM.  Volej metodu pøedka.
	(LookupForm._search_skip): Klíèuj argument metody `skip'.
	(LookupForm._search): Nemìò znaménko výsledku.
	(LookupForm._on_sort_column): Doplnìn chybìjící argument `sorting'
	konstruktoru SortingDialog.
	(LookupForm._on_sort_column): Nech» zobrazený øádek po zmìnì
	tøídìní je vyhledán.
	(LookupForm._lf_translated_sorting): Nová metoda.
	(LookupForm._init_select, LookupForm._find_row.find_row): Vyu¾ívej
	ji.
	(LookupForm._find_row): Je-li `key' None, vra» None.
	(RecordForm._set_row): Nápodobnì.

2003-01-24  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField._focused_field)
	(InputField._last_focused_field): Nové atributy.
	(InputField.__init__): Zru¹eny atributy `self._has_focus' a
	`self._last_validation_error'.
	(InputField._class_name, InputField.__str__): Nové metody.
	(InputField._init_controls): Pokud je políèko needitovatelné,
	o¹etøuj wx událost `EVT_NAVIGATION_KEY' voláním callbacku
	`CALL_SKIP_NAVIGATION'.
	(InputField._on_idle): Namísto `self._type.validate()' vyu¾ívej
	`self.validate()'.  Namísto atributu `self._has_focus' vyu¾ívej
	metodu `self.has_focus()'.  Zru¹ena èást obstarávající
	`self._last_validation_error'.
	(InputField._on_set_focus): Provádìj zde validaci posledního
	políèka a v pøípadì chyby se do nìj vra».  Volej
	`InputField._focus(self)' namísto nastavování `self._has_focus'.
	(InputField._on_kill_focus): Neprovádìj zde validaci políèka.
	Volej `InputField._defocus(self)'.
	(InputField.has_focus): Doplnìn dokumentaèní øetìzec.  Vyu¾ívej
	`InputField.focused()'.
	(InputField.validate): Nové argumenty `quiet' a `interactive'.
	Volej `self._validation_error_handler()' zde.
	(InputField._alive): Nová metoda.
	(InputField._defocus, InputField._focus)
	(InputField._last_focused, InputField.focused): Nové metody tøídy.
	(MultiTextField._on_kill_focus): Zru¹eno.
	(CodeBookField._DISPLAY_COLOR): Nová konstanta.
	(CodeBookField._create_widget): Vyu¾ívej ji.
	(CodeBookField._on_change_hook): Namísto `self._type.validate()'
	vyu¾ívej `self.validate()'.
	(CodeBookField._validation_error_handler): Pokud není ve
	specifikaci èíselníku nastaveno `insert_unknown_values', Nedìlej
	nic a vra» `FALSE'.  Pokud byl formuláø pro doplnìní nové hodnoty
	opu¹tìn bez ulo¾ení, vracej také `FALSE'.

	* lib/form/screen.py (Keymap.keys): Nová metoda.
	(KeyHandler._prefix_key_sequence): Nový atribut.
	(KeyHandler.on_key_down): Zapamatovávej si stisknuté prefixové
	klávesy.  Zobrazuj zprávu o stisknuté prefixové sekvenci a mo¾ných
	klávesách.
	(MItem.__init__): Zru¹eny ve¹keré triky kolem nastavování horkých
	kláves jako souèásti titulku.
	(Menu.create): Zapamatuj si ¹íøku titulku v¹ech polo¾ek
	vytváøeného menu a nakonec u ka¾dé polo¾ku, která má horkou
	klávesu, doplò titulek mezerami a horkou klávesou tak, aby byly
	horké klávesy zarovnány pod sebe (s pøesností na ¹íøku jedné mezery).

	* lib/form/list.py (CodeBook._on_activation): Zru¹en argument
	`key'.  Ten zji¹»uj pomocí `self._current_key()'.
	(_InputFieldCellEditor.EndEdit): Namísto `field.type().validate()'
	vyu¾ívej `field.validate()'.

	* lib/presentation/field.py (CodeBookSpec.__init__): Nový argument
	`insert_unknown_values'.
	(CodeBookSpec.insert_unknown_values): Nová metoda.

2003-01-23  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_create_recreate_grid): Nová metoda.
	(_create_grid, _recreate_grid): Volej ji.
	(_TITLE_FOREGROUND_COLOR): Nová konstanta.
	(FilteredBrowseForm.filter): Urèenou podmínku pøiøaï do
	_lf_initial_condition a do `refresh' pøedej jako `condition' None.

	* lib/form/dualform.py (DescriptiveDualForm._create_main_form):
	List -> ListForm.
	(SideBrowseDualForm._create_side_form, SideBrowseDualForm.close) 
	(BrowseDualForm._create_main_form, BrowseDualForm._on_new_record) 
	(ShowDualForm.__init__): List -> ListForm.

	* lib/form/form.py (LookupForm.Close): Nová metoda.
	(LookupForm._on_sort_column): List -> LookupForm.
	(BrowsableShowForm.on_ui_event): List -> ListForm.
	(LookupForm._init_select.trans): Pøevádìj formuláøovou specifikaci
	tøídìní na datovou.
	(LookupForm._on_select_filter): Pøejmenováno na `_on_filter'.
	(LookupForm.on_command): Zohlednìna pøedchozí zmìna.
	(LookupForm._filter): Nová metoda.
	(LookupForm._on_filter): Pou¾ívej ji.  Nové argumenty `row' a
	`col'.
	(LookupForm._init_select): Zohledòuj _lf_initial_condition.

	* lib/form/screen.py (KeyHandler.on_key_down): Pøed event.Skip
	zkus je¹tì volat poruèníka.

2003-01-22  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (Form._init): Nová metoda.
	(Form.__init__): Pou¾ívej ji.  Argumenty nahrazeny obecnou
	specifikací argumentù *args, **kwargs.
	(RecordForm.__init__, LookupForm.__init__): Pøejmenováno na
	`_init'.  Metodu pøedka volej pøednostnì.
	(LookupForm._default_sorting, LookupForm._default_grouping): Nové
	metody.
	(LookupForm._init): Pou¾ívej je.  Nech» `grouping' a `sorting'
	jsou vytahovány z `kwargs'.
	(LookupForm._search, LookupForm._search_adjust_data_position) 
	(LookupForm._search_skip): Nové metody.
	(LookupForm._on_search): Vyu¾ívej metodu `_search'.
	(LookupForm.SORTING_CYCLE_DIRECTION, LookupForm.SORTING_NONE):
	Nové konstanty, pøesunuty z lib.form.List.
	(LookupForm._on_sort_column): Pøepracováno.
	(LookupForm.on_command): Opraveno chybné `super_'.
	(LookupForm.condition, LookupForm.sorting): Nové metody, pøesunuté
	z lib.form.List.

	* lib/form/command.py: Zru¹eny aliasy pro pøíkazy do List.
	Pøíkazy z List pøevedeny do ListForm.

	* lib/form/list.py (List): Zru¹eno, vèlenìno do ListForm.
	(ListForm): Buï potomkem LookupForm, KeyHandler a CallbackHandler.
	Patøiènì pøeorganizováno a upraveno, i s ohledem na vèlenìní List.
	(ListForm._ListTable._EditedRow.__init__) 
	(ListForm._ListTable.GetAttr): List -> ListForm.
	(BrowseForm.__init__, BrowseForm._formatter_parameters):
	Odstranìny odkazy na `_list'.

2003-01-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (LookupForm.__init__): Nové atributy
	`_lf_initial_sorting', `_lf_initial_condition',
	`_lf_initial_grouping', `_lf_search_dialog', `_lf_filter_dialog',
	`_lf_filter'.
	(BrowsableShowForm.__init__): Zru¹eno.
	(RecordForm.prefill, RecordForm.set_prefill): Nové metody,
	pøesunuté z lib.form.List.
	(RecordForm.__init__, LookupForm.__init__): Konstruktor pøedka
	volej a¾ po vlastních inicializacích.
	(EditForm.__init__): Nápodobnì.
	(LookupForm._find_row.find_row): _lf_select_* -> _lf_*.
	(BrowsableShowForm.on_command): _lf_count -> _lf_select_count.

2003-01-22  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/list.py (List._on_label_left): Místo
	`Form.COMMAND_SORT_COLUMN' volej `LookupForm.COMMAND_SORT_COLUMN'.

	* lib/util/configuration.py
	(Configuration._Option_application_name.default): Konfiguraèní
	volba vrácena.

2003-01-22  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application.run_form): Pokud je ji¾
	otevøeno modální okno, nech» je rodièem.  Je-li otevíráno
	nemodální okno, ujisti se, ¾e není otevøeno ¾ádné modální okno.

2003-01-21  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application.run_form): Klíèový argument
	`guardian' konstruktoru formuláøe pøedávej jen není-li tøída
	podtøídou `PopupForm'.

	* lib/form/list.py (CodeBook.on_command): O¹etøuj
	`Application.COMMAND_LEAVE_FORM' voláním `self._on_leave_form()'
	namísto pøímého uzavírání okna.

	* lib/form/form.py (EditForm._validate): Pokud sel¾e validace,
	nastav nevalidnímu políèku focus.

2003-01-21  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/form.py (BrowsableShowForm.on_ui_event): Místo
	`self._search_dialog' testuj `self._lf_search_dialog'.

2003-01-20  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._on_label_right, List.on_command):
	Zohlednìno pøevedení pøíkazù z Form do LookupForm (jako doèasné
	øe¹ení).

	* lib/form/command.py: Pøíkazy pro vyhledávání a filtrování
	pøevedeny do tøídy LookupForm.

	* lib/form/form.py (RecordRow, LookupForm): Nové tøídy.
	(EditForm): Místo Form buï potomkem LookupForm.
	(BrowsableShowForm._sfs_columns, BrowsableShowForm._sf_dialog)
	(BrowsableShowForm._on_search)
	(BrowsableShowForm._on_select_filter)
	(BrowsableShowForm._on_sort_column): Zru¹eno.
	(BrowsableShowForm.on_command): Vypu¹tìny pøíkazy pøevedené do
	LookupForm.

2003-01-20  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application.OnInit): Vytváøej `wxPanel'
	a zapamatuj si jej jako `self._panel'.  Nakonec mu pøedej focus.
	(Application.restore): Pokud nezbyl ¾ádný otevøený formuláø,
	nastav focus na `self._panel'.
	(Application.__init__): Volání `KeyHandler.__init__()' pøedávej
	`self._panel' jako argument `widgets'.
	(Application.set_status): Nový argument `root'.
	(message): Nový argument `root'.
	(Application.run_form): `message()' volej s argumentem
	`root=TRUE'.  Konstruktoru formuláøe pøedávej `self' jako klíèový
	argument 'guardian'.
	
	* lib/form/dualform.py (DualForm.__init__): Argumenty pøedávej
	jako `*args' a `**kwargs'.

	* lib/form/form.py (EditForm.exit_check): Zru¹en odporný hack se
	sleepem.
	(Form.close): Nová metoda.

2003-01-17  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List._on_label_right): Volej callback
	`CALL_USER_INTERACTION'.
	(List._on_select_cell): Volej callback `CALL_USER_INTERACTION'.

2003-01-17  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Boolean._validate): Nová metoda.

	* lib/form/search.py (SFDialog._selected_condition): U boolean
	políèek provádìj nestriktní validaci.
	(SFDialog._on_suck): Je-li exportovaná hodnota tuple, pou¾ij jeho
	první prvek.

	* lib/form/application.py (wx_yield_): Nová funkce.
	(Application.run_form): Oznamuj spou¹tìní formuláøe ve stavovém
	øádku.

	* lib/form/event.py (interrupt_watcher.watcher): Pou¾ívej
	wx_yield_ místo pøímého volání wx funkce.  * lib/form/dialog.py
	(GenericDialog._on_set_focus): Nápodobnì.

2003-01-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/xtypes.py (_Codebook.__init__): `id' pøejmenováno na
	`id_'.
	(_Codebook.__new__): Pøejmenováno na `_make'.

	* lib/data/types_.py (_MType): Nová tøída.
	(Type.make): Místo __new__ volej `_make'.
	(Type._make): Pøidán assert na neprázdný výsledek.  Zmìnìno na
	staticmethod.
	(Type.__new__): Zru¹eno.	
	(Type.__init__): Volej metodu pøedka.
	(Type.__metaclass__, MutableType.__metaclass): Nastaveno na _MType.
	(Type._TypeTable.get_instance): Místo object.__new__ volej
	class_.__new__.  Pøidán assert na výsledek __new__.

2003-01-16  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dualform.py: Úprava dokumentaèního øetìzce.

	* lib/form/application.py (Application.run_form): Pokud je
	otevíraný formuláø nalezen na zásobníku oken, nevytváøej jej, ale
	pouze vyzvedni existující.
	(Application.run_form): Pøidáno TODO.

	* lib/form/form.py (Form.name): Nová metoda.

	* lib/form/spec.py (ViewSpec.__init__): Nový argument
	`enable_inline_insert'.
	(ViewSpec.enable_inline_insert): Nová metoda.

	* lib/form/list.py (List.__init__): Nový argument
	`enable_inline_insert'.
	(List._on_insert_line): Úprava dokumentaèního øetìzce.  Pokud není
	 nastaveno `self._enable_inline_insert', nepovol vlo¾ení a zobraz
	 zprávu.  Nevracej `wx.TRUE' ale `TRUE'.
	 (ListForm._create_list): Konstruktoru tøídy `List' pøedávej
	 argument `enable_inline_insert'.

2003-01-15  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dualform.py (BrowseDualForm): Buï potomkem `Refreshable'.
	(BrowseDualForm.refresh): Nová metoda.
	(ShowDualForm): Buï potomkem `Refreshable'.
	(ShowDualForm.refresh): Nová metoda.
	(DescriptiveDualForm): Buï potomkem `Refreshable'.
	(DescriptiveDualForm.refresh): Nová metoda.

2003-01-14  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/screen.py (set_clipboard_text): Volej
	`clipboard.UsePrimarySelection(wx.TRUE)'.

2003-01-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._ListTable.__init__): Konstruktor pøedka
	volej jen jednou.
	(List._ListTable.close): Nuluj významná data instance.
	(_CellEditor): Zru¹eno.
	(_InputFieldCellEditor.field)
	(_InputFieldCellEditor.IsAcceptedKey): Pøesunuto z _CellEditor.
	(List.Close): Osirotèuj grid.
	(List._recreate_grid): Místo vytváøení nového gridu pouze uprav
	velikost gridu a vynu» jeho pøekreslení.  Výraznì pøepracováno.
	(List._ListTable.update): Nová metoda.

	* ebas (go): Místo gc.DEBUG_LEAK nastavuj odpovídající flagy bez
	gc.DEBUG_SAVEALL.
	* ebas-server (go): Nápodobnì.

2003-01-13  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List._create_grid.registration): Nepøedávej
	self jako klíèový argument.
	(List._on_line_rollback): Na konci volej `refresh()' nepodmínìnì.
	(List.Close): Volej také `wx.wxPanel.Close()'.

	* lib/form/application.py (Application._add_window_menu_item):
	Vytváøené instanci `MItem' nastavuj argument `help'.
	(Application.set_status): Namísto odchytávání výjimek zkoumej
	návratové hodnoty.  Namísto `message()' na vrchní modální okno
	volej `Form.set_status()', jde-li o instanci `Form'.

	* lib/form/screen.py (MItem.__init__): Argument `helpstring'
	pøejmenovám na `help'.
	(MItem.create): Namísto metody `helpstring()' pou¾ívej atribut `_help'.
	(MItem.helpstring): Metoda zru¹ena.
	(StatusBar.message): Pokud pole daného id neexistuje, vracej
	`FALSE' namísto vyvolání výjimky.  V pøípadì úspìchu vracej `TRUE'.

	* lib/form/form.py (TitledForm._create_caption): V¾dy vytváøej
	novou instanci fontu (je-li `size' None, pouze dìï velikost).
	(Form.set_status): Nová metoda.
	(PopupEditForm.message): Zru¹eno.
	(PopupEditForm.set_status): Nová metoda.

2003-01-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/util.py (Tmpdir._cleanup): Nová metoda.
	(Tmpdir.__del__): Kód pøesunut do _cleanup a voláno.

	* lib/form/output.py (PrintForm._show_page): Je-li stránka mimo
	rozsah, pípni.
	(PrintForm.close): Nová metoda.
	(PostscriptViewer._init_gs): Nová metoda.
	(PostscriptViewer.__init__): Pou¾ívej ji.
	(PostscriptViewer.restart): Nová metoda.
	(PostscriptViewer.show_page): Pro zobrazování stránek kombinuj
	starý a nový Ghostscript.
	(PrintForm.__init__): Nové atributy `_number_of_runs' a
	`_formatter_running'.
	(PrintForm._run_formatter): Nastavuj je.
	(PrintForm._start_postscript_viewer): Nový argument `new'.
	(PrintForm._on_idle): Restartuj formátovaè, je-li nutno.

	* lib/output/formatter.py (LoutFormatter.__init__): Místo
	_formatted_document_lock zavedeno _lout_run_lock.
	(LoutFormatter._lout): Zohlednìna pøedchozí zmìna.
	(LoutFormatter.close): Nová metoda.

2003-01-10  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/application.py (Application.OnInit): Vytváøej prvky
	v poøadí 'statusbar', 'windows', 'modals', 'menus'.	

2003-01-09  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/markup.py (VSpace.__init__, HSpace.__init__): Nech»
	argument `height', resp. `width' smí být té¾ None.

	* lib/output/formatter.py (_INTRO): Zru¹eny nadbyteèné definice
	@pageHeaderInt a @pageFooterInt.
	(_INTRO): Opraveno generování èísel stránek.  Nová makra @vfill a
	@hfill.
	(LoutFormatter._format_space): Pøidána podpora pro velikost None.

2003-01-09  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/screen.py (set_clipboard_text): Nová funkce.

	* lib/form/list.py (List._create_edit_popup_menu): Nová polo¾ka
	pro pøíkaz `List.COMMAND_COPY_CELL'.
	(List.on_command): O¹etøuj pøíkaz `List.COMMAND_COPY_CELL' voláním
	`self._on_copy_cell'.
	(List._on_copy_cell): Nová metoda.
	(BrowseForm._popup_menu): Nová polo¾ka
	pro pøíkaz `List.COMMAND_COPY_CELL'.

	* lib/form/command.py: Nový pøíkaz `List.COMMAND_COPY_CELL'.

2003-01-08  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/flibutil.py (f_table): Nový argument `kwargs'.

	* lib/output/markup.py (Table.__init__): Nový argument `vmargin'.
	(Table.vmargin): Nová metoda.
	(LongTable.__init__): Nové argumenty `row_generator_init' a
	`line_separator_height'.
	(LongTable.row_generator_init, LongTable.line_separator_height):
	Nové metody.

	* lib/output/formatter.py (LoutFormatter._format_long_table): Na
	buòky tabulky volej `_format', ne `_format_text'.
	(LoutFormatter._format_table): Zohledni parametr `vmargin'.
	(LoutFormatter._format_long_table): Zohlednìny parametry
	`row_generator_init' a `line_separator_height'.  Opraveno
	zji¹»ování velikosti separátoru záhlaví.

2003-01-08  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (SideBrowseForm.__init__): Nový argument `title'.
	(SideBrowseForm.title): Nová metoda.

	* lib/form/dualform.py (SideBrowseDualForm._create_side_form):
	Pøedávej konstruktoru SideBrowseForm argument `title'.
	(BrowseDualForm._create_main_form._MainBrowseForm): Nová odvozená tøída.
	(BrowseDualForm._create_main_form): Pou¾ívej ji.

	* lib/form/spec.py (DualSpec.__init__): Nové argumenty `title' a
	`side_title'.
	(DualSpec.__init__): Nové argumenty `title' a `side_title'.
	(DualSpec.title, DualSpec.title): Nové metody.

	* lib/form/form.py (ShowForm._finish_top_level_sizer):
	Zakomentováno a pøidáno TODO.

	* lib/form/application.py (Application.UI_OPENED_WINDOW)
	(Application.UI_OPENED_MORE_WINDOWS): Nové UI konstanty.
	(Application.__init__): Nevytváøej klávesovou mapu zde.  Metodì
	`KeyHandler.__init__()' pøedávej `self._frame' jako argument
	`widgets'.
	(Application.OnInit): Vytváøej klávesovou mapu zde.
	(Application.OnInit): Do menu oken pøidány polo¾ky pro pøíkazy
	`Application.COMMAND_NEXT_FORM', `Application.COMMAND_PREV_FORM' a
	`Application.COMMAND_LEAVE_FORM'.
	(Application._add_window_menu_item)
	(Application._remove_window_menu_item): Pokud je `menu' None,
	nedìlej nic.
	(Application._raise_form): Pokud je `form' None, nedìlej nic.
	(Application.on_command): Zpracuj pøíkazy
	`Application.COMMAND_NEXT_FORM' a `Application.COMMAND_PREV_FORM'.
	(Application.on_ui_event): Zpracuj testy
	`Application.UI_OPENED_WINDOW' a
	`Application.UI_OPENED_MORE_WINDOWS'.
	(Application._on_frame_size): `top.resize()' volej bez argumentù.
	(Application.__init__): Metodì `KeyHandler.__init__()' nepøedávej
	`self._frame' jako argument `widgets'.

	* lib/form/command.py: Pøidán Copyright 2003
	(Application.COMMAND_RUN_FORM, Application.COMMAND_LEAVE_FORM)
	(Application.COMMAND_RAISE_FORM): Úprava dokumentaèního øetìzce.
	(Application.COMMAND_PREV_FORM, Application.COMMAND_NEXT_FORM):
	Nové pøíkazy.

	* lib/form/screen.py (WxKey.__init__): Do pøekladové tabulky
	pøidány klávesy 'Up', 'Down', 'Left' a 'Right'.
	(Keymap._define_key): Pøidán assert s vysvìtlující hlá¹kou.
	(Keymap.define_key): Doplnìn dokumentaèní øetìzec.
	(Keymap.lookup_command): Nová metoda.
	(KeyHandler.__init__): Atribut `keymap' nenastavuj, pokud ji¾
	existuje.
	(MItem.__init__): Pokud má pøíkaz polo¾ky menu definovánu
	klávesovou zkratku v globální klávesové mapì, pøevezmi tuto
	klávesu.  Pokud má polo¾ka definovánu vlastní klávesovou zkratku,
	definuj ji také v globální klávesové mapì.

2003-01-07  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (DateTime.now): Nová metoda.

	* lib/util/configuration.py (Configuration.Option): Buï potomkem
	`object'.
	(Configuration._FileOption): Nová tøída.
	(Configuration._Option_def_dir, Configuration._Option_icon_dir):
	Buï potomkem _FileOption.

	* lib/output/formatter.py (_INTRO): Definice @pageNumber a
	@numberOfPages vyta¾eny z @document na top-level.  V @document
	zru¹en pravý argument a nové argumenty @pageHeader a @pageFooter.
	(LoutFormatter._format_document): Zohledni nové argumenty ¹ablony
	`page_header' a `page_footer'.
	(LoutFormatter._format_table): Opravena Lout specifikace
	zarovnávání bunìk.

	* ebas (go): Pøi zapnutém debugování pamìti na konci vypi¹ pending
	data.
	* ebas-server (go): Nápodobnì.

	* lib/output/markup.py (Document.KWARGS): Pøidány argumenty
	`page_header' a `page_footer'.

2003-01-07  Tomas Cerha  <cerha@brailcom.org>

	* lib/util/_test.py (XStack.check_it): Testuj shodu operátorem
	`is', ne ekvivalenci.  Testuj metody `next' a `prev' také na
	prázdných a jednoprvkových seznamech.

	* lib/util/util.py (XStack.pop, XStack.remove): Testuj zda byl
	vyøazovaný prvek suteènì aktivním prvkem, ne pøítomnost aktivního
	prvku v seznamu po jeho vyøazení.
	(XStack.items): Upøesnìn dokumentaèní øetìzec.
	(XStack.active): Pøidán assert.
	(XStack.next): Pokud seznam obsahuje ménì ne¾ dva prvky, vracej
	None.  Upøesnìn dokumentaèní øetìzec.

2003-01-06  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/output.py (PrintForm.ACTIVATIONS): Pøidej i
	`Window.ACTIVATIONS'.

2003-01-06  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (_Ghostscript): Buï potomkem Tmpdir.
	(_Ghostscript.__init__): Volej konstruktor pøedka.
	(_Ghostscript.__del__): Místo ruèního mazáního souborù a adresáøe
	volej metodu pøedka.

	* lib/util/util.py (Tmpdir): Nová tøída.
	(Popen.__init__): Nový argument `directory'.

	* lib/output/flibdata.py (data_table): Opraveno pøedávání
	specifikací sloupcù do PresentedRow a LongTable.

	* lib/output/formatter.py (_INTRO): Pøepracováno, nemìlo by nyní
	zhazovat Lout na vìt¹ích dokumentech a vy¾írat pamì».
	(LoutFormatter._format_document): Upraveno pro novou definici
	dokumentu.
	(LoutFormatter): Buï potomkem Tmpdir.
	(LoutFormatter.__init__): Volej konstruktor pøedka.
	(LoutFormatter._lout): Volej Popen s argumentem `directory'.

2003-01-06  Pavel Hanak  <hanak@brailcom.cz>

	* lib/util/util.py (XStack.prev): O¹etøen pøípad, kdy
	self._list[-1], vrací právì aktivní okno.

2003-01-04  Tomas Cerha  <cerha@brailcom.org>

	* lib/util/_test.py (XStack.check_it): Testuj nové metody.

	* lib/util/util.py (XStack.next): Nová metoda.
	(XStack.prev): Nová metoda.
	(XStack.pop): Nová metoda.
	(XStack.remove): Pøi odebrání aktivního prvku aktivuj
	pøedcházející prvek.

	* lib/form/form.py (Form.restore): Nevolej `show()' a `resize()'.

	* lib/form/application.py (Application.activate): Zru¹eno.
	(Application._activate): Nová metoda.
	(Application.save, Application.restore): Nová metody.
	(Application._raise_form): Vyu¾ívej je.
	(Application.run_form): Vyu¾ívej `save()'.
	(Application.run_form): Vyu¾ívej `save()' a `_activate()'.
	(Application.leave_form): Vyu¾ívej `restore()'.

2003-01-04  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/application.py: Pøidán Copyright 2003
	(Application._State): Zru¹eno.
	(Application._state): Zru¹eno.
	(Application._spec): Nech» je argument `default_value' nepovinný s
	výchozí hodnotou None.
	(Application.OnInit): Nech» Má vytváøené menu oken nastavenu
	aktivaèní kategorii `Window.ACT_WINDOW'.  Pøi volání
	`self._spec()' nepøedávej argument `default_value', pokud je None.
	Neinicializuj `self._initial_state'.  Namísto `self._states'
	vytváøej `self._windows'.
	(Application._window_menu): Nová metoda.
	(Application._window_menu_item_title): Nová metoda.
	(Application._add_window_menu_item): Nová metoda.
	(Application._remove_window_menu_item): Nová metoda.
	(Application._check_window_menu_item): Nová metoda.
	(Application._update_window_menu): Zru¹eno.
	(Application._raise_form, Application.run_form)
	(Application.leave_form, Application.exit)
	(Application.top_window, Application._on_frame_size): Pøepsáno s
	ohledem na jiný zpùsob práce s menu otevøených oken a pou¾itím
	`self._windows' namísto `self._states' a zmìny v API tøídy
	`XStack'.
	(Application.get_status): Nová metoda.
	(Application.set_status): Pou¾ij `self._modals.top()' namísto
	`self.top_window'.  Úprava dokumentaèního øetìzce.
	(message): Úprava dokumentaèního øetìzce.
	(set_status): Úprava dokumentaèního øetìzce.
	(get_status): Nová funkce.

	* lib/form/screen.py: Pøidán Copyright 2003
	(Window): Nech» je potomkem `Restorable'.
	(Window.ACT_WINDOW, Window.ACTIVATIONS): Nové kontanty.
	(Window.focus): Nevolej `lib.form.application._application.activate()'.
	(MItem._wx_kind): Nová metoda.
	(MItem.create): Nová metoda. 
	(Menu.create): Vyu¾ívej ji.
	(RadioItem): Nová tøída.
	(ActivationGroup): Zru¹eno.
	(StatusBar): Nech» není potomkem `Restorable'.
	(StatusBar._current_message): Zru¹eno.
	(StatusBar.get_message): Nová metoda.
	(StatusBar.save): Zru¹eno.
	(StatusBar.restore): Zru¹eno.

	* lib/form/output.py: Pøidán Copyright 2003
	(PrintForm.ACTIVATIONS): Nech» je atribut veøejný (`Form.ACTIVATIONS').

	* lib/form/list.py: Pøidán Copyright 2003
	(ListForm._STATUS_FIELDS): Nová konstanta.

	* lib/form/form.py: Pøidán Copyright 2003
	(Form._ACTIVATIONS): Nech» je atribut veøejný (`Form.ACTIVATIONS').
	(Form._STATUS_FIELDS): Nový atribut.
	(Form.status_fields): Metoda zru¹ena.
	(Form.save): Nová metoda.
	(Form.restore): Nová metoda.

	* lib/util/_test.py: Pøidán Copyright 2003
	(XStack.check_it): Test upraven podle nového API tøídy `XStack'.

	* lib/util/util.py: Pøidán Copyright 2003
	(XStack): Pøepsán dokumentaèní øetìzec.
	(XStack.__contains__): Zru¹eno.
	(XStack.__init__): Nová metoda.
	(XStack.push): Nová metoda.
	(XStack.arise): Zru¹eno.
	(XStack.remove): Nová metoda.
	(XStack.activate): Nová metoda.
	(XStack.active): Nová metoda.

2002-12-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/flibdata.py (data_table): Nepøedávej do
	LongTable.Column id a typ, klíèuj `alignemnt'.

	* lib/output/flibutil.py: Nový soubor.
	* lib/output/data.py: Pøejmenováno na `flibdata.py'.
	* lib/output/__init__.py: Zohlednìny pøedchozí zmìny.

	* lib/output/markup.py (PageNumber.__init__, PageNumber.total):
	Nové metody.
	(Table): Nová znaèka.
	(LongTable.Column, LongTable.columns): Pøesunuto do Table.
	(LongTable.__init__): Volej konstruktor pøedka.
	(Table.Column.__init__): Nech» argumenty `label', `width' a
	`alignment' jsou nepovinné a `label' a `width' smí být None.
	Zru¹eny argumenty `id' a `type_'.
	(LongTable.Column): Nová tøída.
	(LongTable): Buï potomkem Table.

	* lib/output/formatter.py (LoutFormatter._format_page_number):
	Zohledni parametr ¹ablony `total'.
	(LoutFormatter._format_font_size): Doplnìno chybìjící `f' v levém
	argumentu @Font.
	(_INTRO): Pøidáno include `tbl'.  Pomocné funkce pøesunuty pøed
	funkce struktury dokumentu.
	(LoutFormatter._MARK_PROCESSORS): Pøidáno Table.
	(LoutFormatter._format_table): Nová metoda.
	(LoutFormatter._process): Je-li _body sekvencí dokumentù, formátuj
	je separátnì.

2002-12-20  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Type.__new__): Nová metoda.
	(Type._make): Buï staticmethod, ne classmethod.  Nenastavuj
	_making_type.
	(Type.make): Ztrivializováno.
	(Type._making_type): Zru¹eno.
	(Type._TypeTable.get_instance): Vytváøej novou instanci typu pøes
	object.__new__.
	(Type.__init__): Nepou¾ívej _making_type.
	(Type.__getattr__): Nepou¾ívej `make'.
	* lib/data/xtypes.py (_Codebook.make): Zru¹eno.
	(_Codebook.__new__): Nová metoda.
	* lib/data/dbdata.py (DBDataPostgreSQL._pg_validate_codebook)
	(PostgreSQLUserGroups._pgg_connection_key)
	(PostgreSQLUserGroups._pgg_retrieve_access_groups)
	(PostgreSQLUserGroups.class_access_groups): Buï staticmethod, ne
	classmethod.
	(DBData._db_bindings_to_column_spec) 
	(PostgreSQLStandardBindingHandler._pdbb_get_type) 
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec) 
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql) 
	(PostgreSQLStandardBindingHandler._pg_insert): Vytváøej instance
	typù pøímo, ne pøes `make'.
	* lib/data/_test.py: Nepou¾ívej nikde `make'.

	* lib/output/formatter.py (_INTRO): Odstranìno include latin2.
	(LoutFormatter._format_long_table): Neprovádìj ¾ádný down-scaling.

2002-12-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (PostscriptViewer.show_page): Poèet krokù
	zpìtnì dopoèítávej z velikosti kroku.

	* lib/output/markup.py (Document): Nová znaèka.

	* lib/output/formatter.py (LoutFormatter._format_text): Chraò
	úvodní a koncové mezery.
	(LoutFormatter._MARK_PROCESSORS): Pøidáno Document.
	(LoutFormatter._format_document): Nová metoda.
	(LoutFormatter.__init__): Obal `body' znaèkou Document, je-li
	tøeba.
	(LoutFormatter.preview, LoutFormatter.printout): Spou¹tìj Lout bez
	parametru `-s'.

	* lib/util/util.py (XStack): Opraveny v¹echny docstringy.
	(nreverse): Nová funkce.
	* lib/util/_test.py (ListUtils.check_nreverse): Nový test.

2002-12-18  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (_INTRO): Kompletnì zmìnìno.
	(LoutFormatter._process): Zohlednìna pøedchozí zmìna.
	(LoutFormatter._format_page_number): Nápodobnì.  Vypisuj té¾
	celkový poèet stran.

2002-12-19  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dualform.py (DualForm.show, DualForm.hide)
	(DualForm.close): Nové metody.
	(DualForm.Show, DualForm.Close): Zru¹eno.
	* lib/form/list.py (List.__init__): Pøidán hack zaji¹»ující
	nenulové èíslo øádku ve stavové øádce.

	* lib/form/application.py (_State.__init__): Zru¹en argument
	`frame'.
	(Application._State.restore): Metodu `resize' formuláøe volej bez
	argumentù.
	(Application._state): Nepøedávej argument `frame' konstruktoru
	`self._State'.

	* lib/form/screen.py (Window.__init__): Pøidán docstring.
	(Window.resize): Nech» je argument size nepovinný a v pøípadì jeho
	neuvedení je velikost urèena automaticky z velikosti rodiè. okna.
	Pøidán docstring.
	(Window.show): Pøidán docstring.
	(Window.hide): Pøidán docstring.
	(Window.close): Pøidán docstring.

2002-12-17  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application.OnInit): Kosmetické úpravy.
	(Application.run_form): Pokud je vrchní okno instancí
	`Refreshable', volej mu po uzavøení formuláøe `refresh()'.

	* lib/form/screen.py (Window.show): Zru¹eno zakomentované
	podmínìné volání `refresh()'.

2002-12-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/markup.py (Image): Nová znaèka.

	* lib/output/formatter.py: Do docstringu pøidán popis
	`background'.
	(LoutFormatter.__init__): Nový atribut `_page_background'.
	(LoutFormatter._process): Pøidáno zpracování pozadí.  Nová funkce
	`process_special'.
	(_INTRO): Pøidáno %(pbackground)s.
	(LoutFormatter._MARK_PROCESSORS): Pøidáno Image.
	(LoutFormatter._format_image): Nová metoda.

	* lib/form/screen.py (wx_focused_window): Nová funkce.
	* lib/form/dualform.py (SideBrowseDualForm._do_selection):
	Pou¾ívej ji.

	* lib/form/spec.py (ViewSpec.__init__): Oprava formátování.
	(ViewSpec.cleanup): Oprava docstringu.

	* lib/data/access.py (RestrictedData._check_access_condition):
	Funkce `columns' pøedìlána na metodu
	`_check_access_condition_columns'.

	* lib/util/util.py (mem_info.MemInfo.update): Spou¹tìj sbìraè a
	vypisuj poèet nesesbíratelných objektù.
	(mem_info.MemInfo.__init__): Hodnota `_report_length' sní¾ena
	na 1.

2002-12-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/event.py (top_level_exception): Volej `exit'
	s argumentem `quietly'.
	(wx_callback.process_event): Natvrdo testuj na Ctrl-g.

	* lib/form/application.py (Application.exit): Nový argument
	`quietly'.
	(exit): Nový argument `kwargs'.
	(global_keymap): Nová funkce.
	(Application.OnInit): Inicializace kláves pøesunuta do `__init__'
	a pozmìnìna pro klávesové mapy.

	* lib/form/command.py: Popis zápisu kláves z docstringu modulu
	pøesunut do screen.KeyHandler.
	(Command.__init__): Argument `key' je nyní potlaèen.  Argument
	`log' pøejmenován na `log_'.
	(List.COMMAND_SELECT_CELL): Zohlednìna pøedchozí zmìna.
	(Command.__setattr__): Nová doèasná metoda.
	(Command.__str__): Nevypisuj `key'.

	* lib/form/screen.py (_Keymap): Pøejmenováno na Keymap, doplnìny
	docstringy.
	(Keymap.define_command): Zru¹eno.
	(Keymap.define_key): Nová metoda.
	(Keymap._define_key): Nový argument `args'.
	(KeyHandler._get_keymap, KeyHandler.on_key_down): _Keymap ->
	Keymap.
	(KeyHandler._init_commands): Místo `define_command' volej
	`define_key'.
	(KeyHandler): Atribut `_keymap' pøejmenován na `keymap'.
	(KeyHandler._maybe_invoke_command): Zohlednìno pøidání argumentù
	k pøíkazu.
	(Keymap.__init__): Nech» argument `parent' je nepovinný.
	(MItem.__init__): Chraò se proti nepøítomnosti atributu
	`command.key'.
	(KeyHandler._get_keymap): Jestli¾e rodièovská mapa nebyla zadána,
	pou¾ij `global_keymap'.
	(KeyHandler.on_key_down): Jestli¾e _maybe_invoke_command neuspìje,
	pøeskoè událost.

2002-12-13  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EditForm._on_commit_form): Volej cleanup proceduru.

2002-12-13  Pavel Hanak  <hanak@brailcom.cz>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_get_type): Pøidán alias
	pro typ 'name'.

2002-12-12  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (ViewSpec.__init__): Nový argument 'cleanup'.
	(ViewSpec.cleanup): Nová metoda.

	* lib/form/application.py (Application.on_ui_event): Oprava docstringu.
	(Application._call_current_window): Oprava docstringu.
	(Application.OnInit): Volej specifikaèní funkci `init'.

2002-12-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/util.py (mem_info): Nová funkce.
	(_mem_info): Nová promìnná.

	* ebas (go): Pøi po¾adavku na debug pamìti zapni sledování gc.
	(_usage): Pøidáno --debug-memory.
	* ebas-server (go, _usage): Nápodobnì.

	* lib/util/configuration.py (Configuration._Option_debug_memory):
	Nová konfiguraèní volba.
	* config/config.py: Pøegenerováno.

2002-12-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Datum/èas validuj
	s argumentem `local'.

	* lib/data/types_.py (DateTime._validate, DateTime._export): Nový
	argument `local'.
	(Date._validate, Date._export): Nové metody.

2002-12-11  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application._WINDOW_MENU_TITLE): Nová
	konstanta.
	(Application._State): Nová tøída.
	(Application._state): Nová metoda.
	(Application.OnInit): Do menu pøidávej i polo¾ku pro seznam
	otevøených oken.  Ukládej `self._initial_state'.  Zru¹eno
	`self._window'.  Nepou¾ívej `FrameStack()' -- zru¹eno
	`self._stack'.  Udr¾uj seznam modálních oken v `self._modals';
	instanci `Stack' a seznam stavù a vnitøních oken v `self._states';
	instanci `XStack'.
	(Application._call_current_window): Namísto `self._stack.window()'
	vyu¾ívej `self.top_window()'.
	(Application._update_stack_display): Zru¹eno.
	(Application._update_window_menu): Nová metoda.
	(Application._raise_form): Nová metoda.
	(Application.run_form): Update docsteringu.
	(Application.run_form): `parent' nech» je v¾dy `self._frame'.
	Pøed vytvoøením formuláøe ulo¾ vnitøní stav.  Modální formuláøe
	vkládej na stack `self._modals' a vnitøní okna na xstack
	`self._states'.  Vyu¾ívej metody tøídy `Window' pøi vkládání a
	uzavírání oken.  Namísto `self._update_stack_display()' volej
	`self._update_window_menu()'
	(Application.run_dialog): `parent' nech» je v¾dy `self._frame'.
	Namísto framestack vyu¾ívej `self._modals'.
	(Application.wx_frame): Zru¹eno.
	(Application._leave_form): Pøejmenováno na `leave_form()'.
	(Application.leave_form): Pøidán docstring.  Nestarej se o modální
	okna.  Zavøi pouze vrchní vnitøní okno, je-li jaké.
	(Application.exit, Application.top_window): Zohledni zmìny ve
	zpùsobu ukládání otevøených oken.
	(Application.push, Application.pop, Application.replace)
	(Application.set_status): Vyu¾ívej `self.top_window()'.
	(Application._on_frame_size): Zohledni zmìny ve zpùsobu ukládání
	otevøených oken.
	(Application.on_command): Zohledni zmìny ve zpùsobu ukládání
	otevøených oken. `self._leave_form()' -> `self.leave_form()'.
	Zpracij pøíkaz `Application.COMMAND_RAISE_FORM'.
	(set_status): Netestuj existenci `_application'.
	(run_dialog): Netestuj existenci `_application'.
	(leave_form): Zru¹en argument.  Nic zde nedìlej, jen volej
	`_application.leave_form()'.
	(current_form): Netestuj existenci `_application'.

	* lib/form/screen.py (Window.focus): Odkomantováno volání
	`activate()'.
	(FrameStack): Zru¹eno.
	(MenuBar.__init__.check_duplicate_keys): Kosmetické úpravy.
	(MItem.__init__): Vylep¹en hack s pøidáváním mezer k titulku --
	pøidávej mezeru, jen kdy¾ polo¾ka skuteènì má horkou klávesu.

	* lib/form/list.py (List.select_row.find): Pøejmenováno na `_find'.

	* lib/form/form.py (Form.descr): Nová metoda.
	(Form.title): Úprava docstringu.
	(Form._class_name): Nová metoda.
	(Form.__str__): Vyu¾ívej ji.
	(Form._on_leave_form): Funkci `leave_form()' volej bez argumentu.

	* lib/util/_test.py (Pool): Pøejmenováno na `XStack'.

	* lib/util/util.py (Pool): Pøejmenováno na `XStack'.
	(XStack): Úprava docstringu.
	(XStack.items): Úprava docstringu.
	(XStack.arise): Úprava docstringu.

	* lib/form/command.py (Application.COMMAND_RAISE_FORM): Nový pøíkaz.

2002-12-09  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLUserGroups._pgg_retrieve_access_groups): Chovej se
	pøístojnì, je-li `uid_string' None.

2002-12-06  Tomas Cerha  <cerha@brailcom.org>

	* lib/util/util.py (Stack): Nová tøída.
	(Pool): Nová tøída.

	* lib/util/_test.py (Stack): Nový test.
	(Pool): Nový test.

	* lib/form/dualform.py (SideBrowseDualForm._do_selection): Namísto
	`focused_window()' pou¾ívej pøímo `wx.wxWindow_FindFocus()'.

	* lib/form/form.py (Form): Buï potomkem `Window', namísto
	`wxPanel'.
	(Form._focused_form): Zru¹eno.
	(Form.__init__): Namísto kostruktoru `wxPanel' volej konstruktor
	`Window'.  Neinicializuj `self._callbacks'.
	(Form.parent): Zru¹eno
	(Form.focus, Form.defocus): Zru¹eno.
	(focused_form): Zru¹eno.
	(EditForm._run_with_lock): Zru¹eno.
	(PopupEditForm.run): Namísto volání `_run_with_lock()' rovnou
	implementuj spu¹tìní se zámkem zde.
	(EditForm._edit_insert): Jako vkládaný øádek pou¾ij výsledek
	`self._validate()' namísto datového øádku z `PresentedRow' `self._row'.

	* lib/form/screen.py (focused_window): Zru¹eno.
	(FrameList): Zru¹eno.
	(Window): Nová tøída (zatím pouze základ).
	(focused_window): Nová funkce.

	* lib/form/list.py (_on_activation): Nepøedávej lokální promìnné
	jako klíèové argumenty v definici lambda funkce.
	(ListForm.refresh): Nová metoda.
	(ListForm): Podìï také tøídu `Refreshable'.
	(List.OnKillFocus): `focused_form()' -> `focused_window()'.
	(List.SetFocus): Zviditelni aktuální buòku gridu.
	(List.SetFocus): `focused_form()' -> `focused_window()'.
	(List._recreate_grid): `focused_form()' -> `focused_window()'.
	(List._recreate_grid): Volej na grid je¹tì `Enable()'
	(List._GROUPING_COLOR): Zru¹eno.
	(List._GROUPING_BACKGROUND_DOWNGRADE): Nová konstanta.
	(List._ListTable.GetAttr): Namísto nastavování barvy pozadí pøi
	seskupování pouze ztmavuj souèasnou barvu pozadí.
	(List._ListTable.GetColLabelValue): Label seskupovacího sloupce
	odli¹ hvìzdièkami.
	(List._ListTable._group): Namísto nuly vracej `FALSE'.
	(List._ListTable._group): Poslední øádek poèítaný od zaè 

2002-12-05  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dialog.py (GenericDialog.run): Po vytvoøení dialogu na
	nìj volej `SetFocus()'.

2002-12-05  Pavel Hanak  <hanak@brailcom.cz>

	* lib/data/dbdata.py
	(DBDataPostgreSQL._pg_make_row_from_raw_data):
	Odstranìní zapomenutých ladících informací.

2002-12-05  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (DateField._on_invoke_selection): Datum
	nastavovaný v kalendáøi získej validací øetìzce v políèku a
	výsledek zpìt nastavuj exportem (kvùli konverzi formátu).

	* lib/form/dialog.py (Calendar.__init__): Argument `date' nech»
	je instancí `mxDateTime'.
	(Calendar._create_content): Zohlednìno.
	(Calendar._customize_result): Návratová hodnota nech» je instancí
	`mxDateTime'.

2002-12-04  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List._ListTable.row): Pokud jde o právì
	editovaný øádek, nepou¾ívej cache.
	(List._ListTable.GetValue): Vyu¾ívej metody `List._ListTable.row()'.

2002-12-02  Pavel Hanak  <hanak@brailcom.cz>

	* lib/data/xtypes.py (_Codebook.data_value): V pøípadì nenalezení
	hodnoty nevracej 'None', ale 'Value(self, None)'.
	(_Codebook.data_value): Úprava docstringu.

2002-12-02  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._ListTable._get_row): Èíslo øádku za
	novým øádkem sni¾uj jen pøi pravdivém `autoadjust'.

2002-11-29  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/test.py (InteractiveTestCase._format_instructions):
	Opraveno chybnì uvedené jméno promìnné.

2002-11-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/xtypes.py (_Codebook.data_value): Opraven popis
	argument `value' a zcela zru¹eny zakomentované asserts.

2002-11-28  Tomas Cerha  <cerha@brailcom.org>

	* lib/presentation/field.py (FieldSpec.__init__): Hack s default
	hodnotou provádìj jen pro skuteèné èíselníky.

2002-11-28  Pavel Hanak  <hanak@brailcom.cz>

	* lib/data/xtypes.py (_Codebook._export): Funkci 'log' pøedávej
	tuple (self, column).
	(_Codebook.data_value): Doèasnì zakomentován nefunkèní assert.

2002-11-27  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (_pypg_query): Opraveno volání `conmaker'.
	(DBDataPostgreSQL._pg_validate_codebook): Opraveno urèení typu
	Codebook.

	* lib/data/_test.py (DateTime.check_export): Updatován test
	exportu.
	(DateTime.check_validation): Updatován test validace.
	(Codebook.check_validate): Opraven pøeklep v testu.
	(Codebook): Test zakomentován.
	(DBMultiData): Test zakomentován.
	(DBDataDefaultClass.setUp): Zakomentováno v¹e týkající se
	multidat.  Explicitnì uveï typ sloupce `datum'.  Kontroluj chyby
	validace.
	(Date._test_instance): Uveï formát.

	* lib/data/types_.py (Enumeration.values): Nová metoda.
	(DateTime._validate): Odstraòuj z hodnoty okrajové mezery.
	(DateTime): V docstringu definováno, ¾e jsou podporována pouze
	data od roku 1000.
	(DateTime._VALIDATION_MESSAGES): Pøidána konstanta VM_DATE_AGE.
	(DateTime._validate): Nevaliduj data star¹í ne¾ 1. 1. 1000.
	(VM_DT_AGE): Nová konstanta.

	* lib/data/xtypes.py (_Codebook._validate_retrieve): Nová metoda.
	(_Codebook._retrieve): Validace pøesunuta do `_validate_retrieve'.
	(_Codebook): V docstringu upøesnìn obsah vnitøních a u¾ivatelských
	hodnot.
	(_Codebook._row_values): Nový argument `export'.
	(_Codebook.values, _Codebook._export): Volej `_row_values'
	s argumentem `export'.
	(_Codebook._validate, MultiCodebook.validate_partial): Místo
	`_retrieve' volej `_validate_retrieve'.
	(_Codebook.data_value): Do `_retrieve' pøedávej vnitøní, ne
	vnìj¹í, sloupce.  Do docstringu pøidáno upozornìní o charakteru
	vrácené hodnoty.
	(_Codebook._export): Loguj pou¾ití argumentu `column'.
	(SingleCodebook): V docstringu upøesnìna podoba vnitøní hodnoty.
	(_Codebook._value_retrieve): Nová metoda.
	(_Codebook._export, _Codebook.data_value): Volej ji místo
	`_retrieve'.

2002-11-27  Tomas Cerha  <cerha@brailcom.org>

	* lib/data/xtypes.py (_Codebook.data_value): Metodì `_retrieve'
	pøedávej `_internal_columns' namísto `self._value_columns'.

	* lib/form/screen.py (FrameStack._replace_window): Pokud má okno
	metodu `focus()', volej ji, jinak volej `SetFocus()'.

	* lib/form/list.py (ListForm._create_form_parts): Nová metoda.
	(ListForm._create_list): Nová metoda.
	(ListForm.__init__): Vytváøení formuláøe pøenecháno tìmto metodám.

	* lib/form/form.py (Form.__init__): Volej metodu `_create_form()'.
	(Form._create_form, Form._finish_top_level_sizer)
	(Form._create_form_parts): Nové metody.
	(TitledForm._create_caption): Kosmetické úpravy.
	(EditForm.__init__): Konstruktor pøedka volej a¾ po inicializaci
	atributù.
	(EditForm._create_form): Nová metoda.
	(EditForm._create_form): Zru¹eno.
	(EditForm._create_form_parts): Nová metoda.
	(PopupEditForm._create_form): Zru¹eno.
	(PopupEditForm._finish_top_level_sizer)
	(PopupEditForm._create_form_parts)
	(PopupEditForm._create_status_bar): Nové metody.
	(ShowForm._create_form): Zru¹eno.
	(ShowForm._finish_top_level_sizer, ShowForm._create_form_parts):
	Nové metody.

2002-11-26  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List._ListTable.__init__): Nový argument
	`grouping'.
	(List._ListTable.__init__): Jako argument `style' konstruktoru
	`_Column' pou¾ívej pouze styl, nikoliv dvojici (styl, cid).
	(List._ListTable.__init__): Inicializuj `self._group_cache' a
	`self._group_value_cache'.
	(List._ListTable._group): Nová metoda.
	(List._ListTable.row): Vracej skuteènì instanci `PresentedRow',
	jak tvrdí docstring, nikoliv pouze `Row'.  Pou¾ívej cache.
	(List._ListTable.edit_row): Kosmetické úpravy.
	(List._ListTable.GetAttr): Vyu¾ívej `self.row()'.  Nastav barvu
	pozadí na `List._GROUPING_COLOR', pokud jde o zvýraznìnou skupinu.
	(List.UI_GROUPING): Nová konstanta.
	(List._FOCUS_COLOR): Drobná zmìna barvy.
	(List._GROUPING_COLOR): Nová konstanta.
	(List.__init__): Nový argument `default_grouping'.
	(List._create_grid): Konstruktoru `_ListTable' pøedávej argument
	`grouping'.
	(List._on_label_right): Nové polo¾ku menu pro pøíkaz
	`List.COMMAND_SET_GROUPING_COLUMN'.
	(List.on_ui_event): Pøidána implementace `List.UI_GROUPING'.
	(List.on_command): Pøidána implementace
	`List.COMMAND_SET_GROUPING_COLUMN'.
	(List.refresh): Nový `reset' parametr `grouping'.
	(ListForm.__init__): Konstruktoru `List' pøedávej argument
	`grouping'.

	* lib/form/spec.py (ViewSpec.__init__): Nový argument `grouping'.
	(ViewSpec.grouping): Nová metoda.

	* lib/form/command.py (List.COMMAND_SET_GROUPING_COLUMN': Nový pøíkaz.

2002-11-25  Milan Zamazal  <pdm@brailcom.org>

	* ebas (run_application.ClientResolver): Buï potomkem
	FileResolver.

2002-11-25  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dialog.py (__init__): Argument `type' pøejmenován na
	`mode'.  Argument `path' zru¹en.  Nové argumenty `dir' a `file'.
	(FileDialog.run): Respektuj zmìny argumentù konstruktoru,
	resp. stejnojmenných privátních atributù.

2002-11-22  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_get_table_type): Opraveny
	a doplnìny argumenty volání DBException.

2002-11-22  Miroslav Macek  <macek@asellus.cz>

	* config/config_isas.py (date_format): Nastaven formát '%d.%m.%Y'.

2002-11-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(DBDataPostgreSQL._pg_make_row_from_raw_data)
	(DBDataPostgreSQL._pg_create_make_row_template): Pøidáno o¹etøení
	DateTime.

	* lib/util/configuration.py (Configuration._Option_date_time_format) 
	(Configuration._Option_date_format) 
	(Configuration._Option_time_format): Nové konfiguraèní volby.
	* config/config.py: Pøegenerováno.

	* lib/data/types_.py (DateTime.DEFAULT_FORMAT)
	(DateTime.CZECH_FORMAT): Nové konstanty.
	(DateTime._regexp_spec): Zru¹eno.
	(DateTime.__init__): Nová metoda.
	(Date.DEFAULT_FORMAT, Date.CZECH_FORMAT): Nové konstanty.
	(Date._regexp_spec): Zru¹eno.
	(Date._validate, Date._export, Time.DEFAULT_FORMAT): Nová
	konstanta.
	(Time._regexp_spec): Zru¹eno.
	(Time._validate, Time._export): Zru¹eno.
	(Date._validate, Date._export): Zru¹eno.
	(DateTime._export): Zru¹en argument `limit'.  Nový argument
	`format'.  Pøepsáno.
	(DateTime): Provedené úpravy zohlednìny v docstringu.
	(DateTime._validate): Pøepsáno.
	(Date.__init__, Time.__init__): Nové metody.
	(DateTime.DATE, DateTime.TIME): Zru¹eno.
	(DateTime.SQL_FORMAT, Date.SQL_FORMAT, Time.SQL_FORMAT): Nové
	konstanty.
	(Type.validate): Cachuj i objekty s klíèovanými argumenty.
	(Type._validating_provider): Argumenty zmìnìny na nový klíè.

2002-11-20  Milan Zamazal  <pdm@brailcom.org>
	
	* lib/data/dbdata.py
	(DBDataPostgreSQL._pg_create_make_row_template)
	(DBDataPostgreSQL._pg_validate_codebook): Pøidána podpora pro
	SingleCodebook.

2002-11-20  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/dialog.py (BugReport._create_content): Nech»
	tracbackové okno není read-only.

2002-11-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/wxlib.py: Zru¹eno.

	* lib/form/list.py (List._ListTable.__init__): Volej konstruktor
	pøedka.

	* lib/util/util.py (exception_info): Nová funkce.
	(deepstr): I v pøípadì sekvence vracej string.

	* lib/util/configuration.py (Configuration._Option_bug_report_address) 
	(Configuration._Option_bug_report_subject)
	(Configuration._Option_sendmail_command): Nové konfiguraèní volby.
	* config/config.py: Pøegenerováno.

	* lib/form/application.py (exit): Nová funkce.
	(Application._exit): Pøejmenováno na `exit'.
	(Application.on_command): Zohlednìna pøedchozí zmìna.

	* ebas (_usage): Za chybovou hlá¹kou getopt vlo¾ jen jeden nový
	øádek.
	(go): Pøi importu lib.util odchytávej getopt.GetoptError.
	* ebas-server (_usage, go): Nápodobnì.

	* lib/form/event.py (top_level_exception): Pøedávej konstruktoru
	BugReport informace o výjimce.  Pøidány reakce na výsledek
	BugReport dialogu.

	* lib/form/dialog.py (BugReport): Napsáno znovu, s vlastní
	implementací.
	(GenericDialog.__init__): Kosmetické úpravy docstringu.
	(InputDialog._create_content): Zaostøi vstupní pole a nastav mu
	ký¾enou ¹íøku.
	(InputDialog.__init__): Nový argument `input_width'.

2002-11-19  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dialog.py (Dialog.__init__): Nová metoda.
	(GenericDialog.__init__): Vyu¾ívej ji.
	(OperationDialog): Doplnìn dokumentaèní øetìzec.
	(OperationDialog.__init__): Upraven dokumentaèní øetìzec.
	(FileDialog): Nová tøída.
	(GenericDialog._create_icon): Nová metoda.
	(Message._create_content): Vyu¾ívej ji.
	(BugReport.__init__): Parametru konstruktoru pøedávej jako klíèované.
	(BugReport._create_content): Nastav proporcionální font
	tracebacku.  Nastav vìt¹í nadpis.  Pøidej ikonu.  Traceback nech»
	je read-only
	(BugReport._on_set_focus): Nová metoda.
	(BugReport._customize_result): Kosmetická úprava.
	(BugReport.on_command): Nová metoda.

2002-11-18  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/event.py (top_level_exception): Pro ohlá¹ení chyby
	pou¾ívej tøídu BugReport.

	* lib/form/application.py (resolver): Nová funkce.

	* lib/form/wxlib.py: Nový soubor.

	* lib/form/dialog.py (BugReport): Nová tøída.

	* lib/output/formatter.py (LoutFormatter._format_paragraph): Místo
	makra @LP pou¾ívej jeho expanzi.

2002-11-18  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dialog.py (OperationDialog._on_show): Výsledek volání
	`apply' ukládej do `self._result'.
	(OperationDialog._customize_result): Nová metoda.

2002-11-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/resolver.py (OutputResolver.output_parameter):
	Nech» `name' smí být i sekvence, spojovaná do jednoho stringu
	lomítky.

	* lib/util/resolver.py (Resolver._call_spec): Nová metoda.
	(Resolver._get_spec): Pou¾ívej ji.

	* lib/form/dualform.py (PostponedSelectionDualForm._on_idle):
	Vrátí-li `_do_selection' None, vy¾ádej dal¹í zpracování.
	(DescriptiveDualForm._do_selection): Vracej TRUE.
	(SideBrowseDualForm._do_selection): Je-li v¹e OK, vra» TRUE.

	* lib/output/data.py (data_item): Nech» argument `key' je
	nepovinný.  Doplnìn chybìjící import config.  Opraveno vytváøení
	PresentedRow.

	* lib/form/list.py (SideBrowseForm._formatter_parameters): Nech»
	parametr formátovaèe je string.  Opraven klíè extra parametru.
	(BrowseForm._formatter_parameters): Oddìluj komponenty parametru
	lomítky.
	(BrowseForm._on_print_): Jako 

	* lib/output/markup.py (_Mark): Nová tøída.
	(_Container, Null, NewPage, PageNumber, LongTable): Buï jejím
	potomkem.
	(_Space, VSpace, HSpace): Nové tøídy.

	* lib/output/formatter.py (LoutFormatter._format_long_table):
	Formátuj labels sloupcù.
	(LoutFormatter._MARK_PROCESSORS): Pøidáno VSpace a HSpace.
	(LoutFormatter._format_space): Nová metoda.
	(LoutFormatter._format_paragraph): Obaluj celé @LP slo¾enými
	závorkami.

2002-11-15  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/markup.py (LongTable.Column.__init__): Doplnìn
	chybìjící atribut `alignment'.
	(LongTable.__init__): Nový argument `separator_height' a atribut
	`_separator_height'.
	(LongTable.separator_height): Nová metoda.

	* lib/output/data.py: Místo lib.util importuj lib.output.
	(data_table): Opravy vìt¹ího mno¾ství chyb.
	(data_table): Zru¹en argument `separator_height'.  Nový argument
	`long_table_args'.

	* lib/form/list.py (BrowseForm._formatter_parameters): Nech» klíèe
	parametrù jsou strings.

	* lib/output/formatter.py (LoutFormatter._resolve): Loguj
	nenalezení specifikace.
	(LoutFormatter._format_long_table): Opraveno vìt¹í mno¾ství chyb.

	* lib/form/event.py (top_level_exception): Spou¹tìj debugger dle
	`config.debug_on_error', ne `config.debug' 

	* lib/util/configuration.py
	(Configuration._Option_debug_on_error): Nová konfiguraèní volba.
	* config/config.py: Pøegenerováno.
	* ebas (_usage): Doplnìno --debug-on-error.
	* ebas-server (_usage): Nápodobnì.

2002-11-15  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dialog.py (GenericDialog.__init__): Dovol, aby
	`buttons' byla i prázdná sekvence.  Inicializuj atributy
	`_default_button' a `_shown'.
	(GenericDialog._on_set_focus): Za jistých okolností volej
	`self._on_show()'.
	(GenericDialog._on_show): Nová mentoda.
	(OperationDialog.__init__): Nová tøída.

	* lib/form/inputfield.py (CodeBookField._on_invoke_selection):
	Pøidáno TODO

2002-11-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Jedná-li se o neu¾ivatelský Codebook, zji¹»uj constraints jeho
	sloupce a nastav je pro Codebook.

	* lib/form/list.py (BrowseForm._on_print_): Opraveno volání
	konstruktoru lib.output.Formatter.

	* lib/output/data.py (data_table): Pøepsáno.

	* lib/output/formatter.py (LoutFormatter._MARK_PROCESSORS):
	Pøidáno LongTable.
	(LoutFormatter._format_long_table): Nová metoda.
	(LoutFormatter.__init__): Zru¹en argument `parameters' a atribut
	`_parameters'.

	* lib/output/markup.py (LongTable): Nová formátovací znaèka.

	* lib/data/xtypes.py (Codebook._update): Pøi zmìnì resetuj
	`_validation_cache'.
	(Codebook._update_enumeration): Zru¹eno.
	(Codebook.__init__): Zru¹en argument `mode' a atribut `_mode'.
	(Codebook.Mode): Zru¹eno.
	(Codebook): Pøejmenováno na _Codebook.
	(_Codebook.data_value): Odstranìny kvalifikátory modulu lib.data.
	(SingleCodebook, MultiCodebook): Nové tøídy.
	(_Codebook._validate): Updatován docstring.

	* lib/util/caching.py (LimitedCache.__init__): Nový atribut
	`_lock'.
	(LimitedCache.__setitem__): Zamykej.

	* lib/data/types_.py (Type._shared_value_cache_counter)
	(Type._shared_value_cache, Type._VALUE_CACHE_LIMIT): Zru¹eno.	
	(Type.__init__): Nový atribut `_validation_cache'.
	(Type._validating_provider): Nová metoda.
	(Type.validate): Pøepracováno.
	(Type.constraints): Nová metoda.

2002-11-14  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField.__init__): Zru¹en neaktuální
	komentáø.
	(InputField._create_label, InputField._create_widget)
	(InputField._validation_error_handler, InputField._menu):
	Docstring zmìnìn na komentáø.
	(InputField._on_reset): Zru¹eno.
	(InputField._set_focus): Doplnìn komentáø.

2002-11-14  Pavel Hanak  <hanak@brailcom.cz>

	* lib/presentation/field.py (FieldSpec.__init__): Zmìò default
	hodnotu Codebooku z '' na None.

2002-11-12  Milan Zamazal  <pdm@brailcom.org>

	* ebas (go): Vra» se, není-li dostupno X Window.

	* lib/data/types_.py (Type.validate): Zaveden odporný hack
	opravující vyu¾ívání cachovaných hodnot pro jiné instance.

2002-11-12  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (EnumerationField._values) 
	(ChoiceField._create_controls): Kosmetická úprava.

	* lib/data/xtypes.py (Codebook.values): Namísto instancí `Value'
	vracej pouze vnitøní hodnoty.
	(Codebook._row_values): Vracenou sekvenci pøevádìj na tuple.

	* lib/form/dialog.py (Message.__init__): Nech» je výchozí hodnotou
	argumentu `default' talèítko `Ok'.
	(Message.BUTTON_OK, Message.BUTTON_CANCEL, Message.BUTTON_YES)
	(Message.BUTTON_NO): Nové konstanty.
	(Error.__init__, Question.__init__, InputDialog.__init__)
	(InputDialog._customize_result, Login._customize_result)
	(InputDialog._on_key_down, RunFormDialog._customize_result)
	(Calendar.__init__, Calendar._customize_result)
	(Calendar._on_calendar, Message.__init__): Pou¾ívej konstanty
	`BUTTON_*'.

2002-11-09  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (KeyHandler.on_key_down): Odstranìny ladící
	printy.

	* lib/output/formatter.py (LoutFormatter._format_data_table)
	(LoutFormatter._format_data_item): Zru¹eno.
	(LoutFormatter._MARK_PROCESSORS): Vyøazeno DataTable a DataItem.
	(LoutFormatter.__init__): Odstranìn zapomenutý print.
	(LoutFormatter.DATA, LoutFormatter.DATA_KEY) 
	(LoutFormatter.DATA_ROW, LoutFormatter.DATA_CONDITION) 
	(LoutFormatter.DATA_SORTING): Zru¹eno.

	* lib/output/data.py (DataTable, DataItem): Zru¹eno.
	(data_table, data_item): Nové funkce.
	(P_KEY, P_ROW, P_CONDITION, P_SORTING): Nové konstanty.

	* lib/output/resolver.py (OutputResolver._get_module): Opraven
	pøeklep ve volání pøedka.
	(OutputResolver.__init__): `parameters' ukládej do speciální tøídy
	vracející ne pøímo parametr, ale funkci jej vracející.

	* lib/form/list.py (BrowseForm._PrintResolver._get_module):
	Pøednostnì získávej modul od pøedka.
	(BrowseForm._PrintResolver._Spec.body): Místo lib.output.DataTable
	pou¾ívej lib.output.data_table.
	(BrowseForm._formatter_data): Pøejmenováno na
	`_formatter_parameters'.  Pøepracováno.
	(SideBrowseForm._formatter_data): Nápodobnì.
	(BrowseForm._on_print_): Zohlednìny pøedchozí zmìny.

2002-11-08  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (LoutFormatter.__init__): Nevolej
	hodnoty vracené `_resolve'.  `_body_func' -> `_body'.
	(LoutFormatter._process): `_body_func' -> `_body'.
	(LoutFormatter._resolve): Z resolveru vytahuj pøímo specifikaci.

	* lib/form/list.py (BrowseForm._PrintResolver): Buï potomkem
	lib.output.OutputResolver; kompletnì pøepracováno.
	(BrowseForm._on_print_): Zohlednìna pøedchozí zmìna.

	* lib/util/resolver.py (ProxyResolver): Nová tøída.
	(ResolverModuleError.__init__): Opraven pøeklep ve volání
	konstruktoru pøedka.
	(ResolverSpecError.__init__): Nápodobnì.

	* lib/output/__init__.py: Importuj `resolver'.

	* lib/output/resolver.py: Nový modul.

	* lib/data/xtypes.py (Codebook._export): Opraveno chování pro
	'column' není None.
	(Codebook._row_values): Zru¹ena minulá zmìna.

2002-11-07  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/caching.py (_Cache.__init__): Nový argument
	`validator' a atribut `_validator'.
	(_Cache.__getitem__): Pou¾ívej `_validator'.

	* lib/form/output.py (PrintForm.__init__): Oprava odkazu
	v docstringu.
	* lib/form/form.py (Form.__init__): Oprava odkazu
	v docstringu.

	* lib/form/list.py (ListForm.__init__): Oprava odkazu
	v docstringu.
	(BrowseForm._PrintResolver): Buï potomkem Resolver.

	* lib/form/application.py (run_application): Místo Resolver
	vytváøej FileResolver.

	* lib/remote/server.py (_PyroResolver): Buï potomkem FileResolver.

	* lib/util/resolver.py (Resolver): Rozdìleno na tøídy Resolver a
	FileResolver.  Pøepracována dokumentace i implementace.
	(FileResolver): Nová tøída.
	(ResolverModuleError): Nová tøída.
	(ResolverFileError): Buï jejím potomkem.
	(ResolverFileError.__init__): Zohlednìna pøedchozí zmìna, doplnìn
	docstring.
	(ResolverSpecError.__init__): Prohozeno poøadí argumentù, doplnìn
	docstring.
	(Resolver.get_object): Zohlednìna pøedchozí zmìna.
	(Resolver.get_object, Resolver.get_instance, Resolver.get):
	`spec_name' musí být neprázdný string.
	(Resolver): Vyu¾ívej cachovací objekty z lib.util.
	(Resolver._get_object, Resolver._get_spec): Nové metody.

	* lib/output/formatter.py: Neimportuj lib.util.
	(LoutFormatter._ok_resolver, LoutFormatter._resolve): Místo
	resolver.get volej resolver.get_object.
	(LoutFormatter._font, LoutFormatter.__init__): Atribut `_body'
	zmìnìn na `_body_func'.
	(LoutFormatter._process): Volej `_body_func', nepodmínìnì,
	a pøedávej i `_output_resolver'.

	* lib/output/exception.py: Neimportuj lib.util.

	* lib/output/__init__.py: Importuj lib.util.
	Importuj data.

	* lib/output/markup.py:	Neimportuj lib.util.
	(DataTable, DataItem): Zru¹eno.

	* lib/output/data.py: Nový modul.

2002-11-07  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (ViewSpec.__init__): Update dokumentace.

	* lib/form/list.py (BrowseForm.__init__): Namísto nastavování
	callbackù na metody `_on_descr_record()', `_on_show_record()' a
	`self._on_edit_record()' pou¾ívej rovnou lambda funkci volající
	`run_form()'.
	(BrowseForm._redirected_name): Nová metoda.
	(BrowseForm._on_new_record): Update komentáøe.
	(BrowseForm._on_edit_record, BrowseForm._on_show_record)
	(BrowseForm._on_new_record): Zru¹eno.

2002-11-06  Milan Zamazal  <pdm@brailcom.org>
	
	* lib/form/screen.py (WxKey.__init__): Pøidáno `Tab'.

	* lib/form/command.py: Definován zápis pro klávesu Tab.

2002-11-06  Tomas Cerha  <cerha@brailcom.org>

	* lib/data/xtypes.py (Codebook._row_values): Pokud `columns' není
	sekvence, neprovádìj mapování, ale vra» rovnou odpovídající hodnotu.

	* lib/form/command.py: Nový pøíkaz
	`List.COMMAND_FULL_INCREMENTAL_SEARCH'.

	* lib/form/spec.py (ViewSpec.__init__): Oprava chyby v indentaci.

2002-11-05  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (Form.__init__): Nastav `_guardian' pøed
	voláním konstruktoru KeyHandler.

	* lib/form/command.py (List.COMMAND_INCREMENTAL_SEARCH): Nový
	pøíkaz.

	* lib/form/list.py (List._IncrementalSearch._search): Pøidána
	podpora pro full hledání.
	(List._IncrementalSearch.__init__): Nový argument `full'.
	(List._on_incremental_search): Nápodobnì.
	(List.on_command): Pøidána podpora pro full inkrementální
	hledání.  Zredukováno mno¾ství returns.

	* lib/data/dbdata.py (DBDataPostgreSQL._pg_validate_codebook):
	Nová metoda.
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Codebooks validuj
	pøes cache.
	(DBDataPostgreSQL._pg_codebook_cache): Nový atribut.

	* lib/util/caching.py (LimitedCache): Vyu¾ívej lib.util.Counter.
	Opravena spousta pitomých chyb.
	(_Cache): Buï potomkem `object'.  Opravena spousta pitomých chyb.

	* lib/data/__init__.py: Importuj xtypes.

	* lib/data/xtypes.py: Nový modul.

	* lib/data/types_.py (Enumeration): Pøejmenováno na
	FixedEnumeration.  Buï potomkem (nového) Enumeration.
	(Enumeration): Nová tøída.
	(Boolean): Enumeration -> FixedEnumeration.
	(Codebook): Kompletnì pøepracováno, není ji¾ potomkem
	FixedEnumeration, nyní stahuje ve¹kerá data pouze na vy¾ádání.
	(MutableType): Nová tøída.
	(Codebook): Podìd ji.
	(Type.default_value): Metoda smí vracet i None.  Nelze-li
	zvalidovat None, vra» None.
	(FixedEnumeration.VM_INVALID_VALUE)
	(FixedEnumeration._VALIDATION_MESSAGES): Pøesunuto do Enumeration.
	(Codebook.get): Pøejmenováno na `data_value'.
	(Codebook): Pøesunuto do xtypes.py.
	(Type.__cmp__): Pøednostnì porovnávej tøídy objektù.
	(Value.export, Float.__init__, DateTime._export): Porovnání na
	None provádìj pøes `is'.

2002-11-05  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/screen.py (FrameList): Nová tøída (prototyp).

	* lib/form/inputfield.py (ListField._set_value): Update
	docstringu.
	(ListField._set_value): Namísto `RefSpec.sort' pou¾ívej
	`RefSpec.sorting'.

	* lib/presentation/field.py (RefSpec.__init__): Argument `sort'
	zmìnìn na `sorting'.
	(RefSpec.sort): Pøejmenováno na `sorting'.

	* lib/form/list.py (List.__init__): Úprava docstringu.
	(ListForm.__init__): Výchozí tøídìní nezískávej pøes resolver, ale
	ze specifikace (`self._view').

	* lib/form/spec.py (ViewSpec.__init__): Nový argument `sorting'.
	(ViewSpec.sorting): Nová metoda.
	(ViewSpec.__init__): Nový argument `redirect'.
	(ViewSpec.field): Update docstringu.
	(ViewSpec.layout): Update docstringu.
	(ViewSpec.title): Update docstringu.
	(ViewSpec.redirect): Nová metoda.

2002-11-05  Pavel Hanak  <hanak@brailcom.cz>

	* lib/data/dbdata.py (DBDataPyPgSQL._pg_query): Zru¹ podporu
	PgInt8.

2002-11-04  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/test.py (TestSuite.add): Volej pouze pøímo definované
	testovací metody, ne podìdìné.

	* lib/util/_test.py (Classes.check_direct_public_members): Nový test.

	* lib/util/util.py (is_): Nová funkce.
	(direct_public_members): Nová funkce.

	* lib/data/_test.py
	(DBDataDefaultClass.check_select_fetch_direction): Volej
	`fetchone' s klíèovaným argumentem `direction'.
	(DBMultiData.check_select_fetch_direction)
	(DBDataFetchBuffer._check_skip_fetch): Nápodobnì.
	(DBMultiData.check_search): Nápodobnì pro `search'.
	(DBDataFetchBuffer._check_skip_fetch): Nápodobnì pro `skip'.
	(Codebook): Pøidáno do `tests'.
	(Codebook.setUp): Do Codebook pøedávej DataFactory, ne MemData.
	(Codebook.check_validate, Codebook.check_export): Nové testy.
	(Codebook.check_cmp): Nové zru¹ení testu.

	* lib/util/caching.py (_Cache.reset): Nová metoda.
	(LimitedCache.reset): Nová metoda.
	(LimitedCache._collect): Vyu¾ívej ji.

2002-11-04  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dualform.py (DualForm.Show): Nenastavuj
	`self._active_form' na `self._main_form'.
	* lib/form/command.py: Pro `Application.COMMAND_EXIT' nenastavuj
	`access_groups'.

2002-11-01  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dualform.py (DualForm.Close): Vracej návratovou hodnotu
	volání `splitter.Close()'.

	* lib/form/application.py (current_form): Vyu¾ívej metodu
	`Application.top_window()'.

	* lib/form/form.py (Form.resolver): Zru¹eno.

2002-10-31  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (BrowseForm._on_new_record)
	(BrowseForm._on_edit_record, BrowseForm._on_show_record)
	(BrowseForm._on_descr_record, BrowseForm._on_print_): Namísto
	metody `Application.run_form()' vyu¾ívej funkci `run_form()'.

	* lib/form/inputfield.py (ListField.on_command)
	(ListField.on_command): Namísto metody `Application.run_form()'
	vyu¾ívej funkci `run_form()'.

	* lib/form/dualform.py (BrowseDualForm._on_show_record): Namísto
	metody `Application.run_form()' vyu¾ívej funkci `run_form()'.

	* lib/form/application.py (Application): Kompletní pøepsání
	neaktuálního docstringu.
	(Application._title, Application._menu, Application._buttons)
	(Application._status_fields, Application._command_keys)
	(Application._default_font_coding): Metody zru¹eny.
	(Application.OnInit): Namísto zru¹ených metod pou¾ívej rovnou
	`self._spec()'.  Název souboru s obrázkem loga získávej také ze
	specifikace a neúspìch loguj.  Neinicializuj `_buttonbar'.

2002-10-31  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/__init__.py: Importuj `caching'.

	* lib/util/caching.py: Nový modul.

	* lib/form/dualform.py (SideBrowseDualForm._do_selection):
	Po provedení akcí zaostøi pùvodnì zaostøené okno.

	* lib/form/screen.py (focused_window): Nová funkce.

	* lib/form/list.py (List._IncrementalSearch._on_key_down): Nech»
	hledání je mo¾no zru¹it i klávesou Escape.

2002-10-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (Menu.__init__): Nový atribut
	`_access_groups'.
	(MenuBar.activate): V pøípadì nastavení access groups znovu vytvoø
	i aktivní menu.
	(MenuBar.__init__): Menu pøidávej do `_menus' nepodmínìnì.
	(MenuBar.activate): Zohledòuj, ¾e aktivaèní tøída mù¾e být None.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_search): `forwards'
	neodvozuj z `direction', nýbr¾ ho zadávej natvrdo.

	* lib/form/list.py (List._IncrementalSearch._exit): Argument `row'
	nahrazen argumentem `rollback'.
	(List._IncrementalSearch._on_key_down): Zohlednìna pøedchozí
	zmìna.

2002-10-30  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/command.py (List.COMMAND_EDIT): Úprava docstringu.

	* lib/form/inputfield.py (resolve): `ListBoxField' a
	`RadioBoxField' pou¾ij pouze pokud nejde o `inline' re¾im.
	(ListBoxField._create_controls): Konstruktoru `wx.wxListBox'
	nepøedávej nepovinné argumenty.

	* lib/form/list.py (List._create_edit_popup_menu): Úprava menu.
	(BrowseForm._popup_menu): Úprava menu.

	* lib/form/screen.py (Menu.create): Kosmetické úpravy.

2002-10-29  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._do_search): Nová metoda.
	(List._on_search): Vyu¾ívej ji.
	(List._IncrementalSearch._search): Doimplementováno.
	(List._IncrementalSearch._back): Nastav po zmìnì textu kurzor na
	konec.
	(List._IncrementalSearch._on_key_down): Klíèuj argument `_search'.
	(List._IncrementalSearch._search): Nový argument `newtext'.
	(List._IncrementalSearch._on_text): Nastavuj ho.
	(List._IncrementalSearch.__init__): Nastavuj `_rows' na prázdný
	seznam.

	* lib/data/types_.py (Enumeration.default_value): Zru¹en ujetý
	docstring.

2002-10-29  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List._ListTable.GetValue): Nevracej nevalidní
	hodnotu, i kdyby existovala.
	(List._ListTable.SetValue): Nenastavuj `edited.invalid_col' a
	`edited.invalid_string'.
	(List._ListTable.get_invalid_string): Nová metoda.
	(List._ListTable.set_invalid_string): Nová metoda.
	(List._ListTable._EditedRow.__init__): Atribut `invalid_string'
	inicializuj na 'None', nikoliv na prázdný øetìzec.
	(_InputFieldCellEditor.BeginEdit): Pokud existuje nevalidní
	hodnota, nastav ji v políèku.
	(_InputFieldCellEditor.EndEdit): Nepou¾ívej
	`InputField.validate()', ale sám zvaliduj hodnotu a pøi chybì
	zobraz zprávu ve stavovém øádku.  O nevalidní hodnotì dej vìdìt
	gridové tabulce (metoda `set_invalid_string()').

2002-10-26  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (WxKey.__init__): Pøidáno Backspace.

	* lib/presentation/field.py (FieldSpec.__str__): Pøidáno chybìjící
	%s na label.

	* lib/form/list.py (List.on_command): Pøidána podpora pro
	List.COMMAND_INCREMENTAL_SEARCH.
	(List._on_incremental_search): Nová metoda.
	(List._IncrementalSearch): Nová tøída.

	* lib/form/command.py: Do docstringu pøidána specifikace zápisu
	klávesy Backspace.
	(List.COMMAND_INCREMENTAL_SEARCH): Nový pøíkaz.

	* lib/output/formatter.py (LoutFormatter._MARK_PROCESSORS): Zru¹en
	BulletList.
	(LoutFormatter._format_list): Pøidána podpora pro argument `mark'.
	(LoutFormatter._format_bullet_list): Zru¹eno.
	(LoutFormatter._format_data_table): Do presentovaného øádku
	pøedávej místo èísla sloupce jeho id.

	* lib/output/markup.py (BulletList): Zru¹eno.
	(List.NUMBER_MARK, List.BULLET_MARK, List.KWARGS): Nové konstanty.

2002-10-25  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/event.py (_is_user_event): Nech» wx.wxCommandEventPtr
	je u¾ivatelská událost, nikoliv v¹ak grid.wxGridEventPtr.
	(wx_callback.process_event): Nuluj message pouze pro u¾ivatelské
	události.

	* lib/form/screen.py (Menu.create): Opraveno zji¹»ování pøíznaku
	pøístupu k pøíkazu.

2002-10-25  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dialog.py (GenericDialog._create_dialog_elements):
	Namísto podmínìného nastavení `EVT_SET_FOCUS' callbacku na
	`self._focus_default_button' nastavuj v¾dy na `self._on_set_focus'.
	(GenericDialog._focus_default_button): Zru¹eno.
	(GenericDialog._on_set_focus): Nová metoda.
	(Calendar._create_content): Pokud je datum prázdný øetìzec,
	nastavuj dne¹ní datum. 
	(Calendar._on_set_focus): Nová metoda.

2002-10-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (Menu.create): Aktivuj pouze ty polo¾ky menu,
	k jejich¾ pøíkazu je povolen pøístup.

	* lib/form/list.py (List.Close): Uzavírej datový select.

	* lib/data/dbdata.py (_DBConnectionPool.__del__): Nová metoda.
	(DBDataPyPgSQL._PgNotifier._register, _pypg_new_connection) 
	(_pypg_query): Dojde-li bìhem DB dotazu k chybì, zru¹ spojení.
	(PostgreSQLUserGroups.access_groups): Doplnìn docstring.

2002-10-24  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List._select_cell): `MakeCellVisible()' volej
	a¾ po `select_row()'.
	(List.select_row.set): Po pøechodu nezviditelòuj první sloupec,
	ale aktuální sloupec.

2002-10-23  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL._pg_locking_process):
	Odchytávej DBException pøi obnovì zámku.

	* lib/form/form.py (Form._create_data_object): Nech» `data_spec'
	smí být i lib.remote.RemoteDataFactory.

	* ebas (run_application.ClientResolver.get): Zru¹en argument
	`assert_class'.

	* lib/remote/server.py (_PyroDataFactory.create): Z klientské
	specifikace spojení pou¾ij pouze login a heslo.

	* lib/data/types_.py (Type._VALIDATION_MESSAGES): Nový atribut.
	(Type.__init__): Zru¹en argument `validation_message', nový
	argument `validation_messages'.
	(Type._validation_error): Nová metoda.
	(Integer.VM_NONINTEGER, Float.VM_INVALID_NUMBER)
	(DateTime.VM_DT_FORMAT, DateTime.VM_DT_VALUE)
	(String.VM_STRING_TOO_LONG, Enumeration.VM_INVALID_VALUE)
	(Codebook.VM_PARTIAL_VALIDATION): Nové atributy.
	(Integer._validate, Float._validate, String._validate_maxlen)
	(DateTime._validate, Enumeration._validate)
	(Sequence.VM_NONTUPLE, Sequence.VM_ARG_NUMBER)
	(Codebook.validate_partial, Sequence._validate): Pou¾ívej
	`_validation_message'.  Kosmetické úpravy.
	(Integer._VALIDATION_MESSAGES, Float._VALIDATION_MESSAGES)
	(String._VALIDATION_MESSAGES, DateTime._VALIDATION_MESSAGES)
	(Enumeration._VALIDATION_MESSAGES, Codebook._VALIDATION_MESSAGES)
	(Sequence._VALIDATION_MESSAGES): Nové atributy.
	(Codebook._update_enumeration): Vracej, zda byl update proveden.
	(Codebook.validate_partial, Codebook._validate, Codebook._export):
	Volej `_update_enumeration' nadvakrát (podruhé s `force'), je-li
	tøeba.
	(Codebook.get): Nevolej `_update_enumeration'.

2002-10-23  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/command.py: Nový pøíkaz `List.COMMAND_FINISH_EDITING'.

	* lib/form/list.py (List._on_cell_commit.move_right): Nepøedávej
	lokální promìnné jako klíèové argumenty.
	(List.on_command): O¹etøuj pøíkaz `List.COMMAND_FINISH_EDITING'.
	(_create_edit_popup_menu): Pou¾ívej `List.COMMAND_FINISH_EDITING'
	namísto `List.COMMAND_LINE_ROLLBACK'.
	(List._on_insert_line): Pokud je první buòka needitovatelná,
	pøejdi automaticky na první editovatelnou.
	(List._is_editable_cell): Nová metoda.
	(List._find_next_editable_cell): Nová metoda.
	(List._on_cell_commit.move_right): Zru¹eno.
	(List._on_cell_commit): Namísti `move_right()' pou¾ívej
	`self._find_next_editable_cell()'.

2002-10-22  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (_pypg_new_connection): Odstranìny zapomenuté
	prints.

	* lib/form/inputfield.py (CodeBookField._create_widget): Odstranìn
	zapomenutý print.

	* lib/form/search.py (SortingDialog._create_content): Pøidán
	assert na pozici sloupce.
	(SortingDialog._create_content): Neodkazuj se na neexistující
	atributy `_colsel' a `_dirsel', pou¾ívej lokální promìnné.

	* lib/form/spec.py (ViewSpec.field): Pokud dané políèko
	neexistuje, vra» None.

	* lib/form/list.py (List._ListTable.__init__): Nový atribut
	`_font_cache'.
	(List._ListTable._make_attr): Cachuj fonty.
	(ListForm.__init__): Do `default_sorting' zaøazuj pouze ty sloupce
	klíèe, které jsou mezi políèky.  Kosmetické úpravy.

	* lib/form/dualform.py (PostponedSelectionDualForm): Nová tøída.
	(SideBrowseDualForm, DescriptiveDualForm): Buï jejím potomkem.
	(SideBrowseDualForm._SELECTION_TICK, SideBrowseDualForm._on_idle)
	(SideBrowseDualForm._on_selection): Pøesunuto do
	PostponedSelectionDualForm.
	(SideBrowseDualForm._create_side_form): Èást inicializací
	pøesunuta do PostponedSelectionDualForm.
	(BrowseDualForm._create_main_form)
	(ShowDualForm._create_main_form): _on_selection ->
	_on_main_selection.
	(DescriptiveDualForm._on_main_selection): Zru¹eno.
	(DescriptiveDualForm._do_selection): Nová metoda.
	(SideBrowseDualForm._do_selection): Èást kódu pøesunuto do metody
	pøedka; volej ji.

	* lib/form/application.py (Application.OnInit): Pøed zobrazením
	loga testuj, zda existuje.
	(Application._on_frame_size): Pracuj s `_logo' jen není-li None.

2002-10-22  Tomas Cerha  <cerha@brailcom.org>

	* lib/presentation/field.py (PresentedRow._process_fieldspec):
	Nevytváøej `self._index'.  `self._columns' vytváøej jako slovník.
	(PresentedRow._init_row.genval): Namísto `self._index' pou¾ívej
	rovnou `self._columns'.
	(PresentedRow._key2col): Zru¹eno.
	(PresentedRow.__getitem__): Nech» argument `key' smí být pouze
	øetìzcový identifikátor.
	(PresentedRow.__setitem__): Nech» argument `key' smí být pouze
	øetìzcový identifikátor.
	(PresentedRow.__str__): Namísto `self._columns' procházej
	`self._fieldspec'.
	(PresentedRow.format): Nech» argument `key' smí být pouze
	øetìzcový identifikátor.
	(PresentedRow.has_key): Namísto `self._index' pou¾ívej
	`self._columns'.
	(PresentedRow.editable): Nech» argument `key' smí být pouze
	øetìzcový identifikátor.
	(PresentedRow.check): Namísto `self._columns' procházej
	`self._fieldspec'.

2002-10-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (BrowseForm._formatter_data): Pøidáno
	lib.output.Formatter.DATA.

	* lib/output/formatter.py (LoutFormatter.__init__): Argument
	`data_specs', resp. atribut `_data_specs', pøejmenován na
	`parameters', resp. `_parameters'.  Definována pravidla pro tento
	argument.
	(LoutFormatter.printout, LoutFormatter.preview)
	(LoutFormatter._process, LoutFormatter._lout): Zru¹en argument
	`parameters'.
	(LoutFormatter.DATA_KEY, LoutFormatter.DATA_ROW)
	(LoutFormatter.DATA_CONDITION, LoutFormatter.DATA_SORTING): Pøed
	hodnotu pøipojena dvì podtr¾ítka.
	(LoutFormatter.DATA): Nový atribut.
	(LoutFormatter._format_data_table): Zmìnìno konfliktní jméno
	promìnné cyklu.

2002-10-18  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/dualform.py (SideBrowseDualForm._do_selection): Oprava
	indentace.

	* lib/data/types_.py (Codebook.validate_partial): Pøi validaci
	èíselníkové hodnoty vynucuj '_update_enumeration()' - doèasné
	øe¹ení.

	* lib/form/dualform.py
	(SideBrowseDualForm._on_selection._do_selection): Nastavuj správnì
	bindcol a side_bindcol.

2002-10-18  Tomas Cerha  <cerha@brailcom.org>

	* lib/presentation/field.py (CodeBookSpec): Nová tøída.
	(FieldSpec.__init__): Zmìna dokumentace argumentu `codebook'.
	Pøidán assert na `codebook' jako instanci `CodeBookSpec'.

	* lib/form/spec.py (ViewSpec.__init__): Nech» argument `columns'
	mú¾e být pouze sekvence (nebo None). Zmìna dukomentace.
	(ViewSpec.columns): Zru¹en argument `id'.
	(DualSpec.__init__): Nový argument `side_columns'.
	(DualSpec.side_columns): Nová metoda.

	* lib/form/list.py (ListForm.__init__): Nový klíèový argument
	`columns'.  Pokud je dán, vytvoø seznam sloupcú podle nìj.
	(ListForm._columns): Zru¹eno.
	(CodeBook): Úprava dokumentace.
	(CodeBook.__init__): Zru¹en argument `id'.  Nový argument
	`columns'.  V dokumentaci nepopisuj argumenty rodièovské tøídy.
	(CodeBook._columns): Zru¹eno.
	(BrowseForm.__init__): Namísto vyjmenovávání argumentù pouze
	pøedávej `*args' a `**kwargs'.
	(FilteredBrowseForm.__init__): Klíèové argumenty pøedávej jako
	`**kwargs'.
	(SideBrowseForm.__init__): Nový klíèový argument `columns'.
	(SideBrowseForm._columns): Zru¹eno.

	* lib/form/inputfield.py (CodeBookField): Úprava dokumentaèního
	øetìzce.
	(CodeBookField._create_widget, CodeBookField._on_invoke_selection)
	(CodeBookField._validation_error_handler): Vyu¾ívej specifikace
	èíselníku jako instance `CodeBookSpec'.
	(ListField._create_controls): Kosmetické úpravy.

	* lib/form/dualform.py (SideBrowseDualForm._create_side_form):
	Pøedávej konstruktoru `SideBrowseForm' argument `columns'.

2002-10-17  Tomas Cerha  <cerha@brailcom.org>

	* lib/util/resolver.py (Resolver.get): Zru¹en argument
	`assert_class'.  Klíèové argumenty pøedávej volání specifikaèní
	funkce.  Klíè chache nech» zahtnuje také klíèové argumenty.

	* lib/form/dualform.py (DualForm._create_view_spec): Nepøedávej
	metodì `Reseolver.get()' argument `assert_class'.  Provádìj assert
	na tøídu vrácení instance.

	* lib/form/form.py
	(Form._create_view_spec, Form._create_data_object): Nepøedávej
	metodì `Reseolver.get()' argument `assert_class'.  Provádìj assert
	na tøídu vrácení instance.

2002-10-17  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (LoutFormatter.preview) 
	(LoutFormatter.printout, LoutFormatter._lout) 
	(LoutFormatter._process): Nový argument `parameters'.
	(LoutFormatter._MARK_PROCESSORS): Pøidáno List.
	(LoutFormatter._format_list): Nová metoda.
	* lib/output/markup.py (List): Nová znaèka.
	(BulletList): Nová znaèka.

	* lib/util/util.py (Popen.__init__): w_from_child uzavírej jen
	pokud je instancí `int'.
	(flatten): Nová funkce.
	* lib/util/_test.py (ListUtils): Nová sada testù.
	(RemoveDuplicates, Some): Pøesunuto do ListUtils.
	(ListUtils.check_flatten): Nový test.

	* lib/presentation/field.py: Neimportuj lib.remote.
	(PresentedRow.__init__): Zakomentováno assert na argument `data'.

2002-10-16  Tomas Cerha  <cerha@brailcom.org>

	* lib/presentation/field.py (FieldSpec.__str__): Nová metoda.

	* lib/form/list.py (List._ListTable.row): Úprava dokumentaèního
	øetìzce.
	(List._edit_cell, List._on_cell_commit.move_right): Pøi volání
	`PresentedRow.editable()' pøedávej identifikátor, namísto èísla
	sloupce.

	* lib/form/dialog.py (db_operation): Zpracuj správnì návratovou
	hodnotu pøihla¹ovacího dialogu.

2002-10-15  Miroslav Macek  <macek@asellus.cz>

	* config/config_isas.py (): Zmìna rih na localhost.

2002-10-15  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/dualform.py (SideBrowseDualForm): Pro _SELECTION_TICK
	pou¾ij 0.2s.

2002-10-15  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/configuration.py
	(Configuration._Option_user_config_file.default): Nehavaruj,
	není-li definováno `config_file'.

2002-10-15  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/search.py (SFDialog._selected_condition): `dialog()' ->
	`run_dialog'.

	* lib/form/output.py (PrintForm.__init__): Zru¹en argument
	`frame_stack'.
	(PrintForm.run): Zru¹eno.

	* lib/form/list.py (List._create_grid):
	`self._parent._on_leave_form()' volej bez argumentù.
	(List._current_key, List._switch_sorting, List._finish_editing)
	(List._on_search, List._on_search, List._on_filter)
	(List._on_edit, List._on_line_commit, List._on_cell_commit)
	(List.exit_check): `dialog()' -> `run_dialog'.
	(ListForm.__init__): Zru¹en argument `frame_stack'.
	(CodeBook): Update dokumentace.
	(CodeBook.__init__): Zru¹en argument `frame_stack'.  Zru¹en
	atribut `self._returned_values' (pou¾ívej `self._result', jako v
	nadtøídì).
	(CodeBook._on_activation): Namísto `self._returned_values'
	pou¾ívej `self._result'.
	(CodeBook.run): Zru¹eno.
	(BrowseForm.__init__): Zru¹en argument `frame_stack'.
	(FilteredBrowseForm.__init__): Zru¹en argument `frame_stack'.
	(SideBrowseForm.__init__): Zru¹en argument `frame_stack'.

	* lib/form/inputfield.py (InputField.validate): `dialog()' ->
	`run_dialog'.
	(DateField._on_invoke_selection): `dialog()' -> `run_dialog'.
	(CodeBookField._validation_error_handler): Namísto
	`Application.dialog()' pou¾ívej funkci `run_dialog()'. (Nevyu¾ívej
	`lib.form.application._application').

	* lib/form/form.py (Form.__init__): Zru¹en argument `frame_stack'.
	(Form._on_leave_form): Nevkládej okno na framestack, pøenech to na
	aplikaci.
	(Form.frame_stack): Zru¹eno.
	(Form.run): Zru¹eno.
	(PopupForm._on_leave_form): Neodchytávej výjimky.
	(PopupForm.run): Neloguj a nevkládej okno na framestack.
	(EditForm.__init__): Zru¹en argument `frame_stack'.
	(EditForm._lock): `dialog()' -> `run_dialog'.
	(EditForm._edit_update): `dialog()' -> `run_dialog'.
	(EditForm._signal_update): Nesahej na framestack, pou¾ívej funkci
	`current_form()'.
	(EditForm._find_row): `dialog()' -> `run_dialog'.
	(EditForm.exit_check): `dialog()' -> `run_dialog'.  Nevolej
	`refresh()' na vrchní okno z fraestacku.
	(EditForm.run): Zru¹eno.
	(BrowsableShowForm._on_search): `dialog()' -> `run_dialog'.
	(BrowsableShowForm._on_search): `dialog()' -> `run_dialog'.
	(BrowsableShowForm._on_select_filter): `dialog()' -> `run_dialog'.
	(BrowsableShowForm._on_sort_column): `dialog()' -> `run_dialog'.

	* lib/form/event.py (top_level_exception): `dialog()' ->
	`run_dialog'.

	* lib/form/dualform.py (DualForm.__init__): Zru¹en argument
	`frame_stack'.
	(SideBrowseDualForm._create_side_form): Nepøedávej `frame_stack'.
	(BrowseDualForm._create_main_form): Nepøedávej `frame_stack'.
	(ShowDualForm._create_main_form): Nepøedávej `frame_stack'.
	(DescriptiveDualForm._create_main_form): Nepøedávej `frame_stack'.
	(DescriptiveDualForm._create_side_form): Nepøedávej `frame_stack'.

	* lib/form/dialog.py: Zru¹en import z `application'.
	(Login): Nová tøída.
	(db_operation): `dialog()' -> `run_dialog'.
	(delete_record): `dialog()' -> `run_dialog'.
	(db_operation): Namísto dialogu `Password' pou¾ívej dialog
	`Login'.
	(db_operation): Importuj `config' pøed zobrazením `Login' dialogu.

	* lib/form/application.py (current_form): Nová funkce.
	(leave_form): Nová funkce.
	(run_form): Nová funkce.
	(dialog): Pøejmenováno na `run_dialog'.
	(Application.dialog): Pøejmenováno na `run_dialog'.
	(Application.run_form): Update dokumentace.  Nepøedávaj
	konstruktoru formuláøe argument `frame_stack'.  `dialog()' ->
	`run_dialog'.  Vytvoøený formuláø sám pøidávej na framestack a
	loguj.  Modální formuláøe také spus» metodou `run()' a po skonèení
	je zase odstraò z framestacku.
	(Application._exit): `dialog()' -> `run_dialog'.

2002-10-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/configuration.py
	(Configuration._Option_user_config_file.default): Odvozuj
	implicitní hodnotu z volby `config_file'.
	(Configuration.__getattr__): Neprovádìj reload pro `name'
	`config_file' a `user_config_file'.

2002-10-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataDefaultClass.access_groups): Nová
	metoda.

2002-10-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/access.py (RestrictedData._check_access_columns)
	(RestrictedData._access_filter_row)
	(RestrictedData._access_groups): Zohlednìny zmìny zji¹»ování
	skupin.

	* lib/data/dbdata.py (DBDataDefaultClass._access_groups): Zru¹eno.
	(DBDataDefaultClass.__init__): Zru¹en atribut
	`_access_current_groups'.
	(PostgreSQLAccessRights): Nová tøída.
	(DBDataDefaultClass): Buï potomkem PostgreSQLAccessRights.
	(_pypg_new_connection): Nový argument `data'.
	(DBDataPyPgSQL._pypg_new_connection): Zohlednìna pøedchozí zmìna.
	(_pypg_query): Nový argument `data'.
	(DBDataPyPgSQL._pg_query): Zohlednìna pøedchozí zmìna; nový
	argument `group_update'.
	(_DBConnectionPool.get): Nový argument `data'.
	(DBDataPyPgSQL._pypg_get_connection): Zohlednìna pøedchozí zmìna.

2002-10-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/application.py (set_status): Loguj na úrovni DEBUG.

	* lib/form/dualform.py (SideBrowseDualForm._SELECTION_TICK): Nová
	konstanta.
	(SideBrowseDualForm._create_side_form): Nový atribut
	`_selection_candidate'.  Registruj idle callback.
	(SideBrowseDualForm._on_selection): Neprovádìj selekci, pouze ulo¾
	parametry.
	(SideBrowseDualForm._do_selection): Nová metoda.
	(SideBrowseDualForm._on_idle): Nová metoda.
	(DualForm._select_form): Nový argument `force'.

2002-10-11  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dialog.py: Importuj v¹e z `application'.

	* lib/form/list.py (List.__init__): Pøidán assert na typ argumentu
	`select_row'.
	(List.__init__): Assert zu¹en... 
	(List.__init__, List._select_cell_command): Namísto `self._position'
	pou¾ívej `self._current_row()' pøi volání `set_status()'.

	* lib/form/inputfield.py (resolve): Datový typ `lib.data.Number'
	mapuj na tøídu `NumericField'.
	(InputField): Nech» je potomkem `object'.
	(TextField._text_control_style): Nová metoda.
	(TextField._create_text_control): Vyu¾ívej ji.
	(TextField._create_text_control): Nava¾ událost
	`wx.EVT_TEXT_MAXLEN' na metodu `self._on_maxlen()'.
	(TextField._on_maxlen): Nová metoda.
	(NumericField): Nová tøída.

	* lib/form/dualform.py (SideBrowseDualForm._create_side_form)
	(BrowseDualForm._create_main_form)
	(DescriptiveDualForm._create_main_form): Nepøedávej konstruktoru
	`SideBrowseForm' klíèový argument `select_row'.

2002-10-10  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/search.py (SFDialog._selected_condition): Pro zobrazení
	dialogu vyu¾ívej funkce `dialog()'.

	* lib/form/screen.py (KeyHandler.on_key_down): Pro zobrazení
	dialogu vyu¾ívej funkce `dialog()'.
	(StatusBar.message): Nepøedávej lokální promìnné jako klíèové
	argumenty lambda funkci.

	* lib/form/list.py (_DBOP): Zru¹eno.
	(List._ListTable._get_row, List._ListTable.rewind)
	(List._create_grid, List._on_edit, List._on_delete_line)
	(List._on_line_commit, List.select_row)
	(BrowseForm._on_edit_record): Namísto `_DBOP' vyu¾ívej pøímo
	`db_operation' (a nepøedávej zru¹ený argument `parent').
	(List.__init__): Inicializuj atribut `_edit_popup_menu' voláním
	metody `_create_edit_popup_menu()'.
	(List._create_edit_popup_menu): Nová metoda.
	(List._current_key, List._switch_sorting, List._finish_editing)
	(List._on_search, List._on_search, List._on_filter)
	(List._on_edit, List._on_line_commit, List._on_cell_commit)
	(List.exit_check): Pro zobrazení dialogu vyu¾ívej funkce
	`dialog()'.
	(List._on_label_right): Netestuj verzi wxWindows.
	(List._on_popup_menu): Pokud jsme v editaci, zobraz
	`self._edit_popup_menu'.  Netestuj verzi wxWindows.
	(List._select_cell_command): Volej `set_status()'.
	(List._on_delete_line): Funkci `delete_record()' nepøedávej
	argument `parent'.
	(List._on_delete_line): Namísto `Application.message()' volej
	funkci `message()'.
	(List._on_line_commit): Volej `PresentedRow.check()' a v pøípadì
	chyby pøejdi na políèko, kde k chybì do¹lo.
	(List._on_line_commit): Namísto `Application.message()' volej
	funkci `message()'.
	(List.select_row.find): Nepøedávej lokální promìnné jako klíèové
	argumenty.
	(ListForm.status_fields): Nová metoda.
	(List.__init__): Zobraz pozici voláním `set_status()'.
	(ListForm.status_fields): Pøidáno TODO.

	* lib/form/inputfield.py (InputField.validate)
	(DateField._on_invoke_selection): Pro zobrazení dialogu vyu¾ívej
	funkce `dialog()'.

	* lib/form/form.py (_DBOP): Zru¹eno.
	(Form.status_fields): Nová metoda.
	(Form._create_data_object, EditForm._lock, EditForm._unlock)
	(EditForm._edit_insert, EditForm._edit_update)
	(EditForm._edit_delete, EditForm._find_row)
	(BrowsableShowForm._on_next_record)
	(BrowsableShowForm._on_set_row): Namísto `_DBOP' vyu¾ívej pøímo
	`db_operation' (a nepøedávej zru¹ený argument `parent').
	(EditForm._lock, EditForm._edit_update, EditForm._find_row)
	(EditForm.exit_check, BrowsableShowForm._sf_dialog)
	(BrowsableShowForm._on_search, BrowsableShowForm._on_search)
	(BrowsableShowForm._on_select_filter)
	(BrowsableShowForm._on_sort_column): Pro zobrazení dialogu
	vyu¾ívej funkce `dialog()'.
	(EditForm._edit_delete): Funkci `delete_record()' nepøedávej
	argument `parent'.
	(BrowsableShowForm._on_set_row.get_it): Nepøedávej lokální
	promìnné jako klíèové argumenty.
	(BrowsableShowForm._sfs_columns): Seznam sloupcù pro volání
	`sfs_columns' mapuj na seznam jejich specifikací.
	(BrowsableShowForm._on_search): Vyhledávacímu dialogu nepøedávej
	argument `direction'.

	* lib/form/event.py (top_level_exception): Pro zobrazení dialogu
	vyu¾ívej funkce	`dialog()'.
	
	* lib/form/dialog.py (GenericDialog.run): Neumís»uj okno na
	framestack aplikace, to a» dìlá aplikace sama.  Pouze vytvoø a
	spus» dialog.
	(db_operation): Zru¹en argument `parent'.  Vyu¾ívej funkce
	`dialog()'.
	(delete_record): Zru¹en argument `parent'.  Vyu¾ívej funkce
	`dialog()'.

	* lib/form/application.py (dialog): Nech» první argument mù¾e být
	i instance, ne jen tøída dialogu.  Dialog pøídávej na framestack,
	namísto pouhého spu¹tìní metody `run()'.
	(Application.message): Zru¹eno (nahrazeno `set_status()').
	(Application.set_status): Nová metoda.
	(message): Vyu¾ívej `Application.set_status()'.
	(set_status): Nová funkce.
	(dialog): Nová funkce.

2002-10-08  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (Form._create_view_spec): Na `ViewSpec'
	se odkazuj pøímo, ne pøes `spec.ViewSpec'.
	(Form._create_data_object): Získání datové specifikace neprovádìj
	øes `_DBOP'.

	* lib/form/dualform.py (DualForm._create_view_spec): Na `DualSpec'
	se odkazuj pøímo, ne pøes `spec.DualSpec'.

	* lib/presentation/_test.py (PresentedRow.check_callback): Nový test.

	* lib/presentation/field.py (PresentedRow._mark_dependent_dirty):
	Nová metoda (rekurzivní).
	(PresentedRow.__setitem__): Vyu¾ívej ji.
	(PresentedRow._invoke_callbacks): Seznam klíèù sestav je¹tì pøed
	iterací pomocí `filter()'.
	(Computer.__init__): Aktualizace dokumentaèního øetìzce.
	(FieldSpec.__init__): Aktualizace dokumentaèního øetìzce.

	* lib/form/inputfield.py (InputField.__init__): Inicializuj
	atribut `_is_changed'.
	(InputField._on_change): Argument `notify' zru¹en, argument
	`event', nech» je povinný.  Namísto validace a volání callbacku
	`CALL_FIELD_CHANGE' pouze nastav pøíznak `_is_changed'.
	`event.Skip()' volej nepodmínìnì.
	(InputField.init): Namísto `self._on_change()' volej pouze
	`self._on_change_hook()'.
	(InputField._on_idle): Pokud je nastaven pøíznak `_is_changed',
	proveï validaci a pøípadnì volej callback `CALL_FIELD_CHANGE'.
	(CheckBoxField._create_controls): Kosmetická úprava.
	(ChoiceField._create_controls): Kosmetická úprava.
	(RadioBoxField._create_controls): Kosmetická úprava.
	(ListBoxField._create_controls): Kosmetická úprava.

2002-10-09  Milan Zamazal  <pdm@brailcom.org>

	* lib/remote/data.py (_RemoteWrapper._cached_method): Nová metoda.
	(_RemoteWrapper._CACHEABLE_METHODS): Nová konstanta.
	(_RemoteWrapper.__getattr__): Zohledòuj cachování vybraných metod.
	(RemoteData._CACHEABLE_METHODS): Nová konstanta.

	* lib/data/types_.py (Type.__getattr__): Pøed ulo¾ením nové
	instance typu na ni zavolej metodu `_complete'.
	(Type._complete): Nová metoda.
	(Codebook.__init): Pøejmenováno na `_complete' a doplnìno
	podmínìné provedení.
	(Codebook.__getattr__): Zohlednìna pøedchozí zmìna.  _making_type
	zále¾itosti pøesunuty do `_complete'.

	* lib/remote/server.py (_PyroDataFactory.create)
	(_PyroData._call_method, _PyroResolver.get): Loguj do Pyro logu.

	* lib/form/event.py (wx_callback.process_event): Nech»
	wxGridEventPtr nema¾e status bar.

	* lib/data/dbdata.py (DBDataDefaultClass.__init__): Zohledòuj
	config.dblistener.

	* lib/util/configuration.py (Configuration._Option_dblisten):
	Nová konfiguraèní volba.
	* config/config.py: Pøegenerováno.

2002-10-08  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py: Pøepracováno na importy modulù `grid' a `wx'.
	* lib/form/search.py: Nápodobnì.
	* lib/form/screen.py: Nápodobnì.
	* lib/form/output.py: Nápodobnì.
	* lib/form/inputfield.py: Nápodobnì.
	* lib/form/form.py: Nápodobnì.
	* lib/form/event.py: Nápodobnì.
	* lib/form/dualform.py: Nápodobnì.
	* lib/form/dialog.py: Nápodobnì.
	* lib/form/application.py: Nápodobnì.
	* lib/form/_test.py: Nápodobnì.

	* lib/form/grid.py: Nový modul.
	* lib/form/wx.py: Nový modul.

	* lib/presentation/field.py (PresentedRow.format): O¹etøuj pøípad,
	kdy není dostupná hodnota sloupce.

2002-10-05  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/__init__.py: O¹etøuj pøípad, kdy není dostupno
	sys.argv.

2002-10-08  Tomas Cerha  <cerha@brailcom.org>

	* lib/presentation/field.py (FieldSpec.__init__): Nech» je
	argument `label' nepovinný.  Update a doplnìní dokumentaèního
	øetìzce.
	(FieldSpec.default): Update dokumentaèního øetìzce.
	(PresentedRow.__init__): Update a doplnìní dokumentaèního øetìzce.
	Nakonec volej `self._invoke_callbacks()'.
	(PresentedRow._process_fieldspec): Inicializuj `self._index'.  Do
	`self._columns' pøiøazuj tuple.
	(PresentedRow._init_row.genval): Nepøedávej lokální promìnné jako
	klíèové argumenty.  Políèkùm s prefill a default nuluj pøíznak
	`_dirty'.  Vyu¾ívej `self._index'.  Nenastavuj `_dirty' pøíznaky
	závislých políèek pøi výpoètu default.
	(PresentedRow._init_row): Pøed generováním hodnot nového øádku
	nastav v¹echny `_dirty' pøíznaky.  Pøi inicializaci ze stávajícího
	øádku nastavuj v¹echny `_dirty' pøíznaky, podle toho, zda jsou v
	daném øádku, nebo ne.
	(PresentedRow._key2col): Vyu¾ívej `self._index'.
	(PresentedRow.__setitem__): Pøidán assert na `value'.  Pøidán
	komentáø.  Vyu¾ívej metodu `_invoke_callbacks()'.
	(PresentedRow._invoke_callbacks): Nová metoda.
	(PresentedRow.set_row): Volej `_invoke_callbacks()'.
	(PresentedRow.has_key): Vyu¾ívej `self._index'.
	(PresentedRow.original_row): Doplnìní dokumentaèního øetìzce.

2002-10-07  Tomas Cerha  <cerha@brailcom.org>

	* lib/presentation/field.py (PresentedRow._init_row): Pøíznak
	`_dirty' nuluj pouze pokus argument `row' nebyl `None'.

2002-10-04  Tomas Cerha  <cerha@brailcom.org>

	* lib/presentation/field.py (FieldSpec.__init__): Update
	dokumentace.  Argument `computer' ji¾ nemú¾e být funkcí -- upraven
	assert.
	(FieldSpec.update_computer): Zru¹eno.
	(PresentedRow.__init__): Zru¹en argument `computer_data' a
	odpovídající neveøejný atribut.
	(PresentedRow._process_fieldspec): Zru¹ena èást zabývající se
	vytvoøením computeru voláním funkce za pomoci `_computer_data'.
	(PresentedRow.__getitem__): Testuj jestli existuje
	`column.computer'.  Metodì `self._needs_recomputation()' pøedávej
	pouze id, ne instanci `_Column'.  Neuva¾uj mo¾nost, ¾e by
	self._row bylo None.
	(PresentedRow.__setitem__): Oprava indentace
	(PresentedRow._needs_recomputation): Argumentem nech» je id, ne
	instance `_Column'.  Netestuj `self._row' na None.
	(PresentedRow.format): Testuj jestli existuje `column.computer'.
	Metodì `self._needs_recomputation()' pøedávej pouze id, ne
	instanci `_Column'.  Neuva¾uj mo¾nost, ¾e by self._row bylo None.
	(PresentedRow.has_key): Nová metoda.
	(PresentedRow._process_fieldspec): Zru¹en argument `row'. Nastav
	pøíznak `_dirty' v¹em políèkùm, bez ohledu na pøítomnost v `row'.
	(PresentedRow._init_row): Vynuluj v¹em políèkùm pøítomným v `row'
	pøíznak `_dirty'.

	* lib/form/list.py: Importuj `PresentedRow'.
	(List._ListTable._CurrentRow.__init__): Namísto
	`lib.presentation.PresentedRow' pou¾ívej pouze `PresentedRow'.
	(List._ListTable._EditedRow.__init__): Zru¹en argument
	`computer_data'.  Nový argument `prefill'.  Namísto
	`lib.presentation.PresentedRow' pou¾ívej pouze `PresentedRow'.
	Konstruktoru `PresentedRow' pøedávej `prefill' namísto
	`computer_data'.
	(List._ListTable.__init__): Zru¹en argument `computer_data'.  Nový
	argument `prefill'.  Stejnì tak pøíslu¹né neveøejné atributy.
	Konstruktoru `_EditedRow' a `PresentedRow' pøedávej `prefill'
	namísto `computer_data'.
	(List._ListTable.edit_row): Konstruktoru `_EditedRow' a
	`PresentedRow' pøedávej `prefill' namísto `computer_data'.
	(List._ListTable.editing): Konstruktoru `_EditedRow' pøedávej
	`prefill' namísto `computer_data'.
	(List._ListTable.editing): Namísto `lib.presentation.PresentedRow'
	pou¾ívej pouze `PresentedRow'.
	(List.__init__): Zru¹en atribut `_computer_data'.  Nový atribut
	`_prefill'.
	(List._create_grid): Konstruktoru `_ListTable' pøedávej `prefill'
	namísto `computer_data'.
	(List.select_row): Callbackové funkci pøedávej pøímo instanci
	`PresentedRow', namísto jejího datového row.
	(List.refresh): Zru¹en paramater `computer_data'.
	(List.prefill): Nová metoda.
	(List.set_prefill): Nová metoda.
	(BrowseForm._on_new_record): Nastavuj vytváøenému formuláøi `prefill'.
	(FilteredBrowseForm.filter): Nenastavuj reset pro `computer_data'
	pøi volání `self.refresh()'.

	* lib/form/form.py (EditForm._edit_update): Nepøenastavuj zbyteènì
	hodnoty v PresentedRow.  Netestuj jestli `self._row.row()'
	skuteènì nìco vrátí (to by mìl v¾dy).  Kosmetické úpravy.
	(EditForm.set_row): Nová metoda.
	(EditForm._set_row): Vyu¾ívej ji.
	(EditForm._edit_insert): Nepøenastavuj zbyteènì
	hodnoty v PresentedRow. 

	* lib/form/dualform.py (SideBrowseDualForm._on_selection): Volej
	`self._side_form.set_prefill()'.
	(DescriptiveDualForm._on_main_selection) 
	(DescriptiveDualForm._on_side_selection): Kosmetické úpravy.

2002-10-03  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (PostscriptViewer): Podìï wx class jen
	jsme-li v X.

	* lib/form/list.py (_InputFieldCellEditor, List, List._ListTable):
	Podìï wx class jen jsme-li v X.
	(List._ListTable._TYPE_MAPPING): Nastaveno na None.
	(List._ListTable.__init__): Inicializuj vý¹e uvedenou konstantu.
	(ListForm._TITLE_BACKGROUND_COLOR): Pou¾ívej na¹e barvy, ne pøímo
	wxColour.

	* lib/form/inputfield.py (_TextValidator): Podìï wx class jen
	jsme-li v X.
	
	* lib/form/form.py (Form): Podìï wx class jen
	jsme-li v X.
	(EditForm._navigate): Nech» `dir' je TRUE místo wx.TRUE.

	* lib/form/screen.py (WxKey._TRANS_TABLE, WxKey._RTRANS_TABLE):
	Nastaveno na None.
	(WxKey._make_dictionary): Pøidán argument `self'.
	(WxKey.__init__): Inicializuje vý¹e uvedené konstanty.
	(WxColor, MenuBar, ButtonBar, StatusBar): Podìï wx class jen
	jsme-li v X.

	* lib/form/search.py: Importuj wxPython podmínìnì, jen v X.
	* lib/form/screen.py: Nápodobnì.
	* lib/form/output.py: Nápodobnì.
	* lib/form/list.py: Nápodobnì.
	* lib/form/inputfield.py: Nápodobnì.
	* lib/form/form.py: Nápodobnì.
	* lib/form/event.py: Nápodobnì.
	* lib/form/dualform.py: Nápodobnì.
	* lib/form/dialog.py: Nápodobnì.
	* lib/form/application.py: Nápodobnì.
	* lib/form/_test.py: Nápodobnì.

	* lib/util/util.py (in_x): Nová funkce.

2002-10-03  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dialog.py (RunFormDialog): Nová tøída.

	* lib/form/application.py (Application.on_command): Pokud pøíkaz
	není zpracován ¾ádným oknem a má definován handler, zavolej
	handler.

2002-10-04  Pavel Hanak  <hanak@brailcom.cz>

	* lib/data/types_.py (Type._TypeTable.get_instance): Vymazány
	zapomenuté zakomentované printy.

2002-10-03  Pavel Hanak  <hanak@brailcom.cz>

	* lib/presentation/field.py (PresentedRow.__setitem__): Nastavuj
	políèku hodnotu, jen do¹lo-li ke zmìnì.
	(PresentedRow._init_row.genval): U políèek s default nastav pøi
	vlo¾ení default hodnoty závislým políèkùm pøíznak 'dirty'.

2002-10-02  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/event.py (wx_callback.process_event): Pøidána logovací
	hlá¹ka.

	* lib/form/search.py (SFDialog._selected_condition): Opraveno
	chování, kdy¾ je `value' None.

	* ebas-server (_usage): Pøidáno --profile.
	(go): Pøidána podpora pro profilování.
	(_PROFILE, _PROFILE_RESULTS): Nové konstanty.
	(_run_server): Nová funkce.

	* lib/remote/server.py (run_server): Není-li config.host
	nastaveno, reportuj to.
	(run_server): Ignoruj KeyboardInterrupt v `request_loop'.

	* lib/form/command.py (Command.__init__): Nový argument
	`access_groups' a atribut `_access_groups'.
	(Command.access_groups): Nová metoda.

	* lib/form/screen.py (MItem.__init__): Nech» argument `command' je
	povinný.

2002-10-02  Tomas Cerha  <cerha@brailcom.org>

	* lib/output/formatter.py (LoutFormatter._format_data_table):
	Zohledni nové API tøídy `ViewSpec'.
	(LoutFormatter._format_data_table): `KeyError' pøi pokusu o
	získání tøídìní ze `self._data_specs' o¹etøuj pøiøazením prázdného
	tuplu do promìnné `sorting', namísto pouhého `pass'.  Stejnì tak
	pro `condition' pøiøazuj `None'.

	* lib/form/dualform.py (SideBrowseDualForm._create_side_form):
	Konstruktoru tøídy `SideBrowseForm' pøedávej
	`sibling_binding_column' a `binding_column'.
	(BrowseDualForm): Update dokumentace.
	(ShowDualForm): Update dokumentace.

	* lib/form/application.py (Application.run_form): Pøidány asserty
	na argumenty.

	* lib/form/form.py (Form.name): Metoda zru¹ena.
	(Form._on_leave_form): Namísto metody `name()' pou¾ij rovnou
	atribut `self._name'.
	(Form.run): V logogvací hlá¹ce vypisuj `str(self)', namísto
	`self._view'.

	* lib/form/list.py (SideBrowseForm.__init__): Nové argumenty
	`sibling_binding_column' a `binding_column'.  Filtrovací podmínku
	nehledej ve specifikaci, ale vytváøej sám jako ekvivalenci
	vazebních sloupcù.  Dokumentace.
	(BrowseForm.on_command): Vyvolávej callback `CALL_EDIT_RECORD'
	pouze pokud je vybrán øádek (`self._list.current_key()' není `None').

	* lib/presentation/field.py (PresentedRow._process_fieldspec):
	Namísto neustálého volání `f.id()' vytvoø promìnnou `id'.
	(PresentedRow.__init__): Pøedávej `row' metodì
	`self._process_fieldspec()'.  
	(PresentedRow._process_fieldspec): Nový argument `row'.  Pokud row
	obsahuje hodnotu poèítaného políèka, inicializuj pøíznak `_dirty'
	na `FALSE'.

2002-10-02  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/list.py (List._on_select_cell): Pokus o o¹etøení chyby
	pøi stisku PageUp na øádku v rozmezí 2 a¾ <poslední viditelný>.

2002-10-01  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/search.py (SFDialog._on_suck): Metodì SetValue pøedávej
	exportovanou hodnotu.

2002-10-01  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Codebook.__getattr__): Volej metodu pøedka.
	(Codebook.__init__): Nastavuj `_fetched'.

	* lib/form/search.py (SFDialog._OPERATORS): Nový atribut.
	(SFDialog._create_content): Pøidána podpora pro OR.
	(SFDialog._on_add): Nápodobnì.
	(SFDialog._selected_condition): Nápodobnì.
	(SFDialog._save_values): Nový argument `logical_selection'.
	(SFDialog.__init__): Nový atribut `_logical_selectors'.

2002-10-01  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (ListField._create_controls): Oprava:
	respektuj nové API tøídy `ViewSpec'.

	* lib/presentation/field.py (PresentedRow._compute): Pokud políèko
	existuje v datovém øádku, ulo¾ vypoètenou hodnotu.

2002-09-27  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/dualform.py (DualForm.__init__): Argumenty `main_name'
	a `side_name' nahrazeny jediným `name' (jméno pro `DualSpec').
	(DualForm.__init__): Metodám `self._create_main_form()' a
	`self._create_side_form()' nepøedávej argument `name', a» si ho
	zjistí samy...  Neukládej `self._side_name'.
	(DualForm._create_view_spec): Nová metoda.
	(DualForm._create_data_object): Nová metoda.
	(DualForm._create_main_form): Zru¹en argument `name'.
	(DualForm._create_side_form): Zru¹en argument `name'.
	(DualForm.name): Zru¹eno.
	(DualForm.title): Nová metoda.
	(SideBrowseDualForm._create_side_form): Namísto zru¹eného
	argumentu `name' pou¾ívej `self._view.side_name()'.
	(BrowseDualForm._create_main_form): Namísto zru¹eného argumentu
	`name' pou¾ívej `self._view.main_name()'.
	(BrowseDualForm._on_show_record): Zohlednìna zmìna pøi volání
	`Application.run_form()'.
	(ShowDualForm.__init__): Argumenty po¾er do `*args' a `**kwargs' a
	dokumentuj pouze argumenty odli¹né pro tuto tøídu (argumenty
	`main_name' a `side_name' nahrazeny jendiným `name').  
	(ShowDualForm._create_main_form): Namísto zru¹eného
	argumentu `name' pou¾ívej `self._view.main_name()'.
	(DescriptiveDualForm.__init__): Argumenty po¾er do `*args' a
	`**kwargs' a dokumentuj pouze argumenty odli¹né pro tuto tøídu.
	Nepøedávej argument `side_name'.
	(DescriptiveDualForm._create_view_spec): Nová metoda.
	(DescriptiveDualForm._create_main_form): Namísto zru¹eného
	argumentu `name' pou¾ívej `self._name'.
	(DescriptiveDualForm._create_side_form): Namísto zru¹eného
	argumentu `name' pou¾ívej `self._name'. 

	* lib/form/form.py (Form._create_view_spec): Nová metoda.
	(Form._create_data_object): Nová metoda.
	(Form.__init__): Získávání specifikací a vytváøení datového
	objektu pøesunuto do nových metod.

	* lib/form/spec.py (DualSpec): Nová specifikaèní tøída.

	* lib/form/list.py (List._on_line_commit): Jako `the_row' pou¾ívej
	`PresentedRow'.  Pøi insertu vytahuj z øádku instanci `Value', ne
	formátovaný øetìzec.
	(BrowseForm._on_edit_record): Zohlednìna zmìna pøi volání
	`Application.run_form()'.
	(BrowseForm._on_edit_record): Zohlednìna zmìna pøi volání
	`Application.run_form()'.
	(BrowseForm._on_show_record): Zohlednìna zmìna pøi volání
	`Application.run_form()'.
	(BrowseForm._on_descr_record): Zohlednìna zmìna pøi volání
	`Application.run_form()'.
	(BrowseForm._on_print_): Zohlednìna zmìna pøi volání
	`Application.run_form()'.

2002-09-26  Tomas Cerha  <cerha@brailcom.org>

	* lib/presentation/field.py (Computer.__init__): Vy¾aduj povinnì
	specifikaci závislostí.  Podpora pro zápis závislostí v
	dokumentaèním øetìzci poèítací funkce.
	(PresentedRow): Úprava docstringu.
	(PresentedRow._process_fieldspec): Inicializuj atributy
	`_dependent' a '_dirty'.  Pro poèítaná políèka inicializuj seznam
	závislých políèek a pøíznak '_dirty' na TRUE.
	(_recompute): Zru¹eno.
	(PresentedRow.__getitem__): Pokud je tøeba, vypoèti hodnotu políèka.
	(PresentedRow.__setitem__): V¹em závislým políèkùm nastav pøíznak
	`_dirty' a volej pro nì `_change_callback'.
	(PresentedRow._needs_recomputation): Nová metoda.
	(PresentedRow._compute): Nová metoda.
	(PresentedRow.format): Pokud je tøeba, vypoèti hodnotu políèka.
	(Computer.__init__): Pro jistotu opìt zru¹eno (s ohledem na zdraví
	Milana Zamazala :-)

2002-09-25  Miroslav Macek  <macek@asellus.cz>

	* config/config_isas.py (): Úprava konfigurace pro naètení nového loga.
	* icons/logo.bmp (): Vlastní logo.

2002-09-25  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EditForm._on_row_change): Pokud není políèko
	daného id ve formuláøi nalezeno, nedìlej nic.

	* lib/form/list.py (List._ListTable.GetAttr): Pou¾ívej cache pøi
	vytahování øádku.

2002-09-25  Pavel Hanák  <hanak@brailcom.cz>

	* lib/form/list.py (List._ListTable.GetValue): Metodì
	`PresentedRow.format' pøedávej místo poøadí `id' sloupce.

2002-09-24  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/screen.py (MItem._used_titles): Nový tøídní atribut.
	(MItem.__init__): Pøidán hack pro unikátní `title' pomocí pøidání
	mezer.

	* lib/form/list.py (List._ListTable.__init__): Nový argument
	`fields' a atribut `_fields'.  Pøi volání konstruktoru
	`_EditedRow' pøedávej 'fields', namísto `columns'.  Pøi volání
	konstruktoru `PresentedRow' takté¾.
	(List._ListTable.edit_row): Pøi volání konstruktoru `_EditedRow'
	pøedávej 'fields', namísto `columns'.
	(List.__init__): Nový argument `fields' a atribut `_fields'.
	(List._create_grid): Konstruktoru `_ListTable' pøedávej
	`self._fields'.
	(ListForm.__init__): Konstruktoru `List' pøedávej
	`self._view.fields()'.

2002-09-23  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (GroupSpec): Update dokumentace.
	(GroupSpec.__init__): Update dokumentace.

	* lib/form/form.py (char2px): Pøesunuto do `screen'.
	(dlg2px): Pøesunuto do `screen'.
	(_orientation2wx): Pøesunuto do `screen'.
	(_border_style2wx): Pøesunuto do `screen'.

	* lib/form/screen.py (char2px): Nová funkce.
	(dlg2px): Nová funkce.
	(orientation2wx): Nová funkce.
	(border_style2wx): Nová funkce.

2002-09-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Codebook.__init__): Zredukováno.
	(Codebook.__init): Nová metoda.
	(Codebook.__getattr__): Nová metoda.

	* lib/data/data.py (DataFactory.__cmp__, DataFactory.__hash__):
	Zru¹eno.

2002-09-20  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/spec.py (GroupSpec.__init__): Do aserce doplnìn report
	`item'.
	(ViewSpec._recourse_group): Nápodobnì.
	(ViewSpec.__init__): Nápodobnì.

	* lib/data/dbdata.py (DBColumnBinding.__str__): Nová metoda.
	(DBConnection.__cmp__): Vyu¾ívej funkci `compare_attr'.
	(DBConnection.__hash__): Vyu¾ívej funkci `hash_attr'.
	(DBColumnBinding.__cmp__, DBColumnBinding.__hash__): Nové metody.

	* lib/util/util.py (deepstr): Nová funkce.
	(compare_attr): Nová funkce.

	* lib/data/data.py (DataFactory.__str__): Nová metoda.
	(DataFactory.__cmp__, DataFactory.__hash__): Nové metody.
	(DataFactory.__init__): Nový atribut `_kwargs_hashable'.

	* lib/output/formatter.py (LoutFormatter._format_data_table) 
	(LoutFormatter._format_data_item): Zohlednìny zmìny
	v lib.presentation.PresentedRow.

	* lib/presentation/field.py (FieldStyle): Odstranìno v¹e ohlednì
	blikání.

2002-09-20  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EditForm._create_group): Ze `self._view'
	vytáhni specifikaci políèka podle identifikátoru.

	* lib/form/list.py (List._ListTable._make_attr): Vytváøej font o
	velikosti 12 bodù.
	(ListForm.__init__): Seznam specifikací sloupcù vytváøej mapováním
	ze seznamu identifikátorù.
	(ListForm._columns): Nyní vrací sekvenci identifikátorù sloupcù
	namísto instancí `FieldSpec' (zdokumentováno).
	(CodeBook._columns): Nyní vrací sekvenci identifikátorù sloupcù
	namísto instancí `FieldSpec' (zdokumentováno).

	* lib/form/spec.py (GroupSpec.__init__): Assert na øetìzec namísto
	FieldSpec.
	(ViewSpec): Úprava docstringu.
	(ViewSpec.__init__): Nový argument 'fields'.  Vytváøej slovník
	specifikací políèek klíèovaný podle id.  Pøi procházení layoutu a
	sloupcù kontroluj pøítomnost id políèek ve slovníku namísto
	assertu na instanci `FieldSpec'.  Pokud je `layout' nebo `columns'
	None, vytváøej implicitní.
	(ViewSpec.fields): Nepøevádìj `self._fields' na tuple (provedeno v
	konstruktoru).  Nyní vrací sekvenci identifikátorù sloupcù namísto
	instancí `FieldSpec'.
	(ViewSpec.field): Nová metoda.

	* lib/form/screen.py (_WX_COLORS): Doplnìny pøevody pro nové
	barevné konstanty.

	* lib/presentation/field.py (Color): Nové barevné konstanty.

2002-09-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_get_table_type)
	(PostgreSQLStandardBindingHandler._pdbb_get_type)
	(DBPyPgFunction._db_bindings_to_column_spec.type_instance):
	Pøidána podpora pro typ lib.data.Serial.

	* lib/form/list.py (List._ListTable._Column.__init__): Nový
	argument a atribut `style'.
	(List._ListTable.__init__): Pøedávej do `_Column' styl.
	(List._ListTable.GetAttr): Pøepsáno.
	(List._ListTable.__init__): Nový atribut `_column_styles'.
	(List._ListTable._make_attr): Nová metoda.

2002-09-19  Tomas Cerha  <cerha@brailcom.org>

	* lib/presentation/field.py (PresentedRow.__init__): Nakonec voej
	v¾dy `self._recompute()'.
	(PresentedRow._init_row): nevolej `self._recompute()'.
	(PresentedRow._recompute): Zru¹en argument 'row'.  Namísto
	sekvence `changed' pou¾it jako argument jediný identifikátor
	sloupce `changed_id'.  Pøi volání pøepoèítávací funkce pøedávej
	jako argument `self' namísto `row'.
	(PresentedRow.__getitem__): Vracej instanci value, namísto
	zformátované exportované hodnoty.
	(PresentedRow.__setitem__): Respektuj novou podobu argumentù
	metody `_recompute()'.
	(PresentedRow.val): Zru¹eno.
	(PresentedRow.format): Nová metoda.

	* lib/form/list.py (List._ListTable.GetValue): Pou¾ívej
	`PresentedRow.format()'.
	(List._on_line_commit): Pou¾ívej `PresentedRow.format()'.

	* lib/form/form.py (EditForm._set_row): Pou¾ívej
	`PresentedRow.format()'.
	(EditForm._on_row_change): Pou¾ívej `PresentedRow.format()'.

2002-09-18  Milan Zamazal  <pdm@brailcom.org>
	
	* lib/form/screen.py (color2wx): Nová funkce.
	(_WX_COLORS): Nová konstanta.

	* lib/util/util.py (catch): O¹etøuj jen pøechody s `tag'.
	* lib/util/_test.py (NonLocalTransfers.check_it): Pøejmenováno na
	`check_basic'.
	(NonLocalTransfers.check_tags): Nový test.

	* lib/presentation/field.py (Color): Nová tøída.
	(FieldStyle): Nová tøída.
	(FIELD_STYLE_DEFAULT, FIELD_STYLE_EMPHASIS, FIELD_STYLE_WARNING):
	Nové konstanty.
	(FieldSpec.__init__): Nový argument `style' a atribut `_style'.
	(FieldSpec.style): Nová funkce.

	* lib/data/access.py: Sepsán docstring.

	* lib/data/types_.py (Codebook._export): Pøi odkazu na
	neexistující sloupec nenahazuj výjimku a vra» ''.
	(Type.__init__): Nový argument a atribut `_validation_message'.
	(Enumeration.ERRMSG_INVALID_ENUM_VALUE): Zru¹eno.
	(Codebook.ERRMSG_PARTIAL_VALIDATION): Zru¹eno.
	(Integer._validate, Float._validate, String._validate_maxlen)
	(DateTime._validate, Enumeration._validate)
	(Codebook.validate_partial, Sequence._validate): Vyu¾ívej
	`_validation_message'.
	(Float.__init__, String.__init__, Enumeration.__init__) 
	(Boolean.__init__, Codebook.__init__, Sequence.__init__): Pøidán
	argument `**kwargs'.
	(Serial): Nový typ.

2002-09-17  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._create_grid): Místo vyvolání výjimky
	`toplevel' provádìj `throw'.
	* lib/form/form.py (Form.__init__): Pøi neúspìchu vytvoøení
	datového objektu proveï nelokální pøechod.
	* lib/form/application.py (Application.run_form): Odchytávej
	pøechod `form-init-error'.

	* lib/util/util.py (_Throw): Nová tøída.
	(catch, throw): Nové funkce.
	* lib/util/_test.py (NonLocalTransfers): Nová sada testù.

	* lib/data/access.py (RestrictedData.accessible): Nová metoda.

2002-09-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._on_search): Klíèuk argument `direction'.

	* lib/form/event.py (wx_callback.process_event): U¾ivatelské
	události z modálního okna volej bez obalu.

	* lib/form/application.py (Application.top_window): Nová metoda.

2002-09-04  Pavel Hanak  <hanak@brailcom.cz>

	* lib/presentation/field.py (PresentedRow.val): Nová metoda
	(doèasnì -- viz TODO).

2002-09-13  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL.update): Jestli¾e má nový
	øádek nekompletní klíè, doplò jej ze starého øádku.

	* lib/form/application.py (Application.run_form): Zdokumentován
	argument `action'.
	(Application.run_form): Odchytávej a ignoruj výjimku `toplevel'.

	* lib/form/form.py (EditForm._edit_insert, EditForm._edit_update) 
	(EditForm._edit_delete, EditForm._find_row) 
	(BrowsableShowForm._on_next_record): Upraveny argumenty _DBOP.
	(Form.__init__): Upraveny argumenty _DBOP.

	* lib/form/list.py (List._on_delete_line): Místo `db_operation'
	pou¾ij _DBOP.
	(List._on_line_commit, List._ListTable._get_row) 
	(List._ListTable.rewind, List._create_grid) 
	(BrowseForm._on_edit_record): Upraveny argumenty _DBOP.
	(List._create_grid): Pøi databázové chybì se vra».

	* lib/form/dialog.py (db_operation): Zmìnìn význam argumentu
	`operation'.
	(db_operation): O¹etøuj DataAccessException.

	* lib/data/access.py (RestrictedData.__init__): Doplnìn docstring.
	(RestrictedData._check_access_condition.columns): Testuj operátor
	IN.
	(RestrictedData.delete, RestrictedData.update): Testuj i klíè.
	(RestrictedData.row, RestrictedData.fetchone): Nové metody.
	(RestrictedData._check_access_key)
	(RestrictedData._access_filter_row): Nové metody.
	(RestrictedData.insert, RestrictedData.update): Filtruj vracený
	øádek.
	(AccessRights.__init__): Nový atribut `_query_cache'.
	(AccessRights._permitted): Nová metoda.
	(AccessRights.permitted): Pou¾ívej ji a pou¾ívej `_query_cache'.
	(DataAccessException.__init__): Opraveno volání pøedka.  Loguj.
	(RestrictedData._check_access_columns): Pøedávej do
	DataAccessException jméno tabulky a sloupce.
	(RestrictedData._check_access_row): Zru¹eno.
	(RestrictedData.insert, RestrictedData.update) 
	(RestrictedData.update_many): Místo `_check_access_row' volej
	`_access_filter_row'.
	(AccessRights.__init__): Nech» None sekvence je tuple.

2002-09-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql): Pøidána
	podpora pro operátor IN.
	(DBDataPostgreSQL.select): Zjednodu¹eno odchycení chyby.

	* lib/data/data.py (IN): Nový operátor.

2002-09-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/access.py
	(RestrictedData._check_access_condition.columns): O¹etøuj prázdné
	condition args.

2002-09-07  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._ListTable._EditedRow.__init__): Nový
	atribut `orig_row'.
	(List._ListTable.editing): Originální øádek vytahuj
	z edited.orig_row.

2002-09-05  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	V argumentu assert na oids mapuj sloupce pøes `str'.
	(PostgreSQLStandardBindingHandler): Buï potomkem `object'.

	* lib/data/access.py (RestrictedData._check_*): Pøejmenováno na
	`_check_access_*'.
	(RestrictedData.select, RestrictedData.update)
	(RestrictedData.update_many, RestrictedData.delete)
	(RestrictedData.delete_many): Opraveno volání metody pøedka.
	(RestrictedData.search): Opraveno jméno argumentu.

2002-09-03  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataDefaultClass): Buï potomkem
	RestrictedData.
	(DBDataDefaultClass.__init__): Nový argument `access_rights'.
	Nový atribut `_access_current_groups'.
	(DBDataDefaultClass._access_groups): Nová metoda.

	* lib/data/__init__.py: Zmìnìno poøadí importu `access' a `data'.

	* lib/data/data.py (Operator.logical): Nová metoda.

	* lib/data/access.py (AccessRights.__init__): Opraveny chyby
	v konstrukci tabulky.  Práva se nyní sèítají.
	(AccessRights.permitted): Vra» pravdu, je-li mezi povolenými
	skupinami None.
	(RestrictedData._check_delete, RestrictedData._check_row) 
	(RestrictedData._check_sorting, RestrictedData._check_condition):
	Implementováno.
	(RestrictedData._check_columns): Nová metoda.
	(DBAccessException): Pøejmenováno na DataAccessException a je
	potomkem Exception.
	(RestrictedData): Buï potomkem `object'.
	(RestrictedData._groups): Pøejmenováno na `_access_groups'.

2002-09-02  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/__init__.py: Importuj `access'.
	* lib/data/access.py: Nový soubor.

2002-08-31  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/dialog.py (db_operation): Opraveno jméno konfiguraèní
	promìnné `dbconnection'.

	* lib/remote/server.py (_PyroData._check_type_key): Je-li `arg'
	None, nedìlej z nìj tuple.

	* lib/util/configuration.py (Configuration.__setattr__): Atribut
	nastavuj, ne vracej.  Pøednostnì nastavuj volby, ne atributy.
	Volbu nastavuj, ne pøiøazuj.

	* lib/form/form.py (EditForm._edit_insert): Nastavovaná data
	pro¾eò pøes self._row.

2002-08-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (EditForm._edit_update): Nové hodnoty nastavuj
	do prezentaèního øádku, ze kterého a¾ následnì vyzvedej øádek
	datový.

	* lib/presentation/field.py (PresentedRow.row): Nastav øádku typy
	z datového objektu, kde je to mo¾né.

	* lib/data/types_.py (Type.__getattr__): Po updatu z nové typové
	instance nastav pùvodní `_id'.  Opraveny chyby v reportu testu na
	tøídu.

	* lib/form/event.py (wx_callback.process_event): Po vypsání
	top-level výjimky se vra».

2002-08-27  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (_pg_escape): Nová funkce.
	(DBDataPostgreSQL._pg_value.null_or_string, _pypg_new_connection):
	Pou¾ívej ji.
	(DBDataPyPgSQL._pg_query): Loguj SQL pøíkazy.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands): Nový
	atribut `_pdbb_logging_command'.
	(DBDataPyPgSQL._pg_query): Nový argument `backup'.
	(PostgreSQLStandardBindingHandler._pg_update) 
	(PostgreSQLStandardBindingHandler._pg_insert) 
	(PostgreSQLStandardBindingHandler._pg_delete): Volej `_pg_query'
	s argumentem `backup'.

	* lib/util/configuration.py (Configuration._Option_dblogtable):
	Nová konfiguraèní volba.
	* config/config.py: Pøegenerováno.

	* lib/form/application.py (Application._call_current_window):
	Místo self._top_level_exception pou¾ívej `top_level_exception'.

2002-08-26  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/event.py (top_level_exception): Pøesunuté
	Application._top_level_exception.
	(wx_callback.process_event): Odchytávej a reportuj v¹echny
	výjimky.

	* lib/form/application.py (Application._top_level_exception):
	Pøesunuto do event.py.
	(Application.run_form, Application.on_command): Zohlednìna
	pøedchozí zmìna.
	(Application._exit): Ignoruj v¹emo¾né výjimky.

	* lib/remote/data.py (_DataChangesWatcher._watcher): Ignoruj
	výjimky od Pyro.

	* lib/remote/server.py (_PyroDataFactory.create)
	(wrap_data_factory): Pøipojuj objekt anonymnì.
	(_PyroDataFactory._name_counter): Zru¹eno.
	(_data_factory_counter): Zru¹eno.
	(run_server): Zru¹eno pou¾ívání name serveru.  Daemonu explicitnì
	specifikuj jméno stroje.
	(_USE_NAME_SERVER, _GNAME_DATA, _GNAME_DATA_FACTORY): Zru¹eno.
	(_PyroData._check_type_sort): Nech» `arg' smí být jakákoliv
	sekvence.

2002-08-25  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/inputfield.py (CodeBookField._on_invoke_selection):
	Instanci typu vytváøej pøes `make'.

	* lib/remote/server.py (run_server): Zohlednìní zmìn v type
	tables.

	* lib/data/types_.py (Type._TypeTable.get_instance): Pøiøazuj
	typové instanci její `_id'.
	(Type.__cmp__): Pøednostnì porovnávej `_id' instancí.
	(Type.__getstate__, Type.__setstate__, Type.__getattr__): Nové
	metody.
	(Type.__init__): Nové atributy `_id' a `_fetched'.
	(Type.type_table): Nová statická metoda.
	(Type._remote_type_table): Nový atribut.
	(Codebook.make): `data_factory_kwargs' transformuj na tuple jen
	pokud ji¾ není transformováno.
	(Type._remote_type_table_cache): Nový atribut.
	(Type._TypeTable.get): Kontroluj typ argumentu `id'.

2002-08-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Codebook.__init__): Nový atribut `_columns'.
	(Codebook.columns): Pou¾ívej ho, místo vytváøení datového objektu.
	(TransferrableType): Zru¹eno.
	(BasicType): Zru¹eno.
	(Type._TypeTable): Nová tøída.
	(Type._making_type): Nový atribut.
	(Type.make, Type._make): Nové metody.
	(Type.__init__): Pøidán assert na _making_type.
	(Codebook.make): Nová metoda.
	(Type.__setitem__): Zru¹eno.
	(Value.__setstate__): Testuj na Type, ne TransferrableType.

	* lib/data/data.py: Upraveno pro sdílené typy.
	* lib/data/dbdata.py: Upraveno pro sdílené typy.
	(DBConnection.__hash__): Nová metoda.
	* lib/data/_test.py: Upraveno pro sdílené typy.

	* lib/remote/server.py (run_server): Zaveï tabulku typù.
	(_bastionize): Nový argument `allowed_methods'.

	* lib/data/types_.py (Number, String, DateTime, Enumeration) 
	(Sequence): Buï potomkem BasicType.
	(Type.__setitem__): Nová metoda.
	(Value.__setstate__): Typ testuj na TransferrableType.
	(TransferrableType.__getattr__): Importuj pou¾ité moduly a jiné
	opravy chyb.
	(TransferrableType._register): Opraveno chybné roztuplování
	polo¾ky tabulky.
	(TransferrableType._TypeTable): Nová tøída.
	(TransferrableType.enable_type_table): Nech» `_type_table' je
	instancí _TypeTable.
	(TransferrableType._type_table_counter): Zru¹eno.

2002-08-22  Milan Zamazal  <pdm@brailcom.org>
	
	* lib/data/types_.py (BasicType): Nová tøída.

	* lib/remote/server.py (_PyroData._check_type_row): Doplnìna
	chybìjící kvalifikace modulu.

2002-08-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (Data.select_map): Nová metoda.
	* lib/data/_test.py (DBDataDefaultClass.check_select_map): Nový
	test.

2002-08-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_get_type): Pøidáno
	mapování pro `timestamptz'.

2002-08-15  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL.row) 
	(DBDataPostgreSQL.select, DBDataPostgreSQL.fetchone) 
	(DBDataPostgreSQL.search, DBDataPostgreSQL.insert) 
	(DBDataPostgreSQL.update, DBDataPostgreSQL.delete) 
	(DBDataPostgreSQL.delete_many): Opraveno zpracování výjimek pøi
	rollbacku.

	* lib/__init__.py: Importuj nìkteré podmoduly.

2002-08-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/remote/server.py (NAME_TYPE_TABLE): Nová konstanta.

	* lib/data/types_.py (TransferrableType): Nová tøída.
	
2002-08-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (Row.__getstate__, Row.__setstate__): Nové
	metody.

	* lib/remote/server.py (_PyroData._check_type_value): Nová metoda.
	(_PyroData._check_type_value, _PyroData._check_type_row) 
	(_PyroData._check_type_condition): Implementováno.

	* lib/util/util.py (InvalidAccessError): Pøesunuto z lib.remote.

	* lib/data/types_.py (Value.__getstate__, Value.__setstate__):
	Nové metody.
	(Value._init): Nová metoda.
	(Value.__init__): Volej ji.

	* lib/remote/data.py (_RemoteWrapper.__getstate__): Místo
	resetování `_proxy' je pouze patchuj v kopii __dict__.

	* lib/remote/util.py (InvalidAccessError.__init__): Nová metoda.
	(InvalidAccessError): Pøesunuto do lib.util.

2002-08-08  Milan Zamazal  <pdm@brailcom.org>

	* lib/remote/server.py (_PyroDataFactory.create): Pøijímej jako
	klíèovaný argument pouze `dbconnection_spec' a kontroluj typ jeho
	hodnoty.
	(_safe_function): Nová funkce.
	(_PyroData): Zavedeny metody _check_type_*, ve veøejných metodách
	zru¹eny obecné klíèované argumenty a pøidány typové kontroly.

2002-08-07  Milan Zamazal  <pdm@brailcom.org>

	* lib/remote/server.py (_PyroData.timestamp): Nová metoda.
	(_PyroData.__init__): Nový atribut `_timestamp'.
	(_PyroData._call_method): Updatuj `_timestamp'.
	(_PyroData._TIMEOUT): Nový atribut.
	(_PyroData._collection_lock, _PyroData._active_data_objects): Nové
	atribut.
	(_PyroData._collect, _PyroData.register_remote_object): Nová
	metoda.
	(_PyroDataFactory.create): Registruj pøipojený objekt.

2002-08-05  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/configuration.py (Configuration._Option_name_server):
	Pøejmenováno na `_Option_server'.
	* config/config.py: Pøegenerováno.

	* lib/form/list.py (List._ListTable._EditedRow.__init__):
	Zohlednìn pøesun remote kódu.
	(List._ListTable._retrieve_row, List._on_search): Doplnìn klíè
	argumentu `data.skip'.
	* lib/presentation/field.py (PresentedRow.__init__): Zohlednìn
	pøesun remote kódu.
	* lib/form/form.py (BrowsableShowForm._on_search): Doplnìn klíè
	argumentu `data.skip'. 

	* ebas (run_application): Pro jméno resolveru vyu¾ívej konstantu
	z lib.remote.
	(_profile): name-server -> server.

	* lib/data/remote.py: Zru¹eno.
	* lib/data/__init__.py: Neimportuj `remote'.

	* lib/remote/__init__.py: Nový soubor.
	* lib/remote/util.py: Nový soubor.
	* lib/remote/data.py: Nový soubor.
	* lib/remote/server.py: Nový soubor.
	
	* ebas-server: Naprostá vìt¹ina kódu pøesunuta do
	lib.remote.server.
	(_EXIT_OK, _EXIT_USAGE): Nové konstanty.
	(_usage): Nová funkce.
	(_install_gettext): Nová funkce.
	(go): Kontroluj korektnost voleb pøíkazové øádky, instaluj
	gettext.

2002-08-02  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/application.py (Application._top_level_exception):
	Je-li k dispozici Pyro, vypisuj Pyro traceback.

	* ebas-server (_wrap_data_factory, _PyroDataFactory.create):
	`resolver_uri' pøebírej rovnou od `connect'.

	* lib/data/remote.py (_RemoteWrapper.clone_proxy): Nová metoda.
	(_DataChangesWatcher.__init__): Nový atribut `_clones'.
	(_DataChangesWatcher._watcher): Pou¾ívej klonované datové objekty.
	(_DataChangesWatcher.register_callback): Ukládej klony datových
	objektù.
	(_RemoteWrapper): `resolver_uri' -> `uri'.

	* lib/data/data.py (DataFactory.create_shared): Zru¹eno.
	* lib/data/types_.py (Codebook._data): Zohlednìna pøedchozí zmìna.

2002-08-02  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List._on_line_commit): Pro vkládání nového
	záznamu nepou¾ívej pøímo datový `Row', ale sestav nový puze z
	políèek obsa¾ených v 'PresentedRow'.
	(List._on_cell_commit): Doèasnì zakomentováno vyvolání vlo¾ení
	dal¹ího øádku a pøidáno velké TODO.

	* lib/form/form.py (EditForm.init): Pøed nastavením fukusu se
	ujisti, zda `f' není None a pøípadnì doplò první políèko.

	* lib/presentation/field.py (PresentedRow.fields): Nová metoda.

	* lib/form/dualform.py (DescriptiveDualForm.__init__): Argumenty
	vyjmenuj explicitnì.  Do klíèového argumentu `side_name' pro
	konstruktor pøedka v¾dy doplòuj hodnotu svého argumentu `name'.
	(DescriptiveDualForm._create_side_form): `main_name' -> `name',
	`frame_stack' -> `self._frame_stack'.

2002-08-01  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._init_select): Klíèuj argument
	`condition' metody `select'.
	(List._ListTable._retrieve_row): Nápodobnì pro `skip'.
	(List._ListTable._fetch): Nápodobnì pro `fetchone'.

	* ebas-server: sys.argv[0] pøenastavuj vèas.
	(_PyroResolver.get): Kontroluj typy argumentù.
	(_PyroResolver.ALLOWED_METHODS, _PyroDataFactory.ALLOWED_METHODS):
	Nový atribut.
	(_bastionize): Nová funkce.
	(go, _wrap_data_factory): Vyu¾ívej ji.
	(_PyroData): Nová tøída.
	(_PyroDataFactory.create): Kompletnì pøepracováno.
	(_PyroDataFactory._name_counter): Nový atribut.

	* lib/data/remote.py (InvalidAccessError): Nová tøída.
	(_data_changes_watcher): Pøesunuto do tøídy RemoteData.
	(RemoteData.add_callback_on_change): Inicializuj
	`_data_changes_watcher'.
	(RemoteData.__init__): Nová metoda.
	(_RemoteWrapper): Buï potomkem `object'.
	(RemoteData.__getattr__): Nová metoda.

2002-07-31  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/configuration.py (Configuration.__init__): Není-li
	první volba pøíkazové øádky 'ebas', neprocesuj volby.
	* ebas-server: Nastavuj sys.argv[0] na `ebas'.
	* ebas: Nápodobnì.

	* lib/data/remote.py (_data_changes_watcher): Nová promìnná.
	(_DataChangesWatcher): Nová tøída.
	(RemoteData.add_callback_on_change) 
	(RemoteData.remove_callback_on_change): Implementováno.

	* lib/util/util.py (Counter.current): Nová metoda.
	* lib/util/_test.py (Counter.check_it): Testuj i `current'.

	* lib/data/data.py (Data.change_number): Nová metoda.
	(Data.__init__): Nový atribut `_change_number'.
	(Data._call_on_change_callbacks): Zvy¹uj hodnotu `_change_number'.
	* lib/data/_test.py (DBDataNotification): Pøidán test
	`change_number'.

2002-07-31  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EditForm._validate): Vyu¾ívej
	`PresentedRow.check()'.
	(EditForm.changed): Implementováno pomocí zji¹»ování modifikace
	jednotlivých vstupních políèek.
	(EditForm._on_commit_form): Opìt vyu¾ívej `self.changed()'.
	(EditForm.init): Pokud není urèeno `self._focus_field', Zvýrazni
	namísto prvního políèka první *editovatelné* políèko.

	* lib/presentation/field.py (_Column.__init__): Nový argument a
	atribut `check'.
	(PresentedRow._process_fieldspec): Vytváøenému `_Column' pøedávej
	i `f.check()'.
	(PresentedRow.__str__): Namísto stringové reprezentace datového
	row zobraz exportované hodnoty *v¹ech* sloupcù.
	(PresentedRow.check): Nová metoda.

	* lib/form/list.py (List.select_row.set): Pozici kurzoru v gridu
	pøenastavuj pouze pokud ji¾ kurzor v gridu je.

2002-07-30  Pavel Hanak  <hanak@brailcom.cz>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_coalesce): Pro hodnotu
	NULL neprovádìj pøetypování (PostgreSQL to v podmínkách nemá rád).

	* lib/form/search.py (SFDialog._selected_condition): Testuj na
	None i hodnotu instance value.

	* lib/form/list.py (List._ListTable.GetAttr): Pøed získáním
	hodnoty testuj poèet øádkù.

2002-07-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (Data.insert): Vracej dvojici.
	(MemData.insert): Zohlednìna pøedchozí zmìna.
	* lib/data/dbdata.py (DBDataPostgreSQL.update): Úspìch testuj dle
	druhého prvku `result', ne celého `result'.
	(DBDataPostgreSQL.insert): Zohlednìna zmìna lib.data.Data.insert.
	* lib/data/_test.py: Nápodobnì.
	* lib/form/form.py (EditForm._edit_insert): Nápodobnì.
	* lib/form/list.py (List._on_line_commit): Nápodobnì.

	* lib/form/list.py (List._ListTable._EditedRow.__init__): Nech»
	`data' smí být i lib.data.RemoteData.

	* ebas-server (_PyroResolver.get): Cachuj podle `file_name', ne
	`spec_name'.
	
2002-07-30  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField.__init__): Inicializuj atribut
	`self._initialized' na hodnotu FALSE.
	(InputField.init): Nastav `self._initialized' na TRUE.
	(InputField.initialized): Nová metoda.

	* lib/form/form.py (EditForm._on_row_change): Pøenastavuj hodnoty
	v políèkách pouze pokud jsou ji¾ inicializována.

2002-07-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/configuration.py (Configuration.Option.init_value):
	Nový argument `force'.
	(Configuration.Option._compute_init_value): Jestli¾e volba má
	hodnotu, dej jí pøednost pøed implicitní hodnotou.
	(Configuration.__init__): Volej `init_value' s nastaveným `force'.

	* ebas (run_application): Nech» i `name_server' jako prázdný
	string znaèí lokální spu¹tìní.

	* lib/data/data.py (Data.update): Zmìnìna návratová hodnota na
	dvojici.
	(MemData.update): Zohlednìna pøedchozí zmìna.
	* lib/data/_test.py: Nápodobnì.
	* lib/data/dbdata.py (DBDataPostgreSQL.update): Nápodobnì.
	* lib/form/form.py (EditForm._edit_update): Nápodobnì.

	* lib/form/list.py (List.select_row.find): Nenastavuj
	self._table._current_row.
	(List._ListTable.__init__): Místo nastavení `_current_row' volej
	`rewind'.
	(List._ListTable._get_row): Nový argument `autoadjust'.
	(List._ListTable.row, List._ListTable.GetValue): Vyu¾ívej tento
	argument.
	(List._on_line_commit): Zohlednìna zmìna návratové hodnoty
	lib.data.Data.update.

2002-07-30  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/__init__.py (list): Provádìj update globálního
	namespace i pro modul `dualform'.

2002-07-29  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List._ListTable.GetAttr): Odchytávej výjimku
	pøi získávání øádku v prázdné tabulce.
	(FilteredBrowseForm.filter): Nová tøída.
	(BrowseForm.CALL_NEW_RECORD): Nový callback.
	(BrowseForm.__init__): Nastavuj callback `CALL_NEW_RECORD' na
	metodu `self._on_new_record()'.
	(BrowseForm._on_new_record): Vracej výsledek volání
	`appl.run_form()'.
	(BrowseForm.on_command): Pøíkazy `COMMAND_NEW_RECORD' a
	`COMMAND_NEW_RECORD_COPY' neo¹etøuj pøímo voláním metody, ale
	volej callback.
	(SideBrowseForm.__init__): Zmìna poøadí argumentù.  Filtrovací
	podmínku získej ze specifikace zde.  Na konec volej
	`self.filter()' a `self.select_row(0)'.
	(List.select_row.set): Pokud není po nastavení výbìru kurzor na
	aktuálním øádku, posuò jej tam.
	(GetColLabelValue): Zobrazuj rùzný poèet ¹ipeèek podle priority
	tøídìní tohoto sloupce.
	(List._ListTable.GetAttr): Pou¾ívej `self.GetValue()' k získání
	hodnoty.
	(List._switch_sorting): Nový argument `primary'.  Pokud je primary
	pravda, nové tøídìní je pouze podle tohoto sloupce.  Pokud není
	urèen sloupec a `direction' je `SORTING_NONE', zru¹ ve¹keré tøídìní.
	(List._on_label_right): Pøidány polo¾ku menu pro primární tøídìní
	a pro =uplné zru¹ení tøídìní.
	(List._ListTable.GetAttr): Vracej None pokud je po¾adovaný `row' 
	(ListForm.OnSetFocus): Pøed voláním `self._list.SetFocus()' se
	ujisti, ¾e je `self._list' ji¾ vytvoøen.

	* lib/form/dualform.py
	(SideBrowseDualForm._create_side_form._FilteredBrowseForm._formatter):
	Zru¹eno.
	(SideBrowseDualForm._create_side_form): Namísto
	`_FilteredBrowseForm' pou¾ívej `SideBrowseDualForm'.
	(BrowseDualForm): Update dokumentace.
	(DualForm.__init__): Volej metody `_create_main_form()' a
	`_create_side_form()' pouze s argumenty `parent' a `name'.
	(DualForm._create_main_form): Nech» má metoda pouze argumenty
	`parent' a `name'.
	(DualForm._create_side_form): Nech» má metoda pouze argumenty
	`parent' a `name'.
	(SideBrowseDualForm._create_side_form): Nech» má metoda pouze
	argumenty `parent' a `name'.  Èást akcí pøesunuta do
	`SideBrowseForm.__init__()'
	(BrowseDualForm._create_main_form): Nech» má metoda pouze
	argumenty `parent' a `name'.  Nastavuj hlavnímu formuláøi callback
	`CALL_NEW_RECORD' na metodu `self._on_new_record()'.
	(BrowseDualForm._on_new_record): Nová metoda.
	(ShowDualForm._create_main_form): Nech» má metoda pouze argumenty
	`parent' a `name'.
	(DescriptiveDualForm._create_main_form): Nech» má metoda pouze
	argumenty `parent' a `name'.
	(DescriptiveDualForm._create_side_form): Nech» má metoda pouze
	argumenty `parent' a `name'.

	* lib/data/types_.py (String._validate_maxlen): Test neprovádìj,
	pokud je `self._maxlen' None.  Do chybové zprávy vkládej `value',
	ne `string'.

2002-07-26  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (Data._Operator): Pøesunuto na top level.

	* lib/presentation/field.py (PresentedRow.__init__): Nech» `data'
	smí být i instancí lib.data.RemoteData.

	* lib/data/remote.py (RemoteData.add_callback_on_change)
	(RemoteData.remove_callback_on_change): Nové metody, zatím
	neimplementované.
	(_RemoteWrapper.__getstate__): Nová metoda.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_get_type.validate_not_null):
	Pøesunuto na top-level jako `_validate_not_null'.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Pøedávej codebooku specifikaci spojení, ne funkci ji vracející.
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql):
	Data._Operator -> _Operator.

	* ebas (gg.g): Místo `print' pou¾ívej sys.stdout.write.

	* lib/data/types_.py: Kompletnì zru¹eno `not_null'.
	(Type._shared_value_cache_counter): Nech» je instancí
	lib.util.Counter.
	(Type.validate): Pøi ukládání do cache zvedej èítaè.
	(Type._check_constraints): Nová metoda.
	(Type.validate): Pou¾ívej ji.
	(String._check_constraints): Nová metoda.
	(String._validate_maxlen): Pøi chybì Místo vracení nesmyslu
	vyvolej výjimku.
	(String.__init__): Nepøidávej do `constraints' `_validate_maxlen'.

	* ebas-server (_wrap_data_factory): Kromì obalování výsledná data
	factories i vystavuj.
	(_PyroResolver): Neobaluj data_specs, místo toho je pouze cachuj.
	(_GNAME_DATA_SPEC): Zru¹eno.
	(_GNAME_DATA_FACTORY): Nová promìnná.
	(_PyroDataFactory.__init__): Volej konstruktor originální
	DataFactory, ne té obalené.

	* lib/util/_test.py (Counter): Nová sada testù.
	
	* lib/util/configuration.py (Configuration.Option.__init__): Místo
	`Object' pou¾ívej `object'.
	
	* lib/util/util.py (Object): Zru¹eno.
	(Counter): Nová tøída.
	(_mktempdir_counter): Nech» je None.
	(mktempdir): Nech» `_mktempdir_counter' je instancí Counter.

2002-07-26  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (LayoutSpec): Úprava docstringu.
	(ViewSpec.__init__): Argument `title' nech» je povinný a na prvním
	místì.  Argument `codebooks' zru¹en.  Zpùsob zpracování argumentu
	`columns' zmìnìn a zdokumentován.
	(ViewSpec.columns): Namísto klíèového argumentu `codebook'
	pøijímej obecný identifikátor `id'.  Pokud není nalezen seznam
	sloupcú daného id, vracej hlavní seznam s identifikátorem `main'.

	* lib/form/application.py (Application._update_stack_display):
	Vyu¾ívej stringifikace na instanci formuláøe.

	* lib/form/dualform.py
	(SideBrowseDualForm._create_side_form._FilteredBrowseForm._columns):
	Nová metoda.
	(DualForm.name): Nová metoda.

	* lib/form/form.py (Form.__str__): Nová metoda.
	(Form.name): Nová metoda.

	* lib/form/inputfield.py (InputField.__init__): Inicializuj
	atribut `self._want_focus'.
	(InputField._on_idle): Pokud je nastaven `self._want_focus', volej
	`self._set_focus()'.
	(InputField._on_set_focus): Nastavuj pøíznak `self._want_focus' na
	FALSE.
	(InputField.set_focus): Implementuj metodu pouze nastavením
	pøíznaku `self._want_focus'.
	(InputField._set_focus): Nová metoda
	(GenericField.set_focus): Pøejmenováno na `_set_focus'.
	(HiddenField.set_focus): Pøejmenováno na `_set_focus'.

	* lib/form/list.py (List.select_row.set): Po vybrání øádku je¹tì
	volej `grid.MakeCellVisible()'.
	(CodeBook.run): Pøed zobrazení volej `self.focus()'.
	(CodeBook.__init__): Nech» je implicitní hodnotou argumentu `id'
	øetìzec `codebook'.

2002-07-25  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/command.py (List.COMMAND_LINE_SOFT_ROLLBACK): Nový
	pøíkaz.
	* lib/form/list.py (List.on_command): O¹etøuj pøíkaz
	COMMAND_LINE_SOFT_ROLLBACK.
	(List._on_line_rollback): Nový argument `soft'.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_get_type): Pro obzvlá¹»
	podezøelé hodnoty `precision' ho nastav na None.

2002-07-25  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField._init_controls): Nastavuj
	`self._key_guardian' na None pouze pokud je políèko editovatelné

	* lib/form/list.py (_InputFieldCellEditor.BeginEdit): Volej
	`Enable(wx.TRUE)' na widget vstupního políèka.
	(_InputFieldCellEditor.EndEdit): Volej
	`Enable(wx.FALSE)' na widget vstupního políèka a nastav focus
	rodièovskému oknu.
	(List._ListTable.GetAttr): Nová metoda.
	(List._ListTable.GetAttr): Doplnìn komentáø.

2002-07-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/remote.py (RemoteDataFactory.create): Zru¹eno.
	(_RemoteWrapper): Nová tøída.
	(RemoteDataFactory, RemoteData): Buï jejím potomkem.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Codebooku pøedávej pouze data factory, ne data.

	* lib/data/types_.py (Codebook.__init__): Argument `data' zmìnìn
	na `data_factory', nový argument `data_factory_kwargs'.
	(Codebook._update_enumeration, Codebook._export): Zohlednìna
	pøedchozí zmìna.
	(Codebook._data): Nová metoda.

2002-07-24  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (ShowForm._create_form): obsah formuláøe
	pøidávej do sizeru se zapnutým rozpínáním v hlavním smìru. Volej
	`sizer.SetSizeHints(self._parent)'
	(ShowForm.OnSize): Nová metoda.

2002-07-23  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/inputfield.py (InputField._init_controls): Nech»
	_key_guardian je None.

	* ebas-server: Obaluj originální DataFactory v lib.data.
	(_orig_data_factory): Nová promìnná.
	(_wrap_data_factory): Nová funkce.

	* lib/data/data.py (DataFactory.create_shared): Nová metoda.
	(DataFactory.__init__): Nový atribut `_shared_instance'.

2002-07-23  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application._update_stack_display):
	Zobrazuj v tooltipu i názvy specifikací.

	* lib/form/list.py (ListForm.__init__): Zru¹ena nepou¾itá promìnná
	`size' a atribut `self._text'.
	(CodeBook.run): Úprava docstringu.

2002-07-22  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EditForm._validate): Neúspì¹nou validaci loguj.
	(EditForm._validate): Po validaci je¹tì proveï test vzájemné
	integrity dat.
	(_on_commit_form): Doèasnì zakomentován test `self.changed()'.

	* lib/presentation/field.py (FieldSpec.__init__): Nový argument
	`check'.
	(FieldSpec.check): Nová metoda.
	(PresentedRow.__setitem__): Pokou¹ej se nastavovat hodnotu v
	datovém roe pouze pokud tam daný sloupeèek je.

	* lib/form/inputfield.py (InputField.validate): Úprava formátování
	hlá¹ky v dialogu.

2002-07-22  Milan Zamazal  <pdm@brailcom.org>
	
	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_get_type): Místo
	`not_null' v konstruktoru typu pou¾ívej `constraints'.

	* lib/data/types_.py (Type.__init__): Zru¹en (deprecated) argument
	`not_null', nový argument `constraints'; analogicky atributy.
	(Type.__cmp__): Zohlednìna pøedchozí zmìna.
	(Type.ERRMSG_NULL_VALUE): Zru¹eno.
	(Type.not_null): Zru¹eno.
	(Type.validate): Pøidáno testování constraintù.
	(Float.__init__, String.__init__, String._validate) 
	(Enumeration.__init__, Boolean.__init__, Codebook.__init__) 
	(Sequence.__init__): Zohlednìny pøedchozí zmìny.
	(String._validate_maxlen): Nová metoda.

	* lib/data/types_.py (String.__cmp__): Vracej `result'.

	* ebas (run_application): Místo èistì vzdáleného resolveru
	pou¾ívej lokální resolver s vyu¾itím vzdáleného resolveru.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_update): Opraveny parametry
	metaných výjimek.
	(PostgreSQLStandardBindingHandler._pg_update): Doplnìno chybìjící
	_pg_query ve volání broken UPDATE.

	* lib/data/_test.py (_DBTest.setUp, _DBTest.tearDown)
	(DBDataDefaultClass.setUp): Pøidána podpora pro testování UPDATE
	na rules.
	(DBDataDefaultClass.check_view_update): Nový test.
	(DBDataDefaultClass.setUp, TutorialTest.check_it): Zohlednìna
	zmìna specifikace enumeratoru na DataFactory.
	(Float.check_precision, String.check_validation_limited)
	(String.check_cmp): Pøidána kvalifikace argumentu v konstruktoru.

2002-07-22  Tomas Cerha  <cerha@brailcom.org>

	* lib/presentation/field.py (FieldSpec.__init__): Pokud byl
	definován `codebook', nastav implicitnì `default' funkci vracející
	prázdnou hodnotu.

	* lib/form/inputfield.py (InputField.__init__): Zru¹en atribut
	`_run_invalid_value_handler'.  Inicializuj
	`_last_validation_error'
	(InputField._validation_error_handler): Nová metoda.
	(InputField._on_idle): Pokud je nastaven atribut
	`_last_validation_error', volej `self._validation_error_handler()'
	a pøípadnì zobraz chybovou zprávu.
	(InputField._on_kill_focus): Po validaci pouze nastav atribut
	`_last_validation_error' a o víc se nestarej.
	(InputField.init): `self._initial_value' nastavuj podle
	`self.get_value()' namísto rovnou podle value kvúli mo¾ným
	transformacím uvnitø metody `_set_value()'.
	(MultiTextField._on_kill_focus): Hodnotu vrácenou metodou
	`Type.validate_partial()' ber jako instanci `ValidationError'.
	(CodeBookField._validation_error_handler): Nová metoda.
	(EnumerationField._set_value): Pøi chybì vypisuj i id políèka.

	* lib/form/form.py (EditForm.init): pou¾ívej `find()' pro nalezení
	políèka podle názvu.

	* lib/data/types_.py (Type.invalid_value_handler): Zru¹eno.
	(Codebook.validate_partial): Namísto øetìzce chybové zprávy vracej
	instanci `ValidationError'.
	(Type.ERRMSG_NULL_VALUE): Nová konstanta.
	(Type.validate): Pou¾ívej ji.
	(Codebook.default_value): Zru¹eno.

2002-07-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_update): O¹etøuj problém
	s návratovou hodnotou view.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands): Nové
	atributy `_pdbb_command_broken_update_preselect' a
	`_pdbb_command_test_broken_update.

2002-07-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_get_table_type): Zji¹»uj
	NOT NULL.
	(PostgreSQLStandardBindingHandler._pdbb_get_type): Nový argument
	`not_null'.
	(DBPyPgFunction._db_bindings_to_column_spec): Zohlednìna pøedchozí
	zmìna.

	* lib/data/types_.py (Type.__init__): Nová metoda.
	(Float.__init__, String.__init__, Enumeration.__init__): Volej ji.
	(Type): Buï potomkem `object'.
	(NonNull, CodebookNull): Zru¹eno.
	(Type.not_null): Nová metoda.
	(Float.__init__, Type.validate): Testuj na 'None'.
	(Type.__cmp__): Zohledni `_not_null'.
	(String.__cmp__, Enumeration.__cmp__, Sequence.__cmp__): Volej
	__cmp__ pøedka.

2002-07-18  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField.__init__): Nový atribut
	`self._run_invalid_value_handler'.
	(InputField._init_controls): O¹etøuj `EVT_IDLE' voláním metody
	`_on_idle()'.
	(InputField._on_idle): Nová metoda.
	(InputField._on_kill_focus): Nastavuj pøíznak
	`self._run_invalid_value_handler'.
	(MultiTextField._on_kill_focus): Pou¾ívej metodu
	`Type.validate_partial()', namísto `Type.is_valid()'.

	* lib/form/form.py (EditForm.__init__): Nový argument `focus_field'.
	(EditForm.init): Pokud je nastaveno `self.focus_field', najdi jej
	a volej `set_focus()'.

	* lib/data/types_.py (Type.invalid_value_handler): Nová metoda.
	(Codebook.ERRMSG_PARTIAL_VALIDATION): Nová konstanta.
	(Codebook.is_valid): Zru¹eno (nahrazeno metodou `validate_partial()').
	(Codebook.validate_partial): Nová metoda.
	(Codebook._validate): Update dokumentace.

2002-07-17  Milan Zamazal  <pdm@brailcom.org>

	* ebas (run_application): Importuj lib.data.

	* lib/data/__init__.py: Pøidáno `remote'.
	* lib/data/remote.py: Nový soubor.

	* ebas-server (go): Zaregistruj nové naming groups.
	(RemoteData, RemoteDataFactory): Pøesunuto do lib.data.remote.
	(PyroDataFactory): Pøejmenováno na _PyroDataFactory.
	(PyroResolver): Pøejmenováno na _PyroResolver.
	(_GNAME_DATA, _GNAME_DATA_SPEC, _NAME_RESOLVER): Nové konstanty.

2002-07-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (DataFactory): Buï potomkem `object'.

	* ebas-server: Neimportuj `imp'.
	(_pyro_ns, _pyro_daemon): Nové promìnné.
	(go): Pou¾ívej ji.
	(PyroResolver.get_object): Nová metoda.
	(PyroDataFactory): Nová tøída.
	(RemoteDataFactory): Nová tøída.
	(RemoteData): Nová tøída.

2002-07-16  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (Form.__init__): Pøi výjimce pøedávej jméno
	po¾adované specifikace.

2002-07-15  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (DataFactory): Nová tøída.
	* lib/data/dbdata.py (DBColumnBinding.__init__): Nech»
	`enumerator' je `DataFactory'.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Vytváøej instanci datového objektu z `enumerator'.
	(DBColumnBinding.__init__): `type_' smí být i specifikace
	Codebook.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Zohlednìna pøedchozí zmìna.
	* lib/data/_test.py (DataFactory): Nová sada testù.
	* lib/form/spec.py: DataSpec -> DataFactory.
	(DataSpec): Zru¹eno.
	* lib/form/inputfield.py (ListField._create_controls): DataSpec ->
	DataFactory.
	(ListField._create_controls): Nápodobnì.
	* lib/form/form.py (Form.__init__): DataSpec -> DataFactory.
	* lib/output/formatter.py (LoutFormatter._format_data_table) 
	(LoutFormatter._format_data_item): DataSpec -> DataFactory.

2002-07-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/log.py (Logger.__init__): Místo config.application_name
	pou¾ívej natvrdo 'ebas'.

	* lib/form/form.py (Form.__init__): Zakomentován assert na typ
	`resolver'.

	* lib/form/screen.py (Menu.items): Nová metoda.
	(MenuBar.__init__): Pøidán test na duplicitní horké klávesy.
	(MItem._used_hotkeys): Zru¹eno.
	(MItem.__init__): Zru¹en test na duplicitní horké klávesy.

	* lib/form/command.py (Command.__cmp__): Nová metoda.

	* ebas-server: Dota¾eno do první prototypové verze.
	* ebas (run_application): Pøidána podpora pro práci pøes Pyro
	server.
	(_usage): Pøidána volba `name-server'.
	(_install_gettext): Místo config.application_name pou¾ívej natvrdo
	'ebas'.

	* lib/util/configuration.py
	(Configuration._Option_name_server_host): Pøejmenováno na
	`_Option_name_server'.
	(Configuration._Option_name_server.default): Vracej None.
	(Configuration._Option_name_server.long_option): Nová metoda.
	(Configuration._Option_application_name): Zru¹eno.
	* config/config.py: Pøegenerováno.
	* config/config_ebas.py (application_name): Zru¹eno.
	* config/config_isas.py (application_name): Zru¹eno.
2002-07-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/application.py (Application._init): Zru¹eno.
	(Application._spec): Nová metoda.
	(Application._title, Application._menu, Application._buttons) 
	(Application._status_fields): Vyu¾ívej ji.
	(Application._command_keys, Application._default_font_coding):
	Nové specifikaèní metody.
	(Application.OnInit): Nevolej `_init', vyu¾ívej nové specifikaèní
	metody.
	(run_application): Nepøebírej aplikaèní tøídu z resolveru.
	* lib/data/types_.py (Value.__cmp__): Pøed voláním
	`compare_object' porovnej pøímo typy.

	* lib/presentation/field.py (PresentedRow.__str__): Nová metoda.

	* lib/util/util.py (sameclass): Nový argument `strict'.

	* lib/data/dbdata.py (DBDataPostgreSQL.update): Pøi existujícím
	øádku loguj `key', ne None.

	* lib/form/inputfield.py (CheckBoxField._create_controls):
	Opraveno formátování.
	(CheckBoxField._create_controls, ChoiceField._create_controls) 
	(RadioBoxField._create_controls, ListBoxField._create_controls):
	Nastav callback zmìny políèka.

	* lib/util/resolver.py (Resolver): Buï potomkem `object'.

	* lib/form/application.py (Application.OnInit): Vyhozeno pøiøazení
	`_resolver'.
	(run_application): Místo `resolver.get' pou¾ívej
	`resolver.get_object'.

2002-07-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/resolver.py (Resolver.get): Opravy docstringu.
	(Resolver.load_module): Pøejmenováno na `_get_module'.
	(Resolver.get): Zohlednìna pøedchozí zmìna.
	(Resolver.get_object): Nová metoda.
	(Resolver.get): Vyu¾ívej ji.
	(Resolver): Atribut `_spec', resp. `_module' pøejmenován na
	`_spec_cache', resp. `_module_cache'; nový atribut
	`_object_cache'.
	(Resolver.get_instance): Nová metoda.

	* lib/util/configuration.py
	(Configuration._Option_name_server_host): Nová volba.

	* ebas-server: Nový skript.

	* lib/form/application.py (run_application): Nový argument
	`resolver'.  Neprovádìj "ruèní" zpracování config.def_dir.
	(run_application): Místo resolver.load_module pou¾ívej
	resolver.get.

	* lib/data/data.py (Data): Buï potomkem `object'.

2002-07-09  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/search.py (SortingDialog.__init__): Nový argument
	`sorting' a atribut `_sorting'.
	(SortingDialog._ASCENDING): Pøejmenováno na _ASCENDENT.
	(SortingDialog._DESCENDING): Pøejmenováno na _DESCENDANT.
	(SortingDialog._CANCEL_BUTTON): Zmìna textu.
	(SortingDialog): Upraveno pro vícesloupcové tøídìní.

	* lib/util/resolver.py (Resolver.load_module, Resolver.get):
	Doplnìny chybìjící informace v docstringu.
	(ResolverError): Buï potomkem Exception místo ProgramError.
	(ResolverFileError.__init__, ResolverSpecError.__init__): Volej
	konstruktor pøedka, ne ProgramError.

	* lib/util/util.py (position, find): Oprava docstringu.

	* lib/form/list.py (List._ListTable.__init__): Argument `sort',
	resp. atribut `_sort', pøejmenován na `sorting', resp. `_sorting'.
	(List._create_grid): Zohlednìna pøedchozí zmìna.
	(List._ListTable.GetColLabelValue): Zohlednìna pøedchozí zmìna a
	zobecnìno pro vícesloupcové tøídìní.
	(List.__init__): Nový argument `default_sorting'.  Formální opravy
	docstringu.
	(ListForm.__init__): Pøedávej do List `default_sorting' zji¹tìné
	ze specifikace.
	(List._switch_sorting): Pøidána podpora pro vícesloupcové tøídìní,
	opraveny rùzné nesmysly.

2002-06-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/resolver.py (Resolver._load_module): Pøejmenováno na
	`load_module'.
	(Resolver.get): Zohlednìna pøedchozí zmìna.

	* lib/form/application.py (run_application): Nová funkce.
	(Application.__init__): Nový argument `resolver'.
	(Application.OnInit): Zru¹en atribut `_resolver_'.
	(Application._resolver): Zru¹eno, místo metody je nový atribut.
	(Application._resolver_directory): Zru¹eno.
	(Application.resolver): Zohlednìny pøedchozí zmìny.

	* ebas (run_application): Místo lib.form.application importuj
	lib.form.  Místo vytváøení a spou¹tìní aplikace z `defs' volej
	lib.form.run_application.

2002-06-17  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (LoutFormatter.preview) 
	(LoutFormatter.printout): Metoda uzavírá `stream' (pouze update
	docstringu).

	* lib/form/output.py (PrintForm._run_formatter): Nikdy neuzavírej
	`stream'.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_update): Odstranìn
	zapomenutý øádek.

2002-06-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_get_type): TODO poznámka
	zmìnìna na obyèejnou poznámku.
	(DBDataPostgreSQL._pg_value): Odstranìna TODO poznámka.
	(DBDataPyPgSQL._PgNotifier._listen): Pøi chybách si oddychuj,
	s prodlu¾ujícími se intervaly.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec) 
	(PostgreSQLStandardBindingHandler._pdbb_sort2sql.item2sql) 
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands) 
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql) 
	(PostgreSQLStandardBindingHandler._pg_search): Odstranìny TODO
	poznámky, kosmetické úpravy.

	* lib/form/event.py (UserBreakException.__init__): Vyu¾ívej
	argumentu `beep_' funkce `message'.
	(_system_callback_*): Nové globální promìnné.
	(wx_callback.process_event): Pøedìláno ve snaze uèinit to
	dostateènì thread-safe.
	
2002-06-13  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (BrowsableShowForm._on_next_record): Vyu¾ívej
	argumentu `beep_' funkce `message'.

	* lib/form/application.py (Application.on_command): Vyu¾ívej
	argumentu `beep_' funkce `message'.

	* lib/form/list.py (List._on_select_cell): Volej pøímo
	`_select_cell_command', neprovádìj zpracování pøes vyvolání
	pøíkazu.
	
	* lib/form/event.py (interrupt_watcher.watcher): Nenuluj `lock'.

2002-06-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/event.py (UserBreakException.__init__): Místo `super_'
	pou¾ívej `super'.
	(interrupt_watcher.watcher): Vyu¾ívej `microsleep'.
	(interrupt_watcher): Synchronizaci na inicializaci zpracování
	pøeru¹ení provádìj prostøednictvím zámku.

	* lib/form/application.py (message): Loguj pouze pokud je
	`message' nebo `data' neprázdné.

	* lib/form/list.py (List): Buï potomkem Refreshable.

	* lib/form/form.py (Refreshable): Nová tøída.
	(EditForm._signal_update): Místo na existenci `refresh' testuj zda
	je okno instancí Refreshable.
	(PopupEditForm.message): Oprava formátování.

	* lib/form/_test.py: Odstranìny skoro v¹echny (nefunkèní) testy.

	* lib/form/screen.py (ButtonBar): Odstranìna TODO poznámka.
	(StatusBar.message): Timeru pøedávej zadaný `timeout', ne 3.

	* lib/data/_test.py (DBDataDefaultClass.setUp): Nepou¾ívej ji¾
	více DBMultiColumnBinding.

	* lib/data/dbdata.py (DBMultiColumnBinding): Zru¹eno.
	(PostgreSQLStandardBindingHandler._pdbb_btabcol) 
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Zohlednìna pøedchozí zmìna.

2002-06-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/application.py (Application.run): *_BROKEN nastaveno na
	FALSE.
	(Application.run.log_wrapper): Pøi THREADING_BROKEN volej wxYield
	jen pro hlavní thread.

	* lib/util/util.py (Popen.__init__): Obaluj celý synovský process
	do try...finally.

	* lib/form/output.py (PrintForm._on_print_): Vyu¾ívej Popen.

2002-06-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (LoutFormatter._lout): Obnoveno
	cachování lout zdrojáku.

	* lib/form/output.py (PrintForm._zoom): Do
	`_start_postscript_viewer' pøedávej `zoom' podìlené 100.
	(PrintForm._zoom, PrintForm.Close): Ignoruj IOError pøi uzavírání
	streamu.

2002-06-09  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (LoutFormatter._lout): Nastavení
	`release_lock' pøi chybì lout pøesunuto k uvolnìní zámku.

2002-06-08  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (LoutFormatter._lout): Pøepracováno
	s vyu¾itím lib.util.Popen.

	* lib/form/screen.py (microsleep): Nová funkce.

	* lib/form/output.py (_Ghostscript._start_gs): Nová metoda.
	(_Ghostscript.__init__): Volej ji místo `_render'.
	(_Ghostscript.__del__): Uzavírej `_stream' a èekej na dokonèení
	jeho procesu.
	(_Ghostscript._render): Zru¹eno.
	(_Ghostscript.input_stream): Nová metoda.
	(_Ghostscript.page_image): Jedná-li se o první stránku, èekej na
	její vygenerování.  U ostatních stránek vracej None, pokud stránka
	je¹tì není dokonèena.  Doplnìno logování.
	(PostscriptViewer.ps_input_stream): Nová metoda.
	(PrintForm._create_controls, PrintForm._zoom): Do `_run_formatter'
	pøedávej místo vlastnoruènì vytváøené roury stream vytvoøený
	postscriptovou prohlí¾eèkou.
	(PrintForm._show_page): Pokud
	(PostscriptViewer.show_page): Jestli¾e výstup nemá ¾ádnou stránku,
	vra» 0.  Èekej na vyrenderování alespoò první stránky.
	(PrintForm._on_idle): Vyu¾ívej funkci `micro_sleep'.
	(PostscriptViewer.__init__): Nezobrazuj první stránku.
	(_Ghostscript.finished): Testuj ukonèení gs procesu.
	(_Ghostscript.number_of_pages): Zda je proces ukonèen zji¹»uj pøed
	zji¹»ováním poètu stránek.  Opraveno zji¹»ování poètu stránek.
	(_Ghostscript.__init__): Nech» `_number_of_pages' je dvojice.
	(PostscriptViewer.show_page): Nastavuj scrollbars.
	(PostscriptViewer.__init__): Nenastavuj scrollbars.
	(PrintForm._start_postscript_viewer): Nová metoda.
	(PrintForm._create_controls, PrintForm._zoom): Vyu¾ívej ji.
	(PrintForm._run_formatter): Uzavøení streamu obaleno odchytnutím
	IOError.

	* lib/util/_test.py (Popen): Nová sada testù.
	(DevNullStream): Nová sada testù.

	* lib/util/util.py (Popen): Nová tøída.
	(dev_null_stream): Nová funkce.

2002-06-06  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (DBDataDefaultClass.check_update_many) 
	(DBDataDefaultClass.check_delete_many): Nové testy.

	* lib/data/dbdata.py (DBDataPostgreSQL.delete_many): Nová metoda.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Z `_pdbb_command_update' a `_pdbb_command_delete' odstranìno
	vlo¾ení ¹ablony klíèové podmínky.
	(DBDataPostgreSQL._pg_key_condition): Nová metoda.
	(DBDataPostgreSQL._pg_delete): Místo klíèe má za argument
	podmínku.
	(DBDataPostgreSQL.delete)
	(PostgreSQLStandardBindingHandler._pg_delete): Zohlednìna
	pøedchozí zmìna.
	(PostgreSQLStandardBindingHandler._pg_delete): Vracej skuteèný
	poèet smazaných øádkù.
	(DBDataPostgreSQL.update_many): Nová metoda.
	(DBDataPostgreSQL._pg_update): Místo klíèe je argumentem
	podmínka.  Vracej poèet updatovaných øádkù.
	(PostgreSQLStandardBindingHandler._pg_update) 
	(DBDataPostgreSQL.update): Zohlednìna pøedchozí zmìna.
	(DBDataPostgreSQL.update): Odstranìny zmatky a chyby související
	s ordering.

	* lib/data/data.py (Data.delete_many): Nová metoda.
	(Data.update_many): Nová metoda.

2002-06-06  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EditForm.__init__): Nedokumentuj zdìdìné
	argumenty, odkazuj se na dokumentaci konstruktoru nadtøídy.
	(PopupEditForm.__init__): Argumenty pøedávej pomocí '*args' a
	'**kwargs'.

2002-06-05  Petr Malivanek  <malivanek@akont.cz>

	* lib/form/list.py (List._on_handled_command): Pøedávej handleru
	také 'self._data' jako argument. Loguj.
	(List._on_handled_command): Po handleru volej 'refresh()'.

	* lib/form/application.py (Application.run_form): Formuláø
	vytváøej pomocí 'apply()', aby bylo mo¾no správnì pøedat název.

2002-06-04  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/event.py: Oprava pøeklepu v docstringu.

	* lib/form/output.py: V¹ude doplnìno logování.
	(PrintForm._on_widget_key): ^M -> Enter.

	* lib/output/formatter.py (LoutFormatter._lout): `in_'
	pøejmenováno na `lout'.
	(LoutFormatter._lout): Uzavírej streams vytvoøené pøes popen2.

	* lib/util/util.py (Pipe.close): Ignoruj výjimky pøi uzavírání CC
	streamù.
	(copy_stream): Neloguj ve¹kerá naètená data.

2002-06-04  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/list.py (_CellEditor.__init__): Nový argument
	'guardian'. Ukládej jej do 'self._guardian'.
	(_InputFieldCellEditor.Create): Funkci 'resolve()' pøedávej
	'self._guardian' jako argument 'guardian'. Nepøedávej ji¾
	neexistující argument 'form'.
	(List._create_grid): Konstruktru '_InputFieldCellEditor' pøedávej
	self, jako argument 'guardian'.
	(List.on_key_down): Nový nepovinný argument 'dont_skip'. Pøedávej
	jej volání nadøazeného 'KeyHandler'u.
	(CodeBook.__init__): Nový nepovinný argument
	'select_row'. Pøedávej jej volání konstruktoru rodiè. tøídy.

	* lib/form/form.py (EditForm._pack_fields): Funkci 'resolve()'
	pøedávej 'self' jako argumenty 'parent' i 'guardian'.

	* lib/form/inputfield.py (resolve): Zru¹en argument 'form'. Nový
	nepovinný argument guardian.
	(InputField.__init__): Zru¹en argument 'form'. Nový nepovinný
	argument guardian.
	(_TextValidator.__init__): Zru¹en argument 'maxlen'. Argument
	'filter' nech» je povinný.
	(_TextValidator.Clone): Nepøedávej argument 'maxlen'.
	(_TextValidator._on_char): Neøe¹ pøekroèení maximální délky.
	(InputField.__init__): Nenastavuj atributy 'self._ctrl_parent' a
	'self._form'. Nastavuj 'self._guardian'.
	(InputField._create_label): 'self._ctrl_parent' -> 'self._parent'.
	(InputField.guardian): Namísto 'self._form' vracej
	'self._guardian'.
	(InputField.validate): Namísto pøímého vyvolání dialogu vyu¾ívej
	'Application.dialog()'.
	(Unlabeled._create_label): 'self._ctrl_parent' -> 'self._parent'.
	(TextField._create_text_control): 'self._ctrl_parent' ->
	'self._parent'. Vyu¾ívej 'control.SetMaxLength()'. Namísto volání
	'self._set_validator()' vytváøej '_TextValidator' pøímo. Jeho
	konstruktoru nepøedávej argument 'maxlen'.
	(TextField._set_validator): Zru¹eno.
	(CheckBoxField._create_controls): 'self._ctrl_parent' ->
	'self._parent'.
	(ChoiceField._create_controls): 'self._ctrl_parent' ->
	'self._parent'.
	(RadioBoxField._create_controls): 'self._ctrl_parent' ->
	'self._parent'.
	(ListBoxField._create_controls): 'self._ctrl_parent' ->
	'self._parent'.
	(Invocable._create_button): 'self._ctrl_parent' -> 'self._parent'.
	(DateField._on_invoke_selection): Namísto pøímého vytváøení
	kalendáøe vyu¾ívej 'Application.dialog()'.
	(InlineMultiTextField._create_controls): O¹etøi pøípad, kdy jeden
	z prvkú sekvence vrácené 'self._maxlen()' je 'None'.
	(InlineMultiTextField._number_of_values): Pøejmenováno na
	'_number_of_fields'.
	(InlineMultiTextField.get_value): Kosmetické úpravy.
	(InlineMultiTextField._set_value): Pokud argumentem není sekvence,
	nastav hodnotu pøímo.
	(CodeBookField._create_widget): 'self._ctrl_parent' ->
	'self._parent'.
	(CodeBookField._on_invoke_selection): Namísto pøímého vytváøení
	èíselníku volej 'Application.run_form()'.
	(ListField._create_controls): Resolver získej pomocí
	'lib.form.application._application.resolver()'.
	(ListField._create_controls): 'self._ctrl_parent' ->
	'self._parent'.

	* lib/form/application.py (Application.run_form): Pøidáno mapování
	pro akci 'codebook'.
	(Application.dialog): Pokus se získat rodièe aktuálního okna jako
	rodièe dialogu a teprve potom pou¾ij 'self._frame'.
	(Application.run_form): Jako wx rodièe nejprve zkus dosadit rodièe
	aktuálního okna z framestacku a teprve potom pou¾ij 'self._frame'.

	* lib/form/dialog.py (GenericDialog.on_command): Nová metoda
	o¹etøující pøíkaz 'Application.COMMAND_LEAVE_FORM'.

2002-06-03  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/util.py (copy_stream): Stream uzavírej, je-li to
	po¾adováno, za v¹ech okolností.
	(copy_stream): Pøi spu¹tìní v threadu odchytávej v¹echny výjimky.

	* lib/form/output.py (_Ghostscript._render.feedgs): Nastavuj
	`_finished' na pravdu za v¹ech okolností.
	(_Ghostscript._render.feedgs): Odstranìno kopírování argumentù.
	(PrintForm._run_formatter): Stream uzavírej za v¹ech okolností.

	* lib/form/event.py (wx_callback.process_event): Pro u¾ivatelskou
	událost volej `message'.
	(_is_user_event): Mezi u¾ivatelské události pøidáno
	wxCommandEventPtr.

	* lib/form/application.py (Application.on_command): Nevolej
	`message'.

2002-06-03  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application.popup_form): Zru¹eno.

	* lib/form/inputfield.py (ListField._invoke_edit_form): Zru¹eno.
	(ListField._invoke_browse_form): Zru¹eno.
	(ListField.on_command): Namísto metod '_invoke_edit_form()' a
	'_invoke_browse_form()' volej pøímo Appication.run_form()'.

	* lib/form/dualform.py (DualForm.__init__): Inicializuj atribut
	'self._sash_position'.
	(DualForm.OnSize): Vyu¾ívej atribut 'self._sash_position'.
	(ShowDualForm.__init__): Kosmetická úprava.
	(ShowDualForm._create_main_form): Inicializuj atribut
	'self._sash_position'.
	(ShowDualForm.on_command): Zru¹eno.
	(ShowDualForm.OnSize): Zru¹eno.
	(DescriptiveDualForm._create_side_form): Inicializuj atribut
	'self._sash_position'.
	(DescriptiveDualForm.OnSize): Zru¹eno.

2002-05-31  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/application.py (Application.on_command): Zpracovávej
	COMMAND_BREAK.

	* lib/form/output.py (PrintForm._show_page): Pøi zji¹tìní
	definitivního poètu stránek oznam konec formátování pøes
	`message'.

	* lib/output/formatter.py (LoutFormatter._lout.p): Zru¹eno
	pøedávání argumentù.  Pøi pøeru¹ení uzavírej `out'.

2002-05-31  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application.run_form): Zru¹en argument
	'other_name'.  Pøidán argument '*args'.
	(Application.run_form): Mapování upraveno podle nového významu
	tøíd, pøidámo mapování pro tiskové formuláøe.
	(Application.run_form): Loguj také argumenty formuláøe.
	(Application.popup_form): Zakomentováno nastavení callbacku pro
	'BrowseForm'.

	* lib/form/command.py: Nový pøíkaz
	'BrowseForm.COMMAND_RECORD_EDIT'.  Pøíkazy 'EditForm' související
	s pohybem po záznamech nech» patøí tøídì 'BrowsableShowForm'.

	* lib/form/dualform.py (DualForm.__init__): Zapamatuj si jméno
	vedlej¹ího formuláøe v atributu 'self._side_name'.
	(BrowseDualForm._create_main_form): Nastavuj 'CALL_ACTIVATION' na
	'self._on_show_record'.
	(BrowseDualForm._on_show_record): Nová metoda.
	(EditDualForm): Pøejmenováno na 'ShowDualForm'.
	(ShowDualForm.__init__): Oprava pøeklepu v názvu argumentu.
	'EditDualForm' -> 'ShowDualForm'.  Nevolej
	'self._main_form.init()'.
	(ShowDualForm._create_main_form): Namísto 'EditForm' pou¾ívej
	'BrowsableShowForm'.

	* lib/form/screen.py (Menu.create.callback): Nepøedávej lokální
	promìnné do lambda funkce.

	* lib/form/list.py (List.is_edited): Nová metoda.
	(ListForm._popup_menu): Vra» prázdný tuple namísto None.
	(ListForm.set_callback): Pokud nejde o callback listu, øedávej jej
	rodièovské tøídì.
	(CodeBook.__init__): Namísto callbacku 'CALL_ALTERNATE_ACTIVATION'
	vyu¾ívej 'CALL_ACTIVATION' a volej 'self._on_activation'
	(CodeBook._popup_menu): Nová metoda.
	(CodeBook._on_selection): Pøejmenováno na '_on_activation'
	(BrowseForm): Doplnìna dokumentace.
	(BrowseForm.CALL_EDIT_RECORD): Nový callback.
	(BrowseForm.__init__): Zmìna vyu¾ití callbackù, vyu¾ívej také nový
	callback 'CALL_EDIT_RECORD'.
	(BrowseForm._popup_menu): Na zaèátek menu také pøidávej polo¾ky
	definované rodièovskou tøídou.
	(BrowseForm._on_new_record): Doplnìno TODO.
	(BrowseForm._on_edit_form): Pøejmenováno na
	'_on_edit_record'. Nevytváøej instanci pøímo, ale vyu¾ívej
	'Application.run_form()'.
	(BrowseForm._on_show_record): Nová metoda.
	(BrowseForm._on_descr_record): Nová metoda.
	(BrowseForm.on_show_details): Zru¹eno.
	(BrowseForm._on_print_): Nevytváøej instanci pøímo, ale vyu¾ívej
	'Application.run_form()'.
	(BrowseForm.on_command): O¹etøuj 'BrowseForm.COMMAND_RECORD_EDIT'
	voláním callbacku 'CALL_EDIT_RECORD'.

	* lib/form/inputfield.py (InputField.__init__): Volej
	'CallbackHandler.__init__()' zde.
	(InputField._init_controls): Nevolej 'CallbackHandler.__init__()'
	zde.
	(InputField._on_kill_focus): Validaci neprovádìj, pokud políèko
	není editovatelné.
	(MultiTextField._on_kill_focus): Èásteènou validaci neprovádìj,
	pokud políèko není editovatelné.

	* lib/form/form.py (EditForm): V¹e, co se týká pohybu po
	záznamech, vyhledávání, tøídìní a filtrace pøesunuto do nové tøídy
	'BrowsableShowForm'.
	(EditForm.__init__): Neinicializuj atributy 'self._search_dialog'
	a 'self._filter_dialog'.  Doplnìn komentáø.  Pokud wx rodièem není
	'wx.wxDialog', volej 'self.init()' explicitnì, namísto nastavování
	callbacku.
	(EditForm.init): Upøesnìní komentáøù.
	(EditForm._signal_update, EditForm._on_search)
	(EditForm._on_select_filter, EditForm._on_sort_column)
	(EditForm._on_next_record, EditForm._on_set_row): Pøesunuto do
	'BrowsableShowForm'.
	(EditForm._find_row.find_row): Nepøedávej lokální promìnné.
	(EditForm.on_ui_event): O¹etøení 'List.UI_EXISTS_CONDITION'
	pøesunuto do 'BrowsableShowForm'.
	(EditForm.on_command): Neo¹etøuj pøíkazy týkající se navigace.
	(BrowsableShowForm): Nová tøída.

2002-05-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/application.py (Application.on_command): Zru¹ena
	logovací hlá¹ka "wow".

	* lib/form/screen.py (KeyHandler._maybe_invoke_command): Doplnìna
	dal¹í logovací hlá¹ení.

	* lib/data/_test.py (DBFunction): Odladìno.
	(DBMultiData.check_select_fetch_direction): Pøedefinování
	podìdìného testu.

	* lib/data/dbdata.py (DBPyPgFunction): Dokonèeno.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec.gettype):
	Zmìnìno na metodu `_pdbb_get_type' a zmìnìny argumenty.
	(PostgreSQLStandardBindingHandler._pdbb_get_table_type): Nová
	metoda.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Zohlednìny pøedchozí zmìny.
	(PostgreSQLStandardBindingHandler._pg_search.sorting_condition):
	Zru¹eno explicitní pøedávání promìnných.

2002-05-30  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/__init__.py: Importuj modul 'dualform'.

	* lib/form/form.py: Úprava dokumentace v souvislosti s oddìlením
	kódu duálních formuláøù do samostatného modulu.
	(EditForm.on_ui_event): Na list odkazuj pøímo (ne 'lib.form.List').
	(DualForm, SideBrowseDualForm, BrowseDualForm, EditDualForm) 
	(DescriptiveDualForm): Pøesunuto do nového modulu 'dualform'.

	* lib/form/list.py (_InputFieldCellEditor.__init__): Inicializuj
	'self._callbacks'
	(_InputFieldCellEditor.Create): Nastav vytvoøené instanci
	'InputField' callbacky ulo¾ené v 'self._callbacks'.
	(_InputFieldCellEditor.set_callback): Nová metoda.
	(List._create_grid): Nastav editoru callbacky.

	* lib/form/inputfield.py (InputField.CALL_COMMIT_FIELD): Úprava
	docstringu.

2002-05-29  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (DBFunction): Nová sada testù.
	(DBCounter): Pøidáno do `tests'.

	* lib/data/data.py: Do docstringu doplnìn odkaz na tøídy Counter a
	Function.
	(Function): Nová tøída.
	(Row.__init__): Odstranìny specifikátory modulu `types_'
	v docstringu.
	(Data.__init__): Do chybového hlá¹ení assertu sloupcù pøidáno
	`columns'.

	* lib/data/dbdata.py (DBCounterDefaultClass): Zru¹eno.
	(DBCounterDefault): Hodnota zmìnìna na DBPyPgCounter.
	(DBFunctionDefault): Nová globální promìnná.
	(DBPyPgFunction): Nová tøída.

	* lib/form/screen.py (KeyHandler._init_commands): Nová metoda.
	(KeyHandler._maybe_invoke_command, KeyHandler.on_key_down):
	Pou¾ívej ji.

	* lib/form/application.py (Application.run): Místo v Pythonu 2.2
	zcela nefunkèního obalování funkce `log' nastavuj logovací hook.

	* lib/util/log.py (LoggingInterface): Nová tøída.
	(log): Pøesunuto do LoggingInterface jako __call__.
	(log): Nová globální promìnná.

2002-05-29  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField): Doplnìna dokumentace
	týkající se 'CallbackHandler'.
	(InputField.CALL_LEAVE_FIELD, InputField.CALL_COMMIT_FIELD)
	(InputField.CALL_FIELD_CHANGE, InputField.CALL_SKIP_NAVIGATION):
	Nové callbackové konstanty.
	(InputField.__init__): Update komentáøe.
	(InputField.on_command): O¹etøi pøíkazy 'COMMAND_COMMIT_FIELD' a
	'COMMAND_LEAVE_FIELD' voláním patøièných callbackù.
	(InputField._on_change): Namísto pøímého volání metody
	'field_change()' formuláøe volej pouze callback
	'CALL_FIELD_CHANGE'.
	(InputField._skip_navigation): Zru¹eno.
	(Invocable._create_widget): Namísto metody '_skip_navigation()'
	volej callback 'CALL_SKIP_NAVIGATION'.
	(CodeBookField._create_widget): Namísto metody '_skip_navigation()'
	volej callback 'CALL_SKIP_NAVIGATION'.

	* lib/form/form.py (Form._on_leave_form): Nech» je argument
	'event' nepovinný.
	(PopupForm._on_leave_form): Nech» je argument 'event' nepovinný.
	(EditForm._pack_fields): Nastav vytvoøenému políèku callbacky.
	(EditForm.field_change): Pøejmenováno na '_field_change()'.
	(EditForm.navigate): Pøejmenováno na '_navigate'.
	(EditForm.on_command): Volej 'self._on_leave_form()' bez
	argumentu. 'navigate' -> '_navigate'.
	(PopupEditForm.message): Nepøidávej mezeru pøed text zprávy.

	* lib/form/screen.py (CallbackHandler._run_callback): Pokud nebyla
	funkce pro daný callback nastavena, vracej FALSE, jinak TRUE.
	(KeyHandler._maybe_invoke_command): Testuj, jestli je nastaveno
	'self._commands'.

2002-05-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (EditForm.__init__): Nový argument `new' a
	atribut `_new'.
	(EditForm._on_commit_form): Update x insert rozhoduj dle `_new',
	ne `_key'.
	(PopupEditForm.__init__): Nový argument `new'.

	* lib/util/_test.py (Classes.check_public_attributes): Porovnávej
	výsledek bez ohledu na poøadí prvkù.

	* lib/util/util.py (public_attributes): Odstraòuj duplikáty.

	* lib/form/list.py (List): `_filterflag' pøejmenováno na
	`_filter_flag'.
	(List.refresh): Reset argument `filterflag' pøejmenován na
	`filter_flag'.
	(List._on_filter): `filterflag' -> `filter_flag'.
	(List.current_key): Nová metoda.
	(BrowseForm._on_new_record): Pøidána podpora pro kopii øádku.
	(BrowseForm.on_command): Vracej TRUE i pro nové pøíkazy.

2002-05-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/_test.py (Sameclass.check_function): Testování upraveno
	pro Python 2.2.
	(Classes.check_public_attributes): K assert pøidána chybová
	hlá¹ka.

	* lib/form/screen.py (CallbackHandler._run_callback): Ponecháno
	pouze v jediném exempláøi.
	(CallbackHandler): Opravy formátování.
	(_Keymap): Zru¹en nemístný docstring.
	(KeyHandler.on_key_down): Doplnìní docstringu.
	(KeyHandler): Doplnìní docstringu.

2002-05-27  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List.__init__): Nastavuj `_parent' je¹tì pøed
	voláním konstruktoru KeyHandler.

2002-05-27  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/search.py (SFDialog.__init__): 'super' -> 'super_'.
	(SFDialog.run): 'super' -> 'super_'.
	(SearchDialog.run): 'super' -> 'super_'.
	(FilterDialog.run): 'super' -> 'super_'.
	(SortingDialog.__init__): 'super' -> 'super_'.

	* lib/form/screen.py (_Keymap.__init__): Doplnìn docstring.
	(CallbackHandler): Nová tøída.

	* lib/form/output.py (PrintForm.on_command): 'super' -> 'super_'.
	(PrintForm.run): 'super' -> 'super_'.

	* lib/form/inputfield.py (InputField): Nech» tøída dìdí také
	'CallbackHandler'.
	(InputField._init_controls): Volej 'CallbackHandler.__init__()'.
	(MultiTextField._on_kill_focus): 'super' -> 'super_'.

	* lib/form/form.py (Form): Nech» tøída dìdí také
	'CallbackHandler'.
	(Form.__init__): Volej 'CallbackHandler.__init__()'.
	(Form._run_callback): Zru¹eno.
	(Form.set_callback): Zru¹eno.
	(EditForm.__init__): 'super' -> 'super_'.
	(DualForm.__init__): 'super' -> 'super_'.
	(SideBrowseDualForm.Close): 'super' -> 'super_'.
	(BrowseDualForm.__init__): 'super' -> 'super_'.
	(EditDualForm.__init__): 'super' -> 'super_'.
	(DescriptiveDualForm.__init__): 'super' -> 'super_'.

	* lib/form/event.py (UserBreakException.__init__): 'super' -> 'super_'.

	* lib/form/dialog.py (GenericDialog.__init__): 'super' -> 'super_'.
	(Message.__init__): 'super' -> 'super_'.
	(Warning.__init__): 'super' -> 'super_'.
	(Error.__init__): 'super' -> 'super_'.
	(MultiQuestion.__init__): 'super' -> 'super_'.
	(Question.__init__): 'super' -> 'super_'.
	(InputDialog.__init__): 'super' -> 'super_'.
	(Password.__init__): 'super' -> 'super_'.
	(Calendar.__init__): 'super' -> 'super_'.

	* lib/util/util.py (super): Zru¹en alias 'super = super_'

	* lib/output/markup.py (FontSize.__init__): 'super' -> 'super_'.
	(FontFamily.__init__): 'super' -> 'super_'.

	* lib/data/types_.py (Date._export): 'super' -> 'super_'.
	(Date._validate): 'super' -> 'super_'.
	(Time._export): 'super' -> 'super_'.
	(Enumeration.default_value): 'super' -> 'super_'.
	(Codebook.values): 'super' -> 'super_'.
	(Codebook._validate): 'super' -> 'super_'.
	(CodebookNull._validate): 'super' -> 'super_'.

	* lib/data/dbdata.py (DBDataPyPgSQL.__init__): 'super' -> 'super_'.
	(DBException.__init__): 'super' -> 'super_'.
	(DBLoginException.__init__): 'super' -> 'super_'.

	* lib/data/_test.py (Sequence.setUp): 'super' -> 'super_'.
	(DBDataOrdering.setUp): 'super' -> 'super_'.
	(DBDataOrdering.check_insert): 'super' -> 'super_'.

	* lib/form/list.py (List): Nech» tøída dìdí také
	'CallbackHandler'.
	(List.__init__): Volej 'CallbackHandler.__init__()'.  Nenastavuj
	'self._callbacks' pøímo.
	(List._run_callback): Metoda zru¹ena.
	(List.set_callback): Metoda zru¹ena.
	(ListForm.__init__): 'super' -> 'super_'.
	(ListForm.set_callback): Nová obalovací metoda.
	(ListForm.SetSize): 'super' -> 'super_'.
	(ListForm.Show): 'super' -> 'super_'.
	(ListForm.focus): 'super' -> 'super_'.
	(ListForm.defocus): 'super' -> 'super_'.
	(CodeBook.__init__): 'super' -> 'super_'.
	(CodeBook.on_command): 'super' -> 'super_'.
	(BrowseForm.__init__): 'super' -> 'super_'.
	(BrowseForm.set_callback): Metoda zru¹ena.
	(FilteredBrowseForm.__init__): 'super' -> 'super_'.

2002-05-26  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (BrowseForm.on_command): Pøidána podpora pro
	COMMAND_NEW_RECORD a COMMAND_NEW_RECORD_COPY.
	(BrowseForm._on_new_record): Nová metoda.

	* lib/form/command.py (BrowseForm.COMMAND_NEW_RECORD): Úprava
	docstringu.
	(BrowseForm.COMMAND_NEW_RECORD_COPY): Nový pøíkaz.
	* lib/form/command.py: Zdokumentována zmìn reprezentace kláves
	Enter a Escape.
2002-05-24  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (DualForm.__init__): Namísto jediného argumentu
	'name' jsou nyní dva: 'main_name' a 'side_name'.
	(DualForm._create_side_form): Pøebírej oba argumenty 'main_name' a
	'side_name'.
	(SideBrowseDualForm._create_side_form): Pøebírej oba argumenty
	'main_name' a 'side_name'.
	(SideBrowseDualForm._create_side_form): Namísto zji¹»ování
	'side_form_name' ze specifikace pou¾ij argument 'side_name'.
	(BrowseDualForm._create_main_form): Nenastavuj
	'CALL_ALTERNATE_ACTIVATION'. (Pøidáno TODO).
	(BrowseDualForm._on_activation): Zakomentováno.
	(EditDualForm.__init__): Pøebírej oba argumenty 'main_name' a
	'side_name'.
	(DescriptiveDualForm._create_side_form): Pøebírej oba argumenty
	'main_name' a 'side_name'.

	* lib/form/list.py (BrowseForm.__init__): Nastav o¹etøení
	'CALL_ALTERNATE_ACTIVATION' voláním 'self.on_show_details()'

	* lib/form/inputfield.py (_menu): 'InputField.COMMAND_RESET' ->
	'InputField.COMMAND_RESET_FIELD'.
	(InputField.on_command): 'InputField.COMMAND_RESET' ->
	'InputField.COMMAND_RESET_FIELD'.  O¹etøuj pøíkazy
	'InputField.COMMAND_COMMIT_FIELD' a
	'InputField.COMMAND_LEAVE_FIELD'.
	(TextField._create_text_control): Nepøedávej lambda funkci lokální
	promìnné.
	(Invocable._create_widget): Nepøedávej lambda funkci lokální
	promìnné.
	(InlineMultiTextField.width): Nepøedávej lambda funkci lokální
	promìnné.
	(InlineMultiTextField._filter): Nepøedávej lambda funkci lokální
	promìnné.
	(InlineMultiTextField.get_value): Nepøedávej lambda funkci lokální
	promìnné.
	(CodeBookField._create_widget): Nepøedávej lambda funkci lokální
	promìnné.

	* lib/form/command.py: 'Application.COMMAND_POPUP_FORM'
	pøejmenován na 'Application.COMMAND_RUN_FORM'.'
	'InputField.COMMAND_RESET' pøejmenován na
	'InputField.COMMAND_RESET_FIELD'.
	Nový pøíkaz 'InputField.COMMAND_COMMIT_FIELD'.
	Nový pøíkaz 'InputField.COMMAND_LEAVE_FIELD'.

	* lib/form/application.py (Application.on_command):
	'COMMAND_POPUP_FORM' -> 'COMMAND_RUN_FORM'.
	(Application.run_form): Nová metoda.

2002-05-23  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/application.py (Application.run.log_wrapper):
	Odstranìno pøedávání haldy argumentù.

	* lib/form/screen.py (MItem.__init__): Pro víceklávesové pøíkazy
	pøidávej jejich klávesy do menu do závorky.

	* lib/form/command.py: Zru¹eny v¹echny pøíkazové aliasy pro
	Application.

	* lib/form/list.py (List._on_line_rollback): Nastav barvy zpìt na
	_FOCUS_COLORS.

2002-05-21  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/spec.py: Update dokumentace.

	* lib/form/list.py (BrowseForm): 'EditForm' -> 'PopupEditForm'.
	(BrowseForm._on_edit_form): 'EditForm' -> 'PopupEditForm'.

	* lib/form/inputfield.py (ListField._invoke_edit_form): 'EditForm'
	-> 'PopupEditForm'.

	* lib/form/form.py: Doplnìna dokumentace. Formátovací úpravy.
	(EmbeddedEditForm): Pøejmenováno na 'EditForm'.
	(EditForm.__init__): 'EmbeddedEditForm' -> 'EditForm'.
	(ShowForm): 'EmbeddedEditForm' -> 'EditForm'.
	(EditForm): Pøejmenováno na 'PopupEditForm'.
	(PopupEditForm.__init__): 'EmbeddedEditForm' -> 'EditForm'.
	(_create_main_form): 'EmbeddedEditForm' -> 'EditForm'.

2002-05-20  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (WxKey.event_key): O¹etøuj RETURN.
	(MItem.__init__): Pro víceklávesové pøíkazy uvádìj provizorní
	popis klávesy do titulku.  Namísto 'EditForm' pou¾ívej
	'PopupEditForm'.

2002-05-20  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application._on_frame_size): Nastavuj
	pozici loga, i kdy¾ zrovna není vidìt.

	* lib/form/screen.py (FrameStack._replace_window): Pøi zobrazování
	nového okna volej `Show()' a¾ po `Enable()'. Tím se z neznámých
	dùvodù odstraní problém s polovièním prvním øádkem BrowseFormu...

	* lib/form/list.py (List._on_label_right): Pro verzi wxWindows 2.3
	a vy¹¹í odeèítej vý¹ku záhlaví.
	(List._on_popup_menu): Update komentáøe.

2002-05-20  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/list.py (List._create_grid): Oprava alignment.

2002-05-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._on_popup_menu): Oprava formátování kódu.

2002-05-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._ListTable.row): Pro èísla øádkù mimo
	rozsah tabulky vracej None.

	* lib/form/event.py (wx_callback.process_event): `last_user_event'
	updatuj a¾ po zavolání callbacku.
	(last_user_event): Pøejmenováno na `_last_user_event'.
	(last_user_event): Nová funkce.

	* lib/form/command.py: Pøidán List alias pro Form.COMMAND_PRINT.
	(Command.__init__): `key' smí být i sekvence.

	* lib/form/dialog.py (GenericDialog.__init__): Volej konstruktor
	pøedka.

	* lib/form/screen.py (_Keymap): Nová tøída.
	(KeyHandler.__init__): Nové atributy `_keymap' a
	`_current_keymap'.
	(KeyHandler.on_key_down): Pøepracováno pro víceklávesové pøíkazy.
	(WxKey.event_key): Nová metoda.
	(WxKey._RTRANS_TABLE): Nový atribut.
	(KeyHandler._maybe_invoke_command): Nová metoda.
	(KeyHandler.__init__): Nový atribut `_key_guardian'.
	(KeyHandler._get_keymap): Nová metoda.
	(MItem.__init__): Do menu doplòuj klávesu jen pro jednoklávesové
	pøíkazy; doplnìna podpora pro víceklávesové pøíkazy.

2002-05-16  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/search.py (SFDialog._save_values): Pøi mazání podmínky
	odstraòuj také prvky ze self._selectors, nejen ze self._defaults.

2002-05-15  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/event.py (last_user_event): Nová promìnná.
	(wx_callback.process_event): Nastavuj ji.

	* lib/data/types_.py (Time._regexp_spec, DateTime._regexp_spec):
	Opraveny chyby v regulárním výrazu.
	(Time._validate): Opraven pøeklep v docstringu (je to èas, ne
	datum).

2002-05-13  Pavel Hanak  <hanak@brailcom.cz>

	* lib/data/types_.py (Time): Nový typ.
	(DateTime._regexp_spec): Kontroluj také formát vkládaného èasu.
	(Time._regexp_spec): Kontroluj také formát vkládaného èasu.

	* lib/data/dbdata.py (DBDataPostgreSQL._pg_value): Pøidána podpora
	typu 'time'.

2002-05-13  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (PopupForm.run): Volej `unlock_callbacks'.

2002-05-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/util.py (copy_stream): Pøidáno logování.

	* lib/output/formatter.py (LoutFormatter._format): Pøidáno
	logování.

	* lib/form/dialog.py (GenericDialog.run): Pøed nahozením dialogu
	volej `unlock_callbacks'.

	* lib/form/application.py (Application.run): Pøidána podpora pro
	nethreadové sledování pøeru¹ení a vypnutí sledování pøeru¹ení.
	(Application.popup_form, Application._call_current_window):
	Ignoruj UserBreakException..

	* lib/form/event.py (interrupt_watcher): Zru¹en zapomenutý
	argument `stop_flag'.
	(interrupt_init): Nová funkce.
	(interrupt_watcher): Vyu¾ívej ji.
	(wx_callback.process_event): Místo nahazování výjimky nastav
	`_interrupted' a vra» wx.TRUE.
	(wx_callback.process_event): Pøed zahájením zpracování u¾ivatelské
	události resetuj `_interrupted'.
	(_is_user_event): Nech» wxCommandEvent není u¾ivatelská událost.
	(free_callback): Nová funkce.
	(UserBreakException.__init__): Nová metoda.
	(yield_): Nuluj `_interrupted'.
	(_main_pid): Nová promìnná.
	(interrupt_init): Zmìnìny argumenty.
	(interrupt_watcher.watcher): Zohlednìna pøedchozí zmìna.
	(yield_): Pøeru¹ení provádìj jen v hlavním threadu.

2002-05-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/__init__.py: `event' importuj jako první, ne poslední.

	* lib/form/event.py (wx_callback.process_event): Doplnìn chybìjící
	argument volání `is_event_of_key'.
	(interrupt_watcher): `last_event' pøesunuto do `watcher',
	`_watcher_pid' pøiøazuj také a¾ tam.
	(_is_user_event): Nová funkce.
	(wx_callback.process_event): `_current_event' nastavuj pouze pro
	pøíkazové události.
	(interrupt_watcher): Nový argument `stop_flag'.
	(interrupt_watcher.watcher): Je-li
	lib.form.application._application None, skonèi.

	* lib/form/application.py (Application.run): Nainstaluj sledování
	událostí, vèetnì háèku do `log'.
	(Application.on_command): Ignore UserBreakException.

2002-05-10  Petr Malivanek  <malivanek@akont.cz>

	* lib/data/types_.py (CodebookNull): Nový èíselníkový typ
	umo¾òující ponechat prázdnou hodnotu.

2002-05-09  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (HiddenField): Odstranìn neaktuální komentáø.

	* lib/form/list.py (List.refresh): Oprava docstringu.

2002-05-08  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._ListTable._EditedRow.__init__): Nový
	argument `computer_data'.
	(List._ListTable.__init__, List._ListTable.edit_row): Volej
	_EditedRow s `computer_data'.
	(List._ListTable.__init__): Nový atribut `_computer_data'.
	
	* lib/form/list.py (List._ListTable.__init__): Nový argument
	`computer_data'.
	(List._ListTable._fetch, List._ListTable.rewind): Vyu¾ívej
	`_presented_row'.
	(List._create_grid): Pødedávej konstruktoru _ListTable
	_computer_data.

	* lib/form/event.py (wx_callback): Pøidán assert na typ argumentù
	`evt_function' a `callback'.

	* lib/form/search.py (SFDialog._create_content.condition) 
	(SFDialog._create_content): Pøiøazení callbacku provádìj
	prostøednictvím `wx_callback'.
	* lib/form/screen.py (KeyHandler.__init__, Menu.create)
	(ButtonBar._add_button): Pøiøazení callbacku provádìj
	prostøednictvím `wx_callback'.
	* lib/form/output.py (PostscriptViewer.__init__)
	(PrintForm.__init__, PrintForm._create_controls): Pøiøazení
	callbacku provádìj prostøednictvím `wx_callback'.
	* lib/form/list.py (List._create_grid, ListForm.__init__):
	Pøiøazení callbacku provádìj prostøednictvím `wx_callback'.

	* lib/form/inputfield.py (_TextValidator.__init__)
	(InputField._init_controls, TextField._create_text_control)
	(Invocable._create_widget, CodeBookField._create_widget):
	Pøiøazení callbacku provádìj prostøednictvím `wx_callback'.
	* lib/form/form.py (Form.__init__, EmbeddedEditForm.__init__)
	(EditForm._create_buttons, DualForm.__init__): Pøiøazení callbacku
	provádìj prostøednictvím `wx_callback'.
	* lib/form/dialog.py (GenericDialog._create_dialog_elements)
	(InputDialog._create_content, Calendar._create_content): Pøiøazení
	callbacku provádìj prostøednictvím `wx_callback'.
	* lib/form/application.py (Application.OnInit): Pøiøazení
	callbacku provádìj prostøednictvím `wx_callback'.

2002-05-07  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/application.py (Application.on_command): Neimportuj
	`config'.

	* lib/form/command.py (Application.COMMAND_BREAK): Nový pøíkaz.

	* lib/form/__init__.py: Importuj `event'.

	* lib/form/event.py: Nový modul.

2002-05-07  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField._skip_navigation): Nový
	argument 'object'. Pøedávej jej volání 'self._form.navigate()'.
	(TextField._create_text_control): Volání
	'self._on_key_down_multiline()' pøedávej vytváøený 'control'.
	(TextField._on_key_down_multiline): Nový argument
	(Invocable._create_widget): Volání 'self._skip_navigation()'
	pøedávej také 'button' jako argument 'object'.
	(CodeBookField._create_widget): Volání 'self._skip_navigation()'
	pøedávej také 'display' jako argument 'object'.

	* lib/form/form.py (EmbeddedEditForm.navigate): 
	Ve verzi wxWindows ni¾¹í ne¾ 2.3 zahazuj argument 'object'.
	Pokud je dán 'object', volej 'nav.SetCurrentFocus(object)'.


2002-05-06  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (Form.__init__): Inicializuj atribut
	'self._result' na None.
	(Form.run): Vracej hodnotu 'self._result'.
	(PopupForm.run): N8vratovou hodnotu metody 'ShowModal()' zahazuj -
	je k nièemu. Namísto ní vracej hodnotu 'self._result'
	(EmbeddedEditForm._edit_insert): Nastav 'self._result' na vlo¾ený
	øádek.
	(EmbeddedEditForm._edit_update): Nastav 'self._result' na updatovaný
	øádek.
	(EmbeddedEditForm._run_with_lock): Pokud se nepodaøí zamknout
	øádek, vracej None.

	* lib/form/application.py (Application.dialog): Nová metoda.

2002-05-05  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/dialog.py (GenericDialog._create_dialog_elements): Nová
	metoda.
	(GenericDialog._create_dialog): Vyu¾ívej ji.
	(GenericDialog.rebuild): Nová metoda.

	* lib/form/search.py (SFDialog.__init__): Nech» `_defaults' je
	inicializováno na prázdné dictionary; nový atribut
	`_default_item'.
	(SFDialog._create_content): Nový argument `number_of_conditions',
	vytváøí nyní zadaný poèet podmínek, nové tlaèítko "Pøidat" a
	tlaèítka "Odebrat".
	(SFDialog.__init__): Nový atribut `_number_of_conditions'.
	(SFDialog._on_add): Nová metoda.
	(SFDialog._on_remove): Nová metoda.
	(SFDialog._create_content.condition): Nepøidávej do výbìru sloupce
	_NO_COLUMN.
	(SFDialog._save_values): Nový argument `exclude'.
	(SFDialog._save_values): Na zaèátku vyma¾ `_defaults'.
	(SFDialog._selected_condition): Na Strings provádìj validaci pouze
	pokud hodnota neobsahuje wildcard.
	(SFDialog._selected_condition) 
	(SFDialog._create_content.condition, SFDialog._on_suck):
	Zohlednìno zru¹ení vkládání _NO_COLUMN.

2002-05-04  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Codebook): Pøepracováno, aby èíselník mohl
	obsahovat i sloupce jiného typu ne¾ String.
	(Codebook.columns): Nová metoda.

	* lib/data/_test.py (_DBTest.setUp): Do `xcosi' pøidána polo¾ka
	obsahující NULL.
	(DBDataDefaultClass.setUp): Nový atribut `dcosi'.
	(DBDataDefaultClass.check_select_condition): Pøidán NULL test.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_coalesce): Neprovádìj
	COALESCE na implicitní hodnotu, pouze pøetypuj.
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql.relop):
	O¹etøena nutnost pou¾ívat pro hodnoty NULL operátor IS.
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Èíselníky
	zpracovávej stejnì jako sekvence.
	(DBDataPostgreSQL._pg_value): U èíselníkù exportuj jejich
	jednotlivé hodnoty.
	(DBDataPostgreSQL._pg_create_make_row_template): Pøidávej k typu
	èíselníku i typy jeho sloupcù.

2002-05-03  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application.popup_form): Vracej
	výsledek metody 'run()' zobrazovaného formuláøe.

	* lib/form/form.py (EmbeddedEditForm.__init__): Nový argument
	'prefill'.
	(EmbeddedEditForm._set_row): Pøedávej 'prefill' konstruktoru
	'PresentedRow'.
	(EditForm.__init__): Nový argument 'prefill'.

	* lib/presentation/field.py (PresentedRow.__init__): Nový argument
	'prefill'.
	(PresentedRow._init_row): Nový klíèový argument 'prefill'.
	(PresentedRow._init_row.genval): Pokud byl specifikován argument
	'prefill', pokus se získat výchozí hodnotu ze slovníku 'prefill'.

2002-05-02  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/command.py: Pøidána dokumentace k "u¾ivatelským pøíkazùm".
	(Command.__init__): Nový argument 'handler'.
	(Command.handler): Nová metoda.

	* lib/form/list.py (List.on_command): Pøidej podporu pro
	"u¾ivatelské pøíkazy" -- volej '_on_handled_command()'.
	(List._on_handled_command): Nová metoda.
	(BrowseForm._popup_menu): Pokud je specifikací definováno
	u¾ivatelské menu, pøidej jej na konec.

	* lib/form/spec.py (ViewSpec.__init__): Nový argument 'popup_menu'.
	(ViewSpec.title): Úprava docstringu.
	(ViewSpec.popup_menu): Nová metoda.

2002-05-01  Milan Zamazal  <pdm@brailcom.org>

	* lib/presentation/field.py (PresentedRow.__init__): Nový atribut
	`_cache'.
	(PresentedRow.__getitem__): Pou¾ívej cache.
	(PresentedRow._init_row, PresentedRow.__setitem__): Nuluj cache.

	* lib/form/list.py (List._ListTable._DisplayCache): Nová tøída.
	(List._ListTable.__init__): Nový atribut `_cache'.
	(List._ListTable.GetValue): Pou¾ívej cache.

2002-04-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/markup.py: Hvìzdièkovì importuj lib.output.
	(Group): Zru¹en parametr `fit'.

	* lib/output/formatter.py (LoutFormatter): Stanovena a zohlednìna
	pravidla formátování generovaného kódu pro Lout.
	(_INTRO): Nové funkce @margined, @gmargined, @ghline, @gvline.
	(LoutFormatter._format_data_table): Separuj tabulku pøes @LLP.

2002-04-30  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm._on_next_record): Pokud jsme
	narazili na první nebo poslední záznam, zobrazíme pøíslu¹nou
	stavovou hlá¹ku.

	* lib/form/application.py (Application.OnInit): 'self._init()'
	volej je¹tì pøed vytváøením menu apod. (kvùli pøiøazení horkých
	kláves).

2002-04-29  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (LoutFormatter._MARK_PROCESSORS):
	Pøidány znaèky Italic, Roman, FontSize, FontFamily.
	(LoutFormatter._f_wrap): Nová metoda.
	(LoutFormatter._format_center, LoutFormatter._format_bold)
	(LoutFormatter._format_box): Vyu¾ívej ji.
	(LoutFormatter._format_italic, LoutFormatter._format_roman)
	(LoutFormatter._format_font_size)
	(LoutFormatter._format_font_family): Nové metody.
	(LoutFormatter._font): Nová metoda.
	(LoutFormatter._process): Vyu¾ívej ji.
	(LoutFormatter._SPECIAL_LOUT_CHARS): Pøed @LLP vkládej mezeru.
	(LoutFormatter._format_vcenter): Implementováno.
	(LoutFormatter._format_group): Pøidána podpora pro vertikální a
	horizontální spojování, boxy a pro balancování.
	(_INTRO): Nové funkce @vgroup, @hgroup, @box, @vline, @hline; nové
	makro @smallmargin.
	(LoutFormatter._format_data_table): ©káluj jen smìrem dolù, je-li
	tøeba.
	(LoutFormatter._format_box): Zru¹eno.
	(LoutFormatter._MARK_PROCESSORS): Zru¹ena znaèka Box.
	(LoutFormatter._format_data_table): Èásteènì implementován
	separátor.
	(LoutFormatter): Nový argument `indent' pro v¹echny formátovací
	funkce.

	* lib/output/markup.py (Italic, Roman, FontSize, FontFamily): Nové
	znaèky.
	(Box): Zru¹eno.
	(Group.KWARGS): Nový argument `boxed', zru¹en argument
	`expand_elements'.

2002-04-29  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List.UI_SORTING): Nová UI konstanta.
	(List.SORTING_CYCLE_DIRECTION): Nová konstanta.
	(List.SORTING_NONE): Nová konstanta.
	(List.__init__): Nový argument 'popup_menu'.
	(List._switch_sorting): Doplnìna dokumentace. Pøidána podpora pro
	cyklické pøepínání zpùsobu tøídìní a explicitní vypnutí tøídìní.
	(List._on_label_left): Volej pøíkaz 'COMMAND_SORT_COLUMN' s
	argumentem 'ditrection=List.SORTING_CYCLE_DIRECTION'.
	(List._on_label_right): Zobraz kontextové popup menu sloupce,
	namísto zmìny tøídìní (to lze nyní cyklicky pøepínat pouze levým
	tlaèítkem).
	(List._create_grid): Nastav o¹etøení události
	'EVT_GRID_CELL_RIGHT_CLICK' voláním metody '_on_popup_menu()'
	(List._on_popup_menu): Nová metoda.
	(List.on_ui_event): Pøidána podpora pro 'UI_SORTING'.
	(ListForm.__init__): Vytváøené instanci 'List' pøedávej také
	argument 'popup_menu'.
	(ListForm._popup_menu): Nová metoda.
	(BrowseForm._popup_menu): Nová metoda.

2002-04-29  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/screen.py (MItem.__init__): Pøebírej horkou klávesu z
	pøíkazu pouze pokud nejsou specifikovány argumenty pøíkazu.

2002-04-25  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (LoutFormatter._format_data_table):
	Pou¾ívej pro buòky novì definované funkce @lcell a @rcell,
	nepou¾ívej pro tvorbu hlavièek tabulky, nech» závìreèný pøebyteèný
	symbol øádku je @Null místo {}.
	(_INTRO): Definovány nové pomocné funkce, neimportuj `tbl'.
	(LoutFormatter._format_data_table): Nastavuj øádky pøesnì na ¹íøku
	strany.

2002-04-25  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (resolve): Pokud má políèko nulovou
	¹íøku, nech» je instancí 'HiddenField'.
	(InputField._init_controls): Nová metoda
	(InputField.__init__): Èást kódu pracující se
	'self._controls' pøesunuta do '_init_controls()'.
	(InputField.hidden): Zru¹eno.
	(HiddenField.hidden): Zru¹eno.
	(HiddenField._init_controls): Nová metoda.
	(HiddenField._enable_event_handlers): Nová metoda.
	(HiddenField._disable_event_handlers): Nová metoda.
	(HiddenField._create_label): Nová metoda.
	(HiddenField.get_value): Pokud doposud nebylo nastaveno
	'self._value', vracej None.

	* lib/form/form.py (EmbeddedEditForm._pack_fields): Pøidávej
	políèko do gridu pouze pokud nejde o 'HiddenField'.

	* lib/data/types_.py (Enumeration.ERRMSG_INVALID_ENUM_VALUE): Nová
	konstanta.
	(Enumeration._validate): Vyu¾ívej
	'Enumeration.ERRMSG_INVALID_ENUM_VALUE'.

2002-04-24  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (MultiTextField._set_value): Jako
	speciální pøípad hodnoty argumentu values pøijímej prázdný
	øetìzec, který¾to pøeveï na sekvenci prázdných øetìzcù, èím¾to
	vyma¾ v¹echna políèka.

	* lib/form/form.py (PopupForm._on_parent_close): Neloguj uzavøení
	formuláøe.

2002-04-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/util.py (Pipe): Pøepracováno, místo potomka Queue.Queue
	se nyní jedná o specializovanou, efektivnìj¹í implementaci.

2002-04-23  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List._recreate_grid): Volej
	'oldg.GetParent().RemoveChild()' pouze pokud 'oldg.GetParent()'
	není None.

	* lib/form/screen.py (MItem): Nová promìnná tøídy.
	(MItem.__init__): Pokud je horká klávesa ji¾ pou¾ita, ignoruj ji a
	zaloguj výhrù¾nou zprávu.

2002-04-23  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (PostscriptViewer.show_page): Opraveno
	zji¹tìní celkového poètu stránek.

	* lib/util/_test.py (Pipe.check_multi_cc): Nový test.

	* lib/util/util.py (Pipe.__init__): Argument `cc' nyní mù¾e být
	i sekvencí streamù.
	(Pipe.close, Pipe.write): Zohlednìna pøedchozí zmìna.

	* lib/output/exception.py: Nový modul.

	* lib/output/__init__.py: Importuj `exception'.

	* lib/output/formatter.py (LoutFormatter._MARK_PROCESSORS):
	Pøidány znaèky VCenter, Box a Group.
	(LoutFormatter._format_vcenter, LoutFormatter._format_box)
	(LoutFormatter._format_group): Nové metody.
	(FormattingException, TemplateException): Pøesunuto do
	`exception.py'.
	(_INTRO): Odstranìno @PageWidth.
	(LoutFormatter._lout): Zformátovaný dokument pøi ladìní ukládej
	pøes cc pípy, ne samostatným pøedzpracováním.
	(LoutFormatter._format_data_table): Odstranìna podpora pro textový
	výstup.
	(LoutFormatter._SPECIAL_LOUT_CHARS): Pøidáno \n.

	* lib/output/markup.py (DataTable.__init__): Nový argument a
	atribut `separator_height'.
	(DataTable.separator_height): Nová metoda.
	(Center): Jedná se o horizontální centrování, pouze zmìna
	docstringu.
	(VCenter): Nová znaèka.
	(Box): Nová znaèka.
	(Group): Nová znaèka.
	(_Container.__init__): Pøijímej libovolné klíèované argumenty.
	(_Container.KWARGS): Nový atribut.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Místo `issubclass' pou¾ívej `isinstance'.
	(DBDataPostgreSQL.update): Pøi výpisu nových dat na `row' aplikuj
	`str'.

2002-04-22  Tomas Cerha  <cerha@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Oprava: 'btype' je ji¾ instancí, tak¾e pro assert na tøídu
	pou¾ívej 'btype.__class__' a pøípadnou instanci výchozí tøídy
	'Codebook' pøiøazuj pøímo do promìnné 'btype', kterou¾to potom také
	pou¾ívej v¹ude namísto 'type_instance'.

	* lib/presentation/field.py (PresentedRow.__setitem__): Nastavuj
	hodnotu a pøepoèítávej bez ohledu na pøedchozí hodnotu.

	* lib/form/inputfield.py (InputField._on_change): Nová metoda.
	(InputField._post_process): Nová metoda.
	(InputField._on_change_hook): Nová metoda.
	(InputField.init, InputField._enable_event_handlers): Nová metoda.
	(InputField._disable_event_handlers): Nová metoda.
	(InputField.init): Zaka¾ po dobu nastavování hodnoty o¹etøování
	událostí a volej 'self._on_change()' explicitnì s 'notify=FALSE'.
	(InputField.set_value): Pokud je hodnota None, neprovádìj nic,
	pouze vra» FALSE.
	(TextField._create_text_control): Namísto 'self._on_text()'
	vyu¾ívej 'self._on_change()' k o¹etøení EVT_TEXT.
	(TextField._on_text): Zru¹eno.
	(TextField._post_process): Zru¹eno.
	(TextField._on_text_hook): Zru¹eno.
	(MultiTextField._set_value): V assertové hlá¹ce vypisuj id políèka.
	(CodeBookField._on_text_hook): Pøejmenováno na '_on_change_hook'. 

2002-04-22  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL.close)
	(DBDataPostgreSQL.select): Zahájení a ukonèení SELECTu loguj pouze
	jako DEBUG.

2002-04-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (PostscriptViewer.number_of_pages)
	(_Ghostscript.number_of_pages): Vrací druhý argument, kterým je
	indikátor koneèného stavu poètu stránek.
	(PrintForm.__init__): Nový atribut `_total_pages'.
	(PrintForm._create_controls): Jestli¾e je poèet stránek koneèný,
	nastav `_total_pages'.
	(PrintForm._show_page): Poèet stránek nastavuj jen tehdy, není-li
	ji¾ definitivní.
	(PrintForm.OnIdle): Nová metoda.
	(PrintForm.__init__): Registruj ji jako idle callback.
	(PrintForm._on_last_page): Zohlednìna zmìna návratové hodnoty
	`number_of_pages'.

2002-04-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (PrintForm.Close): Nová metoda.
	(PrintForm.__init__): Nový atribut `_current_stream'.
	(PrintForm._create_controls): Ukládej rouru do `_current_stream'.
	(_Ghostscript._render): Informaci o ukonèení ukládej do nového
	atributu `_finished'.
	(_Ghostscript.finished): Nová metoda.
	(PrintForm._create_controls): Vytváøej prvky pro pohyb po
	stránkách a zoomování.
	(PrintForm._on_previous_page, PrintForm._on_next_page)
	(PrintForm._on_first_page, PrintForm._on_last_page): Nové metody.
	(PrintForm.on_command): Vyu¾ívej je.
	(_Ghostscript.__init__, _Ghostscript._render): Nový argument
	`zoom'.
	(PostscriptViewer.__init__): Nápodobnì.
	(PostscriptViewer.show_page): Pøi po¾adavku na vzdálenou stránku
	èekej na její vygenerování.
	(PostscriptViewer._wait_for_gs): Nová metoda.
	(PostscriptViewer.number_of_pages): Nová metoda.
	(PostscriptViewer.show_page): Vracej èíslo zobrazené stránky.
	(PrintForm._on_goto_page): Nová metoda.
	(PrintForm._on_zoom): Nová metoda.
	(PrintForm._show_page): Nastavuj èísla stránek v prvcích
	u¾ivatelského rozhraní.
	(PostscriptViewer.current_zoom): Nová metoda.
	(PrintForm._on_zoom_in_, PrintForm._on_zoom_out): Nové metody.
	(PrintForm._zoom): Nová metoda.
	(PrintForm._on_widget_key): Nová metoda.

	* lib/util/util.py (Pipe.__init__): Nový atribut `_closed'.
	(Pipe.write): Je-li roura uzavøena, vyvolej ValueError.
	Zdokumentováno toto¾né chování pro cc stream.
	(Pipe.close): Nastavuj `_closed'.

	* lib/output/formatter.py (LoutFormatter._lout.p): Ignoruj
	pøípadné ValueError z `_process'.
	(LoutFormatter._lout): Dojde-li k uzavøení výstupního streamu,
	uzavøi vstup Lout.
	(LoutFormatter._lout): Doplnìny logovací hlá¹ky.

2002-04-19  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/presentation/field.py (RefSpec): Nová tøída.
	(FieldSpec.__init__): Zmìna dokumentace a assertù související se
	zavedením 'RefSpec'.

	* lib/form/inputfield.py (InputField.guardian): Nová metoda.
	(_create_controls): Vyu¾ívej 'RefSpec'.
	(ListField._set_value): Vyu¾ívej 'RefSpec'. Vytváøej 'self._list_rows'.
	(ListField._selected_item_key): Nová metoda.
	(ListField._invoke_edit_form): Implementováno.
	(ListField._invoke_browse_form): Implementováno.

	* lib/form/list.py (ListForm.OnSetFocus): Doplnìn argument
	nepovinný 'event'. Pokud je pøedán, volej 'event.Skip()'
	(BrowseForm.set_callback): Argumenty '*args' a '**kwargs'
	nahrazeny 'kind' a 'function'. Volej 'self._list.setcallback()'
	pouze pokud je callback definován v 'self._list', jinak volej
	metodu pøedka.

	* lib/form/form.py (Form.set_callback): neprovádìj assert pøes
	výèet, ale o nìco inteligentnìji (snad).
	(Form.focus): Volej také `self.SetFocus()'.
	(EmbeddedEditForm.__init__): Nový klíèový argument
	'guardian'. Pøedávej jej konstruktoru pøedka.
	(DualForm._select_form): Nevolej 'defucus()' na druhý formuláø -
	to je provedeno automaticky ve 'focus()' prvního.
	(DualForm.OnSetFocus): Vracej wx.TRUE
	(BrowseDualForm.__init__): Nevolej zbyteènì 'focus()' hlavního
	formuláøe.
	(DescriptiveDualForm.__init__): Nevolej zbyteènì 'focus()' hlavního
	formuláøe.
	(EditDualForm.__init__.main_selection): Zru¹eno.
	(EditDualForm.__init__): Nenastavuj EVT_FOCUS hlavního formuláøe.
	(EditDualForm._create_main_form): Pøedávaj konstruktoru formuláøe
	také argument 'guardian=self'.
	(EditDualForm.on_command): Zru¹eno.

2002-04-17  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (PrintForm._on_print_): Nezapínej busy
	cursor, stejnì to nefunguje.  Spou¹tìj tisk jako thread,
	tj. neblokující u¾ivatelské rozhraní.

	* lib/output/formatter.py (LoutFormatter.__init__): Nový atribut
	`_formatted_document_lock'.
	(LoutFormatter._lout): Cachuj vygenerovaný loutový zdroják.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Pøidána podpora pro u¾ivatelské èíselníkové typy.

	* lib/util/_test.py (Pipe.check_cc): Nový test.

	* lib/util/util.py (Pipe.__init__): Nový argument a atribut `cc'.
	(Pipe.write): Kopíruj data do `cc'.
	(Pipe.close): Uzavøi i `cc'.
	(mktempdir): Poèet pokusù o vytvoøení adresáøe zvý¹en na 1000.
	(Pipe.close): Pøidány doplòující informace do docstringu.

2002-04-17  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List.on_ui_event): Zkus volat 'on_ui_event()'
	aktuálního editoru (vstupního políèka).

	* lib/form/screen.py (MenuBar): Rozsáhlý pøepis. Zru¹ena stará
	nepou¾ívaná funkcionalita a zjednodu¹ena implementace. Oprava
	dokumentace.
	(MenuBar.MENU_ID_SEPARATOR): Zru¹eno.
	(MenuBar.__init__): Argument 'menuitems' pøejmenován na
	'menus'. Ulo¾ 'parent' do 'self._parent'. Zru¹eny èachry s
	titulkem (to nyní o¹etøuje sama metoda 'MItem.title()'). Vyu¾ívej
	'Menu.create()'. Do 'self._menus' neukládej sekvenci v¹ech mo¾ných
	vlastností, ale rovnou instanci 'Menu'.
	(MenuBar._assemble_menu): Zru¹eno (nahrazeno 'Menu.create()').
	(MenuBar.__getitem__): Zru¹eno (ji¾ není potøeba).
	(MenuBar.keys): Zru¹eno (ji¾ není potøeba).
	(MenuBar.activate): 'self._menus' neobsahuje sekvence v¹emo¾ných
	vlastností, ale rovnou instance 'Menu'. Vyu¾ívej 'Menu.create()'.
	(Menu): Update dokumentace
	(Menu.__init__): Zru¹eny zbyteèné hlá¹ky u assertù.
	(Menu.items): Zru¹eno.
	(Menu.create): Nová metoda nahrazující 'MenuBar._assemble_menu()'
	kvùli znovupou¾itelnosti pro kontextová menu.  Implementace
	podstatnì zjednodu¹ena.
	(MItem.__init__): Pokud není specifikována 'hotkey', zjisti ji z
	'command', pokud ano, zmìò klávesu pøíkazu na danou 'hotkey'.
	Pokud existuje 'Hotkey', pøidej ji do 'title'.

	* lib/form/inputfield.py (InputField.UI_IS_MODIFIED): Nová
	konstanta.
	(InputField.UI_IS_ENABLED): Nová konstanta.
	(InputField.__init__): Pøiøaï událost vyvolání kontextového menu
	na kliknutí pravého tlaèítka my¹i.
	(InputField._menu): Nová metoda.
	(InputField.on_ui_event): Nová metoda.
	(InputField.on_command): Nová metoda.
	(InputField._on_popup_menu): Nová metoda.
	(InputField._on_reset): Nová metoda.
	(Invocable.on_command): Nakonec volej 'InputField.on_command()'.
	(DateField._menu): Nová metoda.
	(CodeBookField._menu): Nová metoda.
	(ListField.UI_LIST_ITEM_SELECTED): Nová konstanta.
	(ListField._create_controls): Vytvoøený 'ListCtrl' ulo¾ do
	atributu 'self._list'.
	(ListField._selected_item): Nová metoda.
	(ListField._set_value): Vyu¾ívej 'self._list'.
	(ListField.on_ui_event): Nová metoda.
	(ListField.on_command): O¹etøuj 'self.COMMAND_INVOKE_EDIT_FORM' a
	'self.COMMAND_INVOKE_BROWSE_FORM'.  Nakonec volej
	'InputField.on_command()'
	(ListField._menu): Nová metoda.
	(ListField._invoke_edit_form): Nová metoda (prototyp).
	(ListField._invoke_browse_form): Nová metoda (prototyp).
	(InputField.on_ui_event): Zru¹eno TODO.

	* lib/form/form.py (EmbeddedEditForm.on_ui_event): Nejprve zkus
	volat 'on_ui_event()' aktuálního vstupního políèka.
	(EmbeddedEditForm.on_command): Pøíkazy aktuálního vstupního
	políèka volej i kdy¾ je formuláø needitovatelný.

	* lib/form/command.py (InputField.COMMAND_RESET): Nový pøíkaz.
	(ListField.COMMAND_INVOKE_EDIT_FORM): Nový pøíkaz.
	(ListField.COMMAND_INVOKE_BROWSE_FORM): Nový pøíkaz.

	* lib/form/application.py (Application._menu_id): Metoda zru¹ena
	jako nepou¾ívaná.
	(Application.OnInit): Kosmetické úpravy + pøesunutí nastavení
	pozice loga do metody '_on_frame_size()'.
	(Application._on_frame_size): Nastav pozici loga do støedu okna.

2002-04-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/util.py (mktempdir): Pøidávej do generovaného jména
	adresáøe své PID.

	* lib/form/output.py (PostscriptViewer.show_page): Nepokou¹ej se
	zobrazit stránku, pokud dokument ¾ádnou nemá.
	(_Ghostscript.page_image): Kontroluj, zda odpovídající soubor
	existuje, o¹etøení výjimky nestaèí, kvùli wxWindows.
	(_Ghostscript._render.feedgs): Ghostscript spou¹tìj pøes popen2,
	nikoliv popen.

	* lib/output/formatter.py (LoutFormatter): V¹echny metody
	`_format*' nyní mají nový argument `stream' a zapisují do streamu
	místo vracení øetìzcù.
	(LoutFormatter._process): Zohlednìna pøedchozí zmìna.
	(LoutFormatter._lout): Formátování textu je nyní také asynchronní.

2002-04-16  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/data/data.py (Row.update): Ignoruj polo¾ky vstupních dat s
	klíèem, který nepatøí do Row.

	* lib/presentation/field.py (PresentedRow.__setitem__): O¹etøuj
	KeyError pøi zji¹tìní steré hodnoty.
	(PresentedRow.__setitem__): Neo¹etøuj KeyError pøi zji¹tìní steré
	hodnoty...

2002-04-15  Milan Zamazal  <pdm@brailcom.org>

	* ebas (_install_gettext, go): Neimportuj lib.util hvìzdièkovì.

	* lib/form/application.py (Application._resolver_directory):
	config.defdir -> config.def_dir.

	* config/config.py: Pøegenerováno.

	* lib/util/configuration.py (Configuration._Option_defdir):
	Pøejmenováno na _Option_def_dir'.
	(Configuration.__init__): Doplnìn docstring.  Implicitní hodnota
	argumentu `command_line' je nyní None.
	(Configuration._parse_command_line_options): Pøi nezpracovaných
	volbách nevyvolávej výjimku, nýbr¾ je pøiøaï do sys.argv.

	* lib/form/output.py (PrintForm._create_controls): Místo
	postscriptových dat prohlí¾eèi pøedávej asynchronnì plnìný stream.
	(PrintForm._run_formatter): Nová metoda.
	(PrintForm._on_print_): Místo postrscriptových dat pou¾ívej
	`_run_formatter'.
	(PostscriptViewer.__init__): Místo hotových postscriptových dat
	pøijímej datový stream.
	(_Ghostscript.__init__, _Ghostscript._render): Nápodobnì.
	(_Ghostscript._render): Pøepracováno do asynchronní podoby.

	* lib/util/_test.py (Pipe): Nová sada testù.

	* lib/util/util.py (Pipe): Nová tøída.
	(copy_stream): Nový argument `in_thread'.

	* lib/output/formatter.py (_INTRO): Zru¹ena definice @EBASOutput.
	(LoutFormatter._process): Zohlednìna pøedchozí zmìna.
	(LoutFormatter._lout): Pro zji¹tìní adresáøe doèasných souborù
	pou¾ívej config.tmp_dir.
	(LoutFormatter._lout): Spu¹tìní Lout pøes popen2 posunuto a¾ tìsnì
	pøed ètení rour, díky tomu asynchronní zpracování nevytuhne.

2002-04-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/application.py (Application.OnInit): Vý¹ka frame
	zvìt¹ena na 600.  Zobrazuj logo.

	* lib/util/_test.py (ProgramError): Zru¹eno.
	(Mktempdir): Nová sada testù.

	* lib/util/util.py (mktempdir): Nová funkce.
	(FileError): Nová výjimka.

	* config/config.py: Pøegenerováno.

	* lib/util/configuration.py (Configuration._Option_tmp_dir): Nová
	volba.

	* lib/form/output.py (PostscriptException): Nová tøída.
	(_Ghostscript): Nová tøída.
	(PostscriptViewer): Nová tøída.
	(PrintForm._Preview): Zru¹eno.
	(PrintForm._create_controls): Místo _Preview pou¾ívej
	PostscriptViewer.
	(PrintForm.SetSize, PrintForm.OnSetFocus, PrintForm.on_command)
	(PrintForm._set_page): `_text' -> `_preview'.
	(PrintForm._fill_preview): Zru¹eno.
	(PrintForm.run): Zohlednìna pøedchozí zmìna.
	(PrintForm._on_print_): Nevolej formátovaè, pou¾ij ulo¾ený
	PostScript.
	(PrintForm.SetSize, PrintForm.OnSetFocus): Zru¹eno.

2002-04-13  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (_INTRO): Pøidáno @InitialBreak.

2002-04-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (PrintForm._fill_preview.format): Zru¹en
	argument `self', pou¾ívej pøímo `formatter'.

	* lib/output/formatter.py (LoutFormatter._format_data_table):
	Pou¾ívej jedinou instanci PresentedRow místo vytváøení mnoha
	uvnitø cyklu.
	(LoutFormatter._format_text): Pøepsáno -- vyoptimalizováno.
	(LoutFormatter._SPECIAL_LOUT_CHARS): Nová konstanta.
	(LoutFormatter.__init__): Nový atribut
	`_special_lout_chars_regexp'.
	(LoutFormatter._format_data_table): Pøepracováno, nyní se místo
	tabulek pou¾ívá obyèejné øádkové formátování bunìk, co¾ vede
	k výraznému zefektivnìní bìhu Lout.

2002-04-12  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (ListField.on_command): Nová metoda.

	* lib/form/form.py (_set_row): Zmìna v souvislosti s
	`field_change_callback' => `change_callback'.
	(EmbeddedEditForm._on_field_change): Pøejmenováno na
	`_on_row_change()' -- Jde o zmìny v row, ne v políèkách...
	(EmbeddedEditForm._set_row): Update komentáøe.

	* lib/presentation/field.py (PresentedRow.__init__): Argument
	`field_change_callback' pøejmenován na `change_callback' -- Jde o
	zmìny ve vlastním row, ne v políèkách...
	(PresentedRow.__setitem__): Nastavení hodnoty a spu¹tìní
	pøepoèítávání proveï pouze v pøípadì, ¾e je nová hodnota rùzná od
	pùvodní.
	(PresentedRow._recompute): Zmìna v souvislosti s
	`field_change_callback' => `change_callback'.

2002-04-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/search.py (SFDialog._on_suck): Nevolej na hodnotu
	získanou z ødku `export', pøedej ji pøímo.

2002-04-11  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/presentation/field.py (PresentedRow.editable): Oprava
	pøeklepu v docstringu.
	(FieldSpec.__init__): Oprava nìkterých nepøesností v docstringu.

	* lib/form/inputfield.py (InputField.init): Zru¹eno v¹e co
	souviselo s poèítáním výchozí hodnoty (to je teï v
	`PresentedRow'). Argument `value' je tím pádem povinný a nesmí být
	None.

	* lib/form/form.py (EmbeddedEditForm.field_change): Oprava
	pøeklepu v docstringu.
	(EmbeddedEditForm._set_row): Zru¹en argument `initial' a v¹e, co s
	ním souviselo.  U poèítaných sloupcù (KeyError) vùbec nevolej
	`f.init()'.  Nìjaké kosmetické úpravy.
	(EmbeddedEditForm.__init__): Nevolej `self._set_row()', ale rovnou
	vytvoø prázdný øádek voláním konstruktoru `PresentedRow'.

	* lib/data/types_.py (Codebook.default_value): Nová metoda.

2002-04-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (LoutFormatter._format_data_table):
	Místo display paragraph pou¾ívej left paragraph a celý odstavec
	centruj.  Velké tabulky rozdìl na nìkolik men¹ích.

2002-04-09  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/resolver.py (Resolver.get, Resolver._load_module):
	Doplnìn import `config'.

	* lib/form/__init__.py: Pøesunutý modul `resolver' vyøazen ze
	seznamu souborù updatu __dict__.

	* lib/form/form.py (SideBrowseDualForm._create_side_form): Místo
	standardního FilteredBrowseForm vytváøej vlastního potomka této
	tøídy, s podporou pøedání klíèe hlavního formuláøe formátovaèi
	výstupních sestav.

	* lib/form/list.py (BrowseForm._PrintResolver.get): Nedefinuj
	`page_header' a `page_footer'.
	(BrowseForm._formatter_data): Nová metoda.
	(BrowseForm._on_print_): Vyu¾ívej ji.

	* lib/output/formatter.py (LoutFormatter._MARK_PROCESSORS):
	Pøidáno Null a Center.
	(LoutFormatter._format_null): Nová metoda.
	(LoutFormatter._format_center): Nová metoda.
	(LoutFormatter._process): Pøidána podpora pro hlavièky a patièky
	stránek v INTRO.
	(_INTRO): Pøidány vkládací znaèky pro hlavièky a patièky stránek.
	(LoutFormatter.__init__): Doplnìny implicitní hodnoty pøi
	resolvování hlavièek a patièek stránek.
	(LoutFormatter.DATA_ROW): Nová konstanta.
	(LoutFormatter._format_data_item): Implementováno.
	(LoutFormatter._get_generic_resolver): Nová metoda.
	(LoutFormatter._format_data_table): Vyu¾ívej ji.

	* lib/output/markup.py (Center): Nová tøída.
	(Null): Nová znaèka.
	(DataItem): Mírnì zmìnìno pou¾ití znaèky, pouze dokumentaèní
	zmìna.

2002-04-09  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm._set_row): namísto
	`self._view.columns()' pou¾ívej `self._view.fields()' pro
	vytvoøení `PresentedRow'.

	* lib/form/spec.py (ViewSpec._recourse_group): Nová metoda.
	(ViewSpec.fields): Nová metoda.
	(ViewSpec.__init__): Pokud je zadán layout, proveï assert a volej
	`self._recourse_group()'.

2002-04-08  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (PrintForm._on_print_): Nech» je bìhem tisku
	zapnut busy cursor.

	* lib/output/formatter.py (LoutFormatter._format_data_table): Do
	prezentovaného øádku vkládej pouze viditelné sloupce.

	* lib/form/list.py (List._create_grid): Zru¹eny vìci týkající se
	poèítaèù.

	* lib/presentation/field.py (PresentedRow.__init__): Nový argument
	a atribut `computer_data'.
	(PresentedRow._process_fieldspec): Doplnìna podpora pro poèítané
	poèítaèe.

2002-04-07  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._sfs_columns): Volej `sfs_columns'
	s argumentem `widthfunc'.

	* lib/form/search.py (sfs_columns): Nový argument `widhtfunc',
	zdokumentován argument `labelfunc', vynechávej skryté sloupce.

	* lib/presentation/field.py (PresentedRow.__getitem__):
	Multipolíèka spojuj jen je-li `_singleline' pravda.

	* lib/form/inputfield.py (TextField._filter_func): Zjednodu¹eny
	vracené funkce, TRUE a FALSE nemají patent na pravdu.
	(TextField._on_text): Místo `recompute' volej `field_change'.

	* lib/form/form.py (EmbeddedEditForm._set_row): Nech» atribute
	`_row' nyní obsahuje PresentedRow.
	(EmbeddedEditForm._on_field_change): Nová metoda.
	(EmbeddedEditForm.__init__): Zru¹en atribut
	`_disable_recomputation'.
	(EmbeddedEditForm._set_row): Atribut `_row' je nyní instancí
	lib.presentation.PresentedRow; zjednodu¹eno.
	(EmbeddedEditForm.recompute): Zru¹eno.
	(EmbeddedEditForm.changed): Zjednodu¹eno, vyu¾ívej `_row'.
	(EmbeddedEditForm.field_change): Nová metoda.
	(EmbeddedEditForm._on_commit_form): Místo jednièky vracej wx.TRUE.
	(EmbeddedEditForm._pack_fields): Místo vlastního urèování
	editovatelnosti vyu¾ívej metodu `editable' prezentaèního øádku.
	(EmbeddedEditForm.init): Vyu¾ito vlastností prezentaèního øádku,
	znaènì zjednodu¹eno.
	(EmbeddedEditForm.__init__): Místo nastavení `_row' na None volej
	`_set_row'.
	(EmbeddedEditForm._edit_update): Zohlednìna zmìna typu `_row'.

2002-04-06  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._ListTable._EditedRow.__init__): Volej
	konstruktor lib.presentation.PresentedRow s argumentem `new',
	zru¹en atribut `new'.
	(List._ListTable._EditedRow.changed): Zru¹eno.
	(List._ListTable.editing, List._ListTable.GetValue): Upraveno
	s ohledem na zmìny v editaèních informacích.
	(List._edit_cell): Vyu¾ívej novou metodu `editable' prezentaèního
	øádku.
	(List._on_cell_commit): Pøi vstupu do editace dal¹ího políèka
	pøeskoè needitovatelná políèka.

	* lib/presentation/field.py (PresentedRow._key2col): Nová metoda.
	(FieldSpec.editable): Opraven docstring.
	(PresentedRow.__init__): Nový argument a atribut `new'.
	(PresentedRow._Column.__init__): Nový argument a atribut
	`editable'.
	(PresentedRow._process_fieldspec): Zohlednìna pøedchozí zmìna.
	(PresentedRow.editable): Nová metoda.
	(PresentedRow.new): Nová metoda.

	* lib/form/application.py (Application.on_command): Loguj
	`command' s prioritou vrácenou jeho metodou `log'.

	* lib/form/command.py (Command.__init__): Nový argument a atribut
	`log'.
	(List.COMMAND_SELECT_CELL): Pøidán argument `log'.
	(Command.log_kind): Nová metoda.

2002-04-06  Pavel Hanak  <hanak@brailcom.cz>

	* lib/data/dbdata.py (DBDataPyPgSQL._pg_query): Pøidej typ PgInt8
	(kvùli Postgresql7.2).
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Pøidej typ int8.

2002-04-05  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/inputfield.py (EnumerationField._set_value): Nech»
	`value' smí být i pøímo string.

	* lib/form/list.py (List._ListTable._EditedRow.__init__): Opraveny
	asserts na argumenty.
	(List._ListTable._CurrentRow.__init__): Nech» `the_row' je
	instance lib.presentation.PresentedRow.
	(List._ListTable._fetch, List._ListTable.rewind)
	(List._current_key, List._on_line_commit, List._on_edit)
	(List.select_row): Zohlednìna pøedchozí zmìna.
	(List._ListTable._EditedRow.__init__): Opraveno chybné urèení
	novosti sloupce.
	(List._ListTable.__init__): Volej konstruktor _EditedRow
	s argumentem `new'.

	* lib/form/screen.py (WxKey.__init__): Nová metoda.
	(WxKey._key2wx): Ukládej a znovu vyu¾ívej ji¾ jednou spoèítané
	hodnoty.
	(KeyHandler.__init__): Nový atribut `_wx_key'.
	(KeyHandler.on_key_down): Pou¾ívej stále jednu a tuté¾ instanci
	WxKey.
	(KeyHandler.__init__): Nový atribut `_commands'.
	(KeyHandler.on_key_down): Procházej `_commands' místo v¹ech
	atributù.
	(StatusBar.message): Text nastavuj pouze pokud se li¹í od
	stávajícího.

	* lib/util/util.py (_public_attributes): Nová promìnná.
	(public_attributes): Ukládej a znovu vyu¾ívej ji¾ jednou spoèítané
	hodnoty.

	* lib/presentation/field.py (PresentedRow._Column.__init__): Nový
	argument a atribut `default'.
	(PresentedRow._process_fieldspec): Zohlednìna pøedchozí zmìna.

2002-04-04  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._ListTable._EditedRow): Pøepracováno pro
	vyu¾ití lib.data.PresentedRow.
	(List._ListTable.__init__): Zohlednìna pøedchozí zmìna.
	(List._ListTable._Column.__init__): Vyøazena vìt¹ina atributù.
	(List._ListTable.__init__): Atribut `_columns' pøejmenován na
	`_column_info' a jeho obsah omezen.  Do nového atributu `_columns'
	se nyní pøiøazuje originální specifikace sloupcù.
	(List._ListTable.edit_row): Nekopíruj øádek vrácený `_get_row',
	není to tøeba.
	(List._ListTable.GetValue): Pøepracováno, zjednodu¹eno.
	(List._ListTable.GetTypeName, List._ListTable.GetColLabelValue)
	(List._ListTable.SetValue): _columns -> _column_info.

	* lib/presentation/field.py (PresentedRow.__init__): Nový atribut
	`_original_row'.
	(PresentedRow.original_row): Nová metoda.
	(PresentedRow.changed): Nová metoda.
	(PresentedRow.__init__): Pøidány asserts na typ `fieldspec' a
	`data'.
	(PresentedRow.__setitem__): Implementováno.
	(PresentedRow._recompute): Nová metoda.
	(PresentedRow.update): Zru¹eno.
	(PresentedRow._init_row): Vícero oprav.
	(PresentedRow.set_row): Nová metoda.

2002-04-03  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/__init__.py: Importuj hvìzdièkovì lib.presentation.

	* lib/form/spec.py (Computer): Pøesunuto do lib.presentation.

	* lib/util/util.py (position): Nový argument `key'.

2002-04-02  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (LoutFormatter._format_data_table):
	Vyu¾ívej lib.output.PresentedRow.

	* lib/presentation/field.py (FieldSpec.__init__): Místo
	`dir_const' pou¾ívej `public_attributes'.

	* lib/form/spec.py (dir_const): Zru¹eno.
	(GroupSpec.__init__): Místo `dir_const' pou¾ívej
	`public_attributes'.

	* lib/form/application.py (Application._top_level_exception):
	Debugger spou¹tìj a¾ po ostatních akcích.

2002-04-01  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/spec.py (Editable): Pøesunuto do lib.presentation.
	(SelectionType, Orientation, PostProcess, TextFilter) 
	(FieldSpec): Pøesunuto do lib.presentation.

	* lib/presentation/field.py: Nový soubor.
	(FieldSpec): Úpravy dokumentace.

	* lib/presentation/__init__.py: Nový soubor.

2002-03-31  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (Data.row): `key' smí být jakákoliv sekvence,
	nejen seznam (pouze dokumentaèní zmìna).

	* lib/output/markup.py (_Width): Zru¹eno.
	(Records): Zru¹eno.
	(_Container): Nová tøída.
	(Paragraph): Buï jejím potomkem.
	(Bold): Nová tøída.
	(RecordItem): Zru¹eno.
	(DataItem): Nová tøída.
	(DataTable.id): Doplnìn docstring.
	(DataTable.__init__): Pøidán assert na typ `id_'.

	* lib/output/formatter.py: Zdokumentovány funkce v ¹ablonách.
	(LoutFormatter._format_conc): Do reduce pøidán poèáteèní øetìzec.
	(LoutFormatter._MARK_PROCESSORS): Pøidáno Bold, odstranìno Records
	a RecordItem.
	(LoutFormatter._format_bold): Nová metoda.
	(LoutFormatter._format_records): Zru¹eno.
	(LoutFormatter._format_record_item): Zru¹eno.
	(LoutFormatter.INTRO): Hodnota pøesunuta do globální promìnné.
	(LoutFormatter._MARK_PROCESSORS): Pøidáno DataItem.
	(LoutFormatter._format_data_item): Nová metoda.

2002-03-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/configuration.py (Configuration.print_options): Místo
	`print' pou¾ívej sys.stdout.

	* lib/output/formatter.py (LoutFormatter._format_data_table):
	Je-li exportovaná hodnota None, pou¾ij prázdný øetìzec.
	(LoutFormatter.preview, LoutFormatter.printout): Pøidána Lout
	volba `-s'.
	(LoutFormatter._format_data_table): Doplnìn chybìjící specifikátor
	modulu.
	(LoutFormatter._format_data_table): Opraveno získávání poèítaných
	hodnot.
	(LoutFormatter._format_data_table): Pøidáno zarovnávání sloupcù
	napravo pro èíselné hodnoty.
	(LoutFormatter._lout): Uzavøi zdrojový soubor pro Lout generovaný
	pøi ladìní ihned po zápisu dat.
	(LoutFormatter.INTRO): ©íøka stránky pro textový formát zvìt¹ena
	na 200s.
	(LoutFormatter._format_data_table): Do textového výstupu pøidána
	mezisloupcová mezera.
	(LoutFormatter._format_data_table): Hlavièky tabulky mají nyní
	samostatný Lout formát a jejich polo¾ky jsou centrovány.

	* lib/form/list.py (BrowseForm._PrintResolver.get): Pøidána
	podpora pro `coding'.

	* lib/form/screen.py (MenuBar.activate): Pøidána logovací hlá¹ka.

	* lib/form/output.py (PrintForm.ACT_PRINT_FORM) 
	(PrintForm._ACTIVATIONS): Nové konstanty.
	(PrintForm.__init__): Nevolej `focus'.
	(PrintForm.run): Volej `focus'.
	(PrintForm._Preview._PAGE_COLS): Zvìt¹eno na 2002-03-29  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/command.py (PrintForm.COMMAND_NEXT_PAGE)
	(PrintForm.COMMAND_PREVIOUS_PAGE): Nové pøíkazy.

	* lib/form/output.py (PrintForm._Preview): Nová tøída.
	(PrintForm): Pou¾ívej ji, místo konkrétního pou¾ití wx tøídy.
	(PrintForm): Pou¾ívej pro výstup canvas místo wxTextCtrl.
	(PrintForm.on_command): Pøidáno zpracování pøíkazù listování
	stránkami.
	(PrintForm._create_controls): Navazuj `on_key_down' i na sebe
	sama.
	(PrintForm._set_page): Nová metoda.

2002-03-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (PrintForm._fill_preview.format):
	Pøetransformováno na asynchronní procesování s prùbì¾ným plnìním
	textu.
	(PrintForm.__init__): Nevolej `_fill_preview'.
	(PrintForm.run): Nová metoda.

	* lib/output/formatter.py (LoutFormatter._ok_resolver): Nová
	metoda.
	(LoutFormatter.__init__): Vyu¾ívej ji.
	(LoutFormatter._format_data_table): Vytváøej `_generic_resolver',
	je-li tøeba.

	* lib/form/list.py (BrowseForm._PrintResolver.__init__): Nová
	metoda.
	(BrowseForm._PrintResolver.get): Nech» jméno tabulky v tìle je
	`_id', ne `file-name'.

2002-03-27  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/resolver.py (ResolverError): Nová tøída.
	(ResolverFileError, ResolverSpecError): Buï potomkem
	ResolverError.

	* lib/form/output.py (PrintForm._fill_preview): Nová metoda.
	(PrintForm.__init__): Pou¾ívej ji.

	* lib/output/markup.py: Roz¹íøen docstring.

	* lib/form/list.py (BrowseForm._on_print_): Pøedávej tisku
	i instanci _PrintResolver.
	(BrowseForm._PrintResolver): Nová tøída.

	* lib/util/util.py (copy_stream): Neuzavírej výstup uvnitø cyklu!

	* lib/output/formatter.py: Mírnì doplnìn docstring.
	(LoutFormatter._format_data_table): Vìt¹í mno¾ství rùzných úprav.
	(LoutFormatter._format_text): Nech» ve výsledku zùstane zachováno
	odøádkování.
	(LoutFormatter._format_paragraph): Pou¾ívej neodsazené odstavce.
	(LoutFormatter._lout): Ignoruj chyby pøi zápisu debugovacího
	souboru.
	(LoutFormatter.__init__): Argument `resolver' smí nyní být
	i sekvencí resolverù.
	(LoutFormatter.preview): Nový argument `stream', zapisuj výstup do
	nìj a nevracej nic.

2002-03-26  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (PrintForm.on_command): Nová metoda.
	(PrintForm._create_controls): Nenastavuj textovému prvku velikost
	a registruj pro nìj klávesový callback na `on_key_down'.
	(PrintForm._on_print_): Implementováno.

	* lib/form/command.py (BrowseForm.COMMAND_PRINT): Zmìnìno na
	Form.COMMAND_PRINT.

	* lib/util/util.py (copy_stream): Dávej pozor na mo¾nost uzavøení
	výstupu.

	* lib/util/configuration.py
	(Configuration._Option_auto_reload_defs.default_string): Nová
	metoda.
	(Configuration._Option_printing_command): Nová konfiguraèní volba.

	* lib/output/markup.py (DataTable): Nová tøída.

	* lib/output/formatter.py: Pøidáno DataTable.
	(LoutFormatter._format_data_table): Nová metoda.
	(LoutFormatter.INTRO): Pøidán import `tbl'.
	(LoutFormatter.__init__): Zru¹eny atributy `_ncols' a `_nrows'.
	(LoutFormatter.page_size): Zru¹eno.
	(LoutFormatter.__init__): Nový atribut `_resolver'.
	(LoutFormatter._format_new_page): Opraven pøeklep v loutové
	funkci.

	* lib/form/list.py (List.condition): Nová metoda.
	(List.sorting): Nová metoda.
	(BrowseForm._on_print_): Pøedávej formátovaèi parametru výbìru své
	tabulky.
	(BrowseForm.on_command): BrowseForm.COMMAND_PRINT ->
	Form.COMMAND_PRINT.

2002-03-25  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/_test.py (CopyStream): Nová sada testù.

	* lib/util/util.py (copy_stream): Nová funkce.

	* lib/output/formatter.py (LoutFormatter._process): Funkcionalita
	pøesunuta do nové metody `_generate_document'; nyní zaøizuje
	základní generování obsluhu.
	(LoutFormatter.__init__): Zru¹en atribut `_pages', nový atribut
	`_formatted_document'.
	(LoutFormatter._lout): Tvorba zdrojového textu dokumentu se nyní
	volá synchronnì a výsledek se ukládá do `_formatted_document'.
	(LoutFormatter._process): Neuzavírej stream.

	* lib/form/output.py (PrintForm): Pøetransformováno na obyèejný
	formuláø na frame stacku.

2002-03-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (PrintForm._create_controls): Nový atribut
	`_text'.
	(PrintForm.__init__): Volej formátování textu a zobraz výsledek.

	* lib/output/formatter.py (Formatter): Pøejmenováno na
	LoutFormatter a kompletnì pøepracováno.
	(Formatter): Nová promìnná.
	(Coding): Nová tøída.

	* lib/output/markup.py (Text): Zru¹eno.
	(Conc): Zru¹eno.
	(PageNumber): Pøidáno omezení na umístìní znaèky (jen dokumentaèní
	zmìna).
	(Paragraph): Nová tøída.

2002-03-23  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/output.py (_Canvas, _Printout): Zru¹eno.
	(PrintForm): Kompletnì pøepracováno.

	* lib/form/list.py (List._ListTable.editing): Pøíznak zmìny øádku
	zji¹»uj pøes _EditedRow.changed.
	(List._ListTable._EditedRow.changed): Nová metoda.

2002-03-22  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._ListTable._EditedRow): Kompletnì
	pøepracováno.
	(List._ListTable._CurrentRow.__init__): Doplnìny asserts na
	parametry.
	(List._ListTable.__init__, List._ListTable.edit_row): Updatováno
	s ohledem na zmìny _EditedRow.
	(List._on_insert_line): Nevytváøej nový øádek, není-li kopií,
	pøedávej do `_recreate_grid' None.
	(List._ListTable.__init__): Zohlednìna pøedchozí zmìna.
	(List._ListTable._Column.__init__): Nový argument `default'.
	(List._ListTable.SetValue): Místo prostého pøiøazení do
	editovaného øádku volej metodu `update'.

2002-03-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._ListTable._EditedRow.__init__): Opraven
	chybný odkaz na pøedka.
	(List._edit_cell): Opravena podmínka editovatelnosti.

2002-03-20  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	V `_pdbb_command_get_last' doplòuj DESC za v¹echna oids.

2002-03-19  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (dir_const): Kosmetické úpravy.
	(Editable): Nová tøída.
	(FieldSpec.__init__): Zru¹en argument `alterable'. Zmìna domény
	hodnot argumentu `editable'. Update dokumentace. Doplnìna
	dokumentace pro objasnìní významu `computer' a `default'. Assert
	na `editable'
	(FieldSpec.editable): Metoda zru¹ena.

	* lib/form/list.py (List._create_grid): Vyu¾ívej konstanty
	`FieldSpec.editable()'.
	(List._edit_cell): Vyu¾ívej konstanty `FieldSpec.editable()'.
	Pozor, podmínka pro test editovatelnosti políèka neobsahuje test
	na nový øádek, tak¾e se neuplatní `Editable.ONCE'. Nutno dodìlat!!!

	* lib/form/inputfield.py (resolve): Nech» implicitní hodnotou
	argumentu `editable' je `TRUE'. Doplnìna dokumentace.
	(InputField.__init__): Nech» implicitní hodnotou
	argumentu `editable' je `TRUE'. Update dokumentace.
	(InputField.enabled): Nová metoda.
	(MultiTextField._set_value): Assert na 'is_sequence(values)'.

	* lib/form/form.py (EmbeddedEditForm._validate): Namísto
	`field.spec().editable()' pou¾ívej `field.enabled()'.
	(EmbeddedEditForm._pack_fields): Namísto `FieldSpec.alterable()'
	vyu¾ívej konstanty `FieldSpec.editable()'.
	(EmbeddedEditForm.__init__): Inicializuj atribut
	`self._disable_recomputation'.
	(EmbeddedEditForm._set_row): V prùbìhu inicializace hodnot políèek
	zaka¾ pøopoèítávání (pomocí `self._disable_recomputation').
	(EmbeddedEditForm.recompute): Nic nedìlej, pokud je nastaveno
	`self._disable_recomputation'. Pokud jde o volání pøi inicializaci
	formuláøe, nepøepoèítávej políèka, která jsou obsa¾ena v `self._row'.
	(EmbeddedEditForm.recompute): Pøeskakuj políèko, které je v Row,
	pouze pokud jde o editaci stávajícího záznamu. Pøi inicializaci
	nového záznamu je tøeba vypoèítat v¹echna políèka.

2002-03-18  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_table_row_lists):
	Pøeskakuj sloupce, je¾ jsou instancemi Oid.

2002-03-15  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (Computer.__init__): V assertu na `depends' povol
	také None.
	(FieldSpec.__init__): Nový argument `references' + dokumentace.
	(FieldSpec.type): Úprava chybové hlá¹ky u assertu.
	(FieldSpec.references): Nová metoda.

	* lib/form/form.py (EmbeddedEditForm._pack_fields): Namísto
	`fspec.height()' pou¾ívej `field.height()'.
	(EmbeddedEditForm.recompute): `self._row.update()' obal do `try'.
	(DualForm.OnSetFocus): Namísto `OnSetFocus()' volej na aktivní
	formuláø `SetFocus()'.

	* lib/form/inputfield.py (resolve): Dodána podpora pro rozeznání
	`ListField'u.
	(InputField._on_set_focus): Vracej wx.TRUE.
	(InputField._width): Pøejmenováno na `width'.
	(InputField._height): Pøejmenováno na `height'.
	(InputField.hidden): Nová metoda.
	(TextField._create_controls): `_height' -> `height'
	(TextField._on_key_down_multiline): Klávesu Enter zpracovávej
	odli¹nì jen pokud je `self._enabled'.
	(RadioBoxField._create_controls): `_width' -> `width', `_height'
	-> `height'
	(InlineMultiTextField._create_controls): `_width' -> `width'
	(InlineMultiTextField._width): `_width' -> `width'
	(MultiTextField._create_controls): `_width' -> `width'
	(HiddenField): Nová tøída.
	(ListField): Nová tøída.

2002-03-14  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm.recompute): Pøidána podpora
	pro závislosti -- nepøepoèítávej políèka, která nezávisí na
	zmìnìném políèku.

2002-03-13  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (FrameStack._replace_window): Volej na
	`window' Show nepodmínìnì.

	* lib/form/list.py (List._switch_sorting): Tøídìní blokuj pro
	sloupce nepøítomné v datovém objektu, ne datové sloupce.

	* lib/util/__init__.py: Pøedávej konstruktoru Configuration
	argumenty pøíkazové øádky.

	* ebas (_install_configuration): Zru¹eno.
	(go): Nevolej `_install_configuration'.

	* lib/data/dbdata.py (Oid): Nový datový typ.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Nech» DB typ `oid' se mapuje na Oid.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Sloupec `oid' pøidávej pouze tehdy, pokud ve specifikacích sloupcù
	není ¾ádný typu Oid.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Pøidána podpora pro Oid sloupce.
	(DBDataPostgreSQL.lock_row, DBDataPostgreSQL.unlock_row)
	(DBDataPostgreSQL._pg_locking_process): Updatováno pro násobná
	oids.

2002-03-13  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (Computer.__init__): Nový argument
	`depends'. Doplnìna dokumentace.
	(Computer.depends): Nová metoda.

2002-03-12  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm.recompute): Pøepoèítávej
	pouze políèka, která nejsou ve `values'.
	(EditForm.message): Pøidávej mezeru pøed zprávy.

	* lib/form/inputfield.py (_TextValidator._on_char): Pro filtrované
	znaky a pøi pøekroèení délky øetìzce vypi¹ chybovou zprávu.
	(resolve): Nech» je implicitní hodnotou argumentu
	`enabled' hodnota None.
	(InputField.__init__): Nech» je implicitní hodnotou argumentu
	`enabled' hodnota None.  Pokud je `enabled' None, nastav `enabled'
	podle `FieldSpec.editable()'.  Úprava docstringu.
	(TextField._on_text): Vracej `wx.TRUE'.

	* lib/form/list.py (List.registration): Editovatelnost urèij pouze
	podle specifikátoru 'FieldSpec.editable()' - neber ohled na
	computer, proto¾e ten je zohlednìn ji¾ ve `FieldSpec'.

	* lib/form/spec.py (FieldSpec.__init__): Nech» implicitní hodnota
	argumentu `editable' je None. Úprava docstringu. Pokud je `editable'
	None, nastavuj hodnotu atributu `_editable' podle toho, zda byl
	definován `computer'.

2002-03-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/application.py (Application._resolver_directory): Nech»
	implicitní adresáø s definièními soubory je './defs'.

	* lib/util/configuration.py (Configuration._Option_defdir): Volba
	nyní urèuje pøímo adresáø s definièními soubory.
	(Configuration._Option_defdir.default): Nech» implicitní hodnotou
	je './defs'.

2002-03-12  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm.init): Pøidány komentáøe.
	(EmbeddedEditForm.init): `self.recompute()' volej jen pro nový
	záznam. Pøi editaci je `recompute()' voláno ji¾ v `_set_row()'.
	(EmbeddedEditForm.init): Doplnìn docstring.
	(EmbeddedEditForm._set_row): Nakonec zavolej `self.recompute()'
	(EmbeddedEditForm.recompute): Pokud není nastaveno `self._row',
	nedìlej vùbec nic. Nastavuj hodnotu políèka pouze pokud
	je rùzná od stávající hodnoty (kvùli rekurzi).
	(ShowForm._create_form): Doplnìn docstring.
	(EditForm._create_form): Doplnìn docstring.

	* lib/form/inputfield.py (TextField._on_text): Pokud je hodnota
	validní, pøepoèítej pøípadná poèítaná políèka.
	(TextField._on_key_down_multiline): Nová implementace (pùvodní
	pøestala fungovat po zavedení centrálního zpracování událostí).
	(TextField._create_text_control): Pøidán komentáø.
	(InputField._on_kill_focus): Nevyvolávej pøepoèítávání ostatních
	políèek formuláøe.

2002-03-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm._edit_update): Pøi chybì
	zobraz chybový dialog.

	* lib/form/search.py (sfs_columns): Sloupce vyluèuj ne podle toho
	zda jsou poèítané, nýbr¾ podle jejich nepøítomnosti v datech.

	* lib/form/list.py (List._ListTable.GetValue): Hodnotu sloupce
	poèítej pouze tehdy, není-li v øádku pøítomna nebo je None.

	* lib/data/data.py (Row.has_key): Nová metoda.

2002-03-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/_test.py (Configuration): Zru¹eno.

	* lib/util/test.py (TestSuite.add): Updatováno pro novou
	konfiguraci; opravena chybná podmínka filtrování interaktivních
	testù.

	* lib/util/configuration.py (config): Zru¹eno.
	(Configuration._Option_icon_dir.icon_dir): Název metody opraven na
	`default'.
	(Configuration._Option_log_class_filter.default): Vracej None.
	(Configuration._Option_log_class_filter.default_string): Nová
	metoda.
	(Configuration._Option_log_logger.default)
	(Configuration._Option_log_logger.default_string): Prohozeny
	logovací tøídy v tìchto dvou metodách.
	(Configuration._Option_user_config_file): Nová volba.
	(Configuration._Option_config.default)
	(Configuration._Option_config.default): Standardní `config.py'
	hledej v `config' místo `defs'.
	(Configuration.serial_number): Nová metoda.
	(Configuration._Option_config): Pøejmenováno na
	`_Option_config_file'.
	(Configuration.__getattr__): Pøidána podpora pro u¾ivatelský
	konfiguraèní soubor.
	(Configuration._read_configuration_file): Nová metoda.
	(Configuration._read_configuration): Vyu¾ívej ji a podpora pro
	u¾ivatelskou konfiguraci.
	(Configuration._parse_command_line_options): Opraveno získání
	seznamu voleb.
	(Configuration._Option_log_exclude.default): Nech» implicitní
	hodnota závisí na volbì `debug'.
	(Configuration.print_options): Nová metoda.
	(Configuration.Option.value): Nepøiøazuj výsledek `init_value' do
	`_value'.
	(Configuration._Option_dbname.default): Nová metoda.

	* config/__init__.py: Zru¹eno.

	* ebas (_USAGE): Doplnìno --config.
	(_process_options): Zru¹eno.
	(go): Upraveno pro nový konfiguraèní mechanismus.
	(_install_configuration, _install_gettext): Nové funkce.
	(go): Volej je.
	(_USAGE): Pøesunuto do `_usage'.
	(_usage): Argument `option' pøejmenován na `optexception' a
	skuteènì pou¾it.

	* lib/util/log.py (Logger.__init__, Logger._is_accepted)
	(Logger._formatted_data, log): Zohlednìna zmìna logovacích
	konfiguraèních voleb.

	* lib/util/util.py (Configuration): Zru¹eno.

	* lib/util/__init__.py: Importuj `configuration'.
	Vytváøej "fale¹ný" modul `config'.

2002-03-09  Milan Zamazal  <pdm@brailcom.org>
	
	* lib/util/configuration.py: Nový modul.

2002-03-06  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/inputfield.py (CodeBookField._create_widget): Oprava
	formátování. 
	(InputField.__init__): Oprava formátování.

2002-03-05  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/resolver.py (Resolver.get, Resolver._load_module):
	Pøidána nejzákladnìj¹í podpora pro config.auto_reload_defs.

	* lib/data/types_.py (NonNull): Nová tøída.

	* config/config.py (defdir): Nová volba.
	(auto_reload_defs): Nová volba.

	* lib/form/screen.py (WxKey.is_event_of_key, MItem.__init__):
	Update v docstringu.

	* lib/form/application.py (Application._resolver_directory): Nová
	metoda.
	(Application._resolver): Vyu¾ívej ji.

	* ebas (_USAGE, _process_options): Nová volba --defdir.
	(_process_options): Pøi --debug nastavuj config.auto_reload_defs
	na TRUE.

2002-03-04  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (DBDataDefault): Zru¹eno, test byl nesmyslný.
	(DBCounter): Nová sada testù.

	* lib/data/dbdata.py (_pypg_query): Nová funkce.
	(DBDataPyPgSQL._pg_query): Vyu¾ívej ji.
	(DBPyPgCounter): Nová tøída.
	(DBCounterDefaultClass): Nová tøída.
	(_pypg_connection_pool_): Nová promìnná.
	(_pypg_connection_pool): Nová funkce.
	(DBDataPyPgSQL.CONNECTION_POOL): Zru¹eno.
	(DBDataPyPgSQL.__init__)
	(DBDataPyPgSQL._pypg_add_notifications)
	(DBDataPyPgSQL._pypg_get_connection)
	(DBDataPyPgSQL._pypg_return_connection): Zohlednìny pøedchozí
	zmìny.

	* lib/data/data.py (Counter): Nová tøída.

2002-03-03  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._current_key): O¹etøuj pøípad, kdy je
	`row' men¹í ne¾ 0.
	(FilteredBrowseForm.filter): Update docstringu.
	(List.select_row): Jestli¾e pozice daná klíèem není nalezena,
	nech» je pozice v seznamu 0.
	(List.refresh): Je-li pozice èíselná, pokus se ji pøenastavit na
	klíè anebo 0.

	* lib/form/application.py (Application._top_level_exception):
	Je-li nastaveno config.debug, spus» debugger.

	* ebas (_process_options): Pøi --debug nastavuj config.debug.

	* config/config.py (debug): Nová promìnná.

2002-02-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (FrameStack._replace_window): Neprovádìj
	nìkteré operace s novým oknem, pokud staré okno je odstraòované a
	modální.

	* lib/form/form.py (DualForm.Close): Nuluj `_active_form'.
	(DualForm.OnSetFocus): Volej OnSetFocus na aktivní podformuláø, ne
	SetFocus na hlavní formuláø.
	(DualForm.Show): Nastavuj jako aktivní formuláø hlavní formuláø.

	* lib/form/search.py (SFDialog._create_content.condition):
	Kosmetická úprava.
	(sfs_columns): Nový argument `labelfunc'.

	* lib/form/spec.py (FieldSpec.__init__): `width' smí být 0 a znaèí
	skryté pole (pouze doplnìní docstringu).

	* lib/form/list.py (List._current_key): O¹etøuj chybný klíè --
	zaloguj a zobraz chybový dialog.
	(List._sfs_columns): Pøedávej do `sfs_columns' argument
	`labelfunc'.
	(List._on_insert_line): O¹etøeno urèení èísla øádku pøi vlo¾ení do
	prázdného seznamu.

2002-02-26  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/formatter.py (Formatter._MARK_PROCESSORS): Nová
	konstanta.
	(Formatter.__init__): Nový atribut `_mark_processors'.
	(Formatter._format_text, Formatter._format_conc)
	(Formatter._format_new_page, Formatter._format_page_number)
	(Formatter._format_records, Formatter._format_record_item): Nové
	metody.
	(Formatter._format): Pøepracováno, zjednodu¹eno.
	(Formatter._format_conc.concat): Spojuj elementy bez vkládání
	nových øádkù.
	(Formatter._Continuation): Zru¹eno.
	(Formatter._Page): Nová pomocná tøída.
	(Formatter._format_new_page): Implementováno.
	(Formatter._format*): Metody nyní pracují s instancemi _Page a
	mají nový parametr `pages'.
	(Formatter.formatted_page): Pøepracováno.

2002-02-26  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/__init__.py (_list): Neimportuj resolver.

2002-02-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/output/__init__.py: Prohozeno poøadí importù.

	* lib/form/output.py (_Canvas._FONT_SIZE): Pøejmenováno na
	FONT_SIZE.
	(_Canvas._LINE_SPACE): Pøejmenováno na LINE_HEIGHT a poèítáno
	z FONT_SIZE.
	(_Canvas.draw): Zohlednìna pøedchozí zmìna.
	(_Printout.OnPrintPage): `scalex' a `scaley' je nyní poèítáno
	øádnì.

	* lib/util/__init__.py: Pøidán import `resolver'.

	* lib/form/resolver.py: Pøesunuto do lib/util/.
	
	* lib/output/formatter.py: Doplnìn docstring.
	(Formatter.__init__): Implementováno.
	(Formatter._resolve): Nová metoda.
	(Formatter._format): Nová metoda.
	(FormattingException, TemplateException): Nové tøídy.
	(Formatter.page_size): Ber hodnoty z atributù.
	(Formatter._Continuation): Nová tøída.
	(Formatter.has_page): Implementováno.
	(Formatter.formatted_page): Do docstringu doplnìno èíslování
	stránek.
	(Formatter.formatted_page): Provizorní implementace.
	(Formatter._break_fill): Opravena chyba v pøidávání do `result'.
	(Formatter._break_fill): Správnì o¹etøuj øádky s nulovou délkou.

	* lib/form/resolver.py (ResolverFileError): Doplnìn chybìjící
	docstring.
	(ResolverSpecError): Nápodobnì.
	(Resolver._load_module): Pøidána kvalifikace metod modulu `imp'.

	* lib/form/list.py (BrowseForm._on_print_): Pøedávej konstruktoru
	Formatter v¹echny argumenty.
	(BrowseForm.on_show_details): Doplnìn chybìjící docstring.

2002-02-23  Milan Zamazal  <pdm@brailcom.org>
	
	* lib/output: Nový modul.

	* lib/form/output.py: Nový soubor.

2002-02-22  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (BrowseForm.on_command): Nová metoda.

2002-02-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/__init__.py: Pøidán soubor `output'.

	* lib/form/list.py (BrowseForm._on_print_): Nová metoda.

	* lib/form/command.py: Nový pøíkaz List.COMMAND_PRINT.

2002-02-22  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application._popup_form): Metoda
	pøejmenována na veøejnou `popup_form()'.
	(Application._update_stack_display): V tooltipu statusbaru
	zobrazuj také název tøídy formuláøe.
	(Application.on_command): `_popup_form()' -> `popup_form()'

2002-02-21  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/dialog.py (MultiQuestion.__init__): Nový argument `icon'.
	(Question.__init__): Nový argument `icon'.
	(db_operation): Nastavuj chybovému dialogu titulek a ikonu chyby.

	* lib/form/list.py (ListForm): Nech» tøída dìdí také z `TitledForm'. 
	(ListForm.__init__): Zru¹eno v¹e, co se týká vytváøení panelu s
	titulkem. Vyu¾ito `TitledForm._create_title_bar()'. `self._header'
	pøejmenováno na `self._title_bar'.
	(ListForm.SetSize): `self._header' -> `self._title_bar'.
	(ListForm.on_show_details): Namísto pøímého vytváøení a spou¹tìní
	formuláøe pou¾ij 'Application.popup_form()'
	(FilteredBrowseForm): Nech» tato tøída nedìdí `SettableForm'.
	(ListForm._TITLE_BORDER_WIDTH): Atribut zru¹en (dìdí se z
	`TitledForm').

	* lib/form/form.py (ShowForm): Doplnìna dokumentace.
	(SettableForm): Tøída nevyu¾ívána, tedy zru¹ena.
	(TitledForm): Nová tøída.
	(EmbeddedEditForm): Nech» je potomkem TitledForm.
	(EmbeddedEditForm._create_form): Kosmetické úpravy. Metodì
	`_create_caption()' pøedávej také taxt titulku.
	(EmbeddedEditForm._create_caption): Metoda zru¹ena (pøesunuta do
	nové tøídy `TitledForm'.
	(ShowForm._TITLE_BORDER_WIDTH): Atribut zru¹en (dìdí se z
	`TitledForm').
	(ShowForm._create_form): Zru¹en ve¹kerý k=od související s
	vytváøením panelu titulku.
	(EditForm._create_form): Kosmetické úpravy. Metodì
	`_create_caption()' pøedávej také taxt titulku.
	(DescriptiveDualForm.__init__): Klíèový argument `position' hledej
	v `kwargs'.

2002-02-20  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm._create_caption): Nový
	argument `parent'. Nech» je argument `size' nepovinný. Novou
	instanci `wxFont' vytváøej, jen pokud byla zadána velikost, jinak
	pou¾ij stávající.
	(ShowForm): Nová tøída.
	(EditForm._create_form): Pøedávej argument `parent' metodì
	`_create_caption()'. 
	(DescriptiveDualForm._create_side_form): Namísto
	`EmbeddedEditForm' pou¾ij `ShowForm'.

	* lib/form/list.py (ListForm.__init__): Radìji ne¾
	`wx.wxALIGN_CENTRE' pou¾ívej `wx.wxALIGN_CENTER'.

2002-02-19  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField.init): Kosmetická úprava.

	* lib/form/form.py (EmbeddedEditForm._edit_insert): Volej
	`_validate()' bez `omit_read_only=TRUE'.
	(EmbeddedEditForm.init): Pokud není znám klíè (nový záznam),
	vytvoø `self._row' jako instanci Row z implicitních hodnot
	políèek.
	(EmbeddedEditForm._set_row): Update komentáøe. Zakomentováno
	odchytávání výjimky o¹etøené pouze zalogováním.
	(DescriptiveDualForm._on_side_selection): Nová metoda.

2002-02-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List.select_row): Nech» `position' smí být
	i instance lib.data.Row.

	* lib/form/form.py (EmbeddedEditForm.select_row): Nech» `key' smí
	být i instance lib.data.Row.

	* ebas (gg): Nová funkce.

2002-02-19  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm._create_caption): Nenastavuj
	encoding pøímo, ale pomocí `wx.wxFONTENCODING_DEFAULT'
	(EmbeddedEditForm.init): Namísto `self.select_row()' volej
	`self._set_row()' a to i v pøípadì, ¾e není znám klíè (nový
	záznam) kvùli inicializaci default hodnot.
	(EmbeddedEditForm._set_row): Kosmetické úpravy.

2002-02-18  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (_pypg_new_connection): Lépe zformulováno
	hlá¹ení výjimky pøi neúspìchu vytvoøení spojení.

	* config/config.py (custom_debug): Nová funkce.

	* config/__init__.py: Pøidáno natahování ladícího modulu `_config'.

	* lib/util/util.py (ipython): Hlá¹ku o nedostupnosti IPython
	vypisuj na stderr.

	* lib/form/command.py: Nový pøíkaz
	Application.COMMAND_CUSTOM_DEBUG.

	* lib/form/list.py (BrowseForm.on_show_details): Nová metoda.

	* lib/form/form.py (DescriptiveDualForm.__init__): Nový argument
	`position'.
	(DescriptiveDualForm.__init__): Opraveno jméno tøídy v `super'.

	* lib/form/application.py (Application._popup_form): Pro
	BrowseForm nastavuj alternate activation callback na
	`on_show_details'.
	(Application.on_command): Pøidána podpora pro pøíkaz
	COMMAND_CUSTOM_DEBUG.

2002-02-18  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm.__init__): Nevolej na políèka
	`disable()'.
	(EmbeddedEditForm._pack_fields): Pou¾ij argument `enabled' pøi
	vytváøení políèka.

	* lib/form/inputfield.py (resolve): Nový argument `enabled'.
	(InputField.__init__): Nový argument `enabled'. Nenastavuj
	`self._enabled' podle `fspec.enabled()' ale podle argumentu.
	(InputField.disable): Úprava docstringu.

	* lib/form/spec.py (FieldSpec.__init__): Nový argument `alterable'.
	(FieldSpec.alterable): Nová metoda.
	(FieldSpec.separator): Úprava docstringu.

	* lib/form/dialog.py (GenericDialog.run): Kosmetické úpravy.

2002-02-17  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (DescriptiveDualForm): Nová tøída.
	(EmbeddedEditForm.select_row): Nová metoda.
	(EmbeddedEditForm.init): Vyu¾ívej ji.

	* lib/form/screen.py (FrameStack._replace_window): Vypínej staré
	okno nejen pøi `close'.

	* lib/data/types_.py (Type.default_value): Nová metoda.
	(Boolean.__init__): Prohozeno poøadí hodnot v enumeration.
	(Enumeration.default_value): Nová metoda.

	* lib/form/list.py (List._create_grid): `computer' ve specifikaci
	pole updatuj pomocí FieldSpec.update_computer.
	(List._on_insert_line): Hodnoty nového øádku zji¹»uj z defaults
	místo jejich vytváøení na místì.
	(List._ListTable.GetValue): Dodateèné úpravy stringové hodnoty
	provádìj jenom pokud nebylo zadáno inputfield.
	(List._ListTable.GetValue): U Boolean testuj hodnotu instance
	value, ne instanci samu.
	(List._EDIT_COLORS): Nová konstanta.
	(List._on_edit, List._on_insert_line): Pøi vstupu do editace
	nastav editaèní barvy.
	(_InputFieldCellEditor.BeginEdit): Kurzor nastavuj na konec
	políèka místo na jeho zaèátek.
	(List._on_select_cell): Volej SetFocus a¾ po `_select_cell'.

	* lib/form/spec.py (FieldSpec.update_computer): Nová metoda.

	* lib/form/inputfield.py (EnumerationField._set_value): Doplnìn
	assert na `value'.

2002-02-16  Milan Zamazal  <pdm@brailcom.org>

	* ebas (_USAGE): banka -> ebas.

	* lib/form/list.py (List._ListTable._Column.__init__)
	(List._ListTable.__init__, List._ListTable.GetValue): Zohledòuj
	oddìlovaèe øádkù.
	(_InputFieldCellEditor.BeginEdit): Volej GetValue s argumentem
	`inputfield'.
	(List._ListTable.GetValue): Nový argument `inputfield'.
	(_InputFieldCellEditor.EndEdit): Pøedávej hodnotu do SetValue
	pøímo, bez pøedchozích úprav.
	(List._ListTable.SetValue): Jako `value' nyní pøijímej instanci
	lib.data.Value.
	(List._create_grid): Pøedávej editoru vstupního políèka gridovou
	tabulku.
	(_CellEditor.__init__): Nový argument `table' a atribut `_table'.
	(_InputFieldCellEditor.BeginEdit, _InputFieldCellEditor.EndEdit):
	Tabulku vytahuj ze svého atributu, ne z pøedaného pseudogridu.

	* lib/form/spec.py (FieldSpec.__init__): Nový argument
	`line_separator' a atribut `_line_separator'.
	(FieldSpec.line_separator): Nová metoda.

2002-02-15  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (ListForm.__init__, BrowseForm.__init__) 
	(FilteredBrowseForm.__init__): Nový argument `guardian'.
	(List.on_key_down): Vracej FALSE.
	(List.guardian): Nová metoda.

	* lib/form/screen.py (KeyHandler.on_key_down): Pokud je definováno
	guardian, volej je místo pøeskoèení události.

	* lib/form/form.py (DualForm._select_form): O¹etøuj pøípad, kdy je
	`form' None.
	(Form.__init__): Nový parametr `guardian' a atribut `_guardian'.
	(Form.guardian): Nová metoda.
	(SideBrowseDualForm._create_side_form) 
	(BrowseDualForm._create_main_form): Pøedávej konstruktoru seznamu
	argument `guardian'.
	(DualForm._select_form): Pokud je po¾adovaný formuláø ji¾ aktivní,
	nedìlej nic.

	* lib/util/util.py (ipython): Nová funkce.

	* ebas (go): Nevolej sys.exit.

2002-02-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/command.py: Nový pøíkaz DualForm.COMMAND_OTHER_FORM.

	* lib/form/form.py (SideBrowseDualForm._create_side_form):
	`_on_side_selection' navì¹uj na callback u¾ivatelské informace
	místo selekce.
	(BrowseDualForm._create_main_form): Nastavuj callback u¾ivatelské
	interakce.
	(BrowseDualForm.__init__): Pou¾ívej `focus' místo `OnSetFocus'.
	(DualForm._select_form): Nová metoda.
	(SideBrowseDualForm._on_side_selection): Zru¹eno.
	(SideBrowseDualForm._create_side_form): Pou¾ívej `_select_form'
	místo `_on_side_selection'.
	(SideBrowseDualForm._on_selection): Neprovádìj vìci okolo focus.
	(DualForm._other_form): Nová metoda.
	(DualForm.on_command): Pøidána podpora pro pøíkaz
	COMMAND_OTHER_FORM.

	* lib/form/screen.py (WxColor): Nová tøída.

	* lib/form/list.py (List._change_selection_colors): Barvy
	pøenastavuj pouze dochází-li k jejich skuteèné zmìnì.
	(List.select_row.clear): Zru¹eno.
	(List.select_row.set): Vracej zda do¹lo ke zmìnì.
	(List.select_row.set): Pøidána podpora pro ru¹ení selection.
	(List.select_row): Volej callbacks, je-li tøeba; pøi rùzných
	neúspì¹ích proveï deselect øádku; proèi¹tìní.
	(List._current_key): O¹etøuj pøípad kdy je poèet øádkù men¹í ne¾
	po¾adované èíslo øádku.
	(List._FILTER_COLOR, List._FOCUS_COLORS, List._NOFOCUS_COLORS):
	Pou¾ívej WxColor místo wx.wxColour.
	(List.CALL_USER_INTERACTION): Nová konstanta.
	(List._on_label_left, List._on_label_right, List.on_key_down):
	Volej callback u¾ivatelské interakce.
	(List.set_callback): Assert na `kind' "zautomatizován" místo
	dosavadního výètu konstant.
	(List._recreate_grid): Jestli¾e pozice v seznamu je urèena
	èíselnì, resetuj ji na 0.

2002-02-13  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List.select_row.set): Vracej èíslo
	vyselektovaného øádku.
	(List.select_row): Vracej èíslo vysvíceného øádku, ne `position'.
	(List._select_cell): Volej `select_row'.
	(List._select_cell): Nevolej callbacks.

	* lib/form/form.py (BrowseDualForm._create_main_form): Browse form
	vytváøej bez selekce øádku.
	(BrowseDualForm.__init__): Selektuj první øádek vedlej¹ího
	formuláøe.

2002-02-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (BrowseDualForm.__init__): Volej `super' na
	sebe, ne pøedka.

2002-02-14  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/screen.py (MenuBar.__init__): Pokud není definována
	klávesa, uva¾uj klávesu pøíkazu.
	(MenuBar._assemble_menu): Pokud není definována klávesa, uva¾uj
	klávesu pøíkazu.

2002-02-12  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField._on_kill_focus): Pokud projde
	validace, volej `self._form.recompute()'.
	(TextField._disable): Nová metoda.

	* lib/form/form.py (EmbeddedEditForm._init_dialog): Pøejmenováno
	na `init()'.
	(EmbeddedEditForm.__init__): Namísto `self._init_dialog()'
	pou¾ívej `self.init()'.
	(EmbeddedEditForm._edit_insert): Namísto `self.set_row()' pou¾ívej
	`self._set_row()'.
	(EmbeddedEditForm._edit_update): Namísto `self.set_row()' pou¾ívej
	`self._set_row()'.
	(EmbeddedEditForm._on_commit_form): Kosmetické úpravy.
	(EmbeddedEditForm._on_commit_form): Pøidáno TODO.
	(EmbeddedEditForm._on_select_filter): Namísto `self.set_row()'
	pou¾ívej `self._set_row()' + `self._find_row()'.
	(EmbeddedEditForm._on_sort_column): Namísto `self.set_row()' pou¾ívej
	`self._set_row()'.
	(EmbeddedEditForm.set_row): Zru¹eno (transformováno na `_find_row()').
	(EmbeddedEditForm._find_row): Nová metoda.
	(EmbeddedEditForm.recompute): Nová metoda.
	(EditForm.__init__): Titulek okna rodièe hledej do hloubky.
	(EditDualForm.__init__): Namísto `self._main_form.set_row()' pou¾ívej
	`self._main_form.init()'.

2002-02-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/search.py (SFDialog._selected_condition): Pokou¹ej se
	validovat i stringovou hodnotu.

	* lib/form/list.py (List._on_search): Nenastavuj blokování
	refreshe není-li spu¹tìn dialog.
	(List._on_delete_line): Po dobu spu¹tìní dialogu blokuj refresh.

	* lib/form/dialog.py (delete_record): Opraveno úvodní logování.

	* lib/data/_test.py (Boolean.check_validation): Neprovádìj
	`_test_null_validation'.

	* lib/data/data.py (Data.find_column): Vyu¾ívej novou funkci
	`find'.

	* lib/util/_test.py (Find): `find' -> `position'; pøejmenováno na
	FindUtils.
	(FindUtils.check_find): Nový test.
	(FindUtils.check_assoc): Nový test.
	(FindUtils.check_rassoc): Nový test.

	* lib/util/util.py (find): Pøejmenováno na `position'.
	(next_subclass): `find' -> `position'.
	(find): Nová funkce.
	(assoc): Nová funkce.
	(rassoc): Nová funkce.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Doplnìny u¾ivatelské typy.
	(DBColumnBinding.__init__): Nový argument `type_' a atribut
	`_type'.
	(DBColumnBinding.type): Nová metoda.

	* lib/data/types_.py (Type._SPECIAL_VALUES): Nová konstanta.
	(Type._NULL_SUBSTITUTION, Type._AUTONULLIFY, Type._EMPTY_VALUE):
	Zru¹eno.
	(Type.validate, Type.export): Zohledòuj pøedchozí zmìny.
	(Codebook.__init__): Pøi chybném typu informuj i o onom typu.
	(Number._SPECIAL_VALUES, String._SPECIAL_VALUES) 
	(DateTime._SPECIAL_VALUES): Náhrada za pøedchozí konstanty pro
	zvlá¹tní hodnoty.

2002-02-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands.sortspec):
	Nepou¾ívej `_pdbb_coalesce'.
	(PostgreSQLStandardBindingHandler._pdbb_sort2sql.item2sql):
	Nápodobnì.
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql.relop):
	Neaplikuj `_pdbb_coalesce' na názvy sloupcù.
	(PostgreSQLStandardBindingHandler._pdbb_coalesce): Odstranìn hack
	s okam¾itým vrácením `value'.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Vícero drobných úprav zaji¹»ujících pøidání COALESCE, kde je
	tøeba.

2002-02-08  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm._on_search): Pou¾ívej metodu
	SFDialog.condition namísto pøístupu k cizímu privátnímu atributu.

	* lib/form/search.py (SFDialog.condition): Nová metoda.

	* lib/form/list.py (List.UI_EXISTS_CONDITION): Opraven
	copied&pasted docstring.
	(List._on_search): Pou¾ívej metodu SFDialog.condition namísto
	pøístupu k cizímu privátnímu atributu.
	(List._select_cell): Callback CALL_SELECTION vyvolávej pouze pokud
	do¹lo ke zmìnì øádku.

2002-02-08  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/list.py (List.CALL_ACTIVATION): Nové
	`UI_EXISTS_CONDITION'.
	(List.on_ui_event): Enable hledání bez dialogu v menu, pokud
	existuje dialog a podmínka.
	(List.on_command): Nové pøíkazy `Form.COMMAND_SEARCH_NEXT' a
	`Form.COMMAND_SEARCH_PREVIOUS'.
	(List._on_search): Úprava metody, aby pracovala i bez vyvolání
	dialogu (nepovinné argumenty dlg a direction).

	* lib/form/form.py (EmbeddedEditForm._on_search): Úprava metody,
	aby pracovala i bez vyvolání dialogu (nepovinné argumenty dlg a
	direction).
	(EmbeddedEditForm.on_ui_event): Enable hledání bez dialogu v menu,
	pokud existuje dialog a podmínka.
	(EmbeddedEditForm.on_command): Nové pøíkazy
	`Form.COMMAND_SEARCH_NEXT' a `Form.COMMAND_SEARCH_PREVIOUS'.

	* lib/form/command.py (): Zaregistrování pøíkazu pro hledání vpøed
	a vzad bez dialogu.

	* lib/form/screen.py (FrameStack._replace_window): Po provedení
	uzavíracích akcí (Close) okno zlikviduj.

	* lib/form/list.py (ListForm.Close): `self._list' nastav kvùli
	defocus na None.
	(ListForm.defocus): Jestli¾e u¾ byl self._list zavøen, nevolej
	OnKillFocus.

2002-02-07  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL._PgBuffer.correction):
	Loguj i `direction'.

	* lib/util/log.py (Logger._formatted_data): Data neloguj pouze
	jsou-li None.

	* lib/form/list.py (FilteredBrowseForm.filter): Pøidána podpora
	pro totální filtrování dat (prázdné dictionary).
	(List._ListTable.current_row): Nová metoda.
	(List._on_search): Eliminovány zbyteèné databázové operace.
	(List._ListTable.rewind): Pøidán nepovinný argument `position'.
	(List._ListTable._retrieve_row.fetch): Pøesunuto o úroveò vý¹e,
	nyní jako metoda `_fetch'.
	(List.refresh): Je-li refresh blokován, nedìlej nic.
	(List.__init__): Nový atribut `_block_refresh'.
	(List._on_search): Po dobu nahození search dialogu blokuj refresh.

	* lib/form/form.py (EditForm.run): Nová metoda.
	(EmbeddedEditForm._run_with_lock): Nová metoda.
	(EmbeddedEditForm.run): Vyu¾ívej ji.
	(SideBrowseDualForm._create_side_form): Kompletnì filtruj
	vytvoøený formuláø.
	(DualForm.OnSetFocus): Nastavuj focus hlavnímu formuláøi jen
	tehdy, pokud tento existuje.
	(EmbeddedEditForm.on_command): Needitaèní pøíkazy provádìj pouze,
	pokud má formuláø nastaven nìjaký existující záznam.
	(EmbeddedEditForm._on_next_record): Vyu¾ívej funkci
	`opposite_direction'.

2002-02-07  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/screen.py (MSeparator): Nová tøída.
	(Menu.__init__): Oprava: v assertu povol MSeparator.

	* lib/form/application.py (Application.message): Nejprve zkus,
	jestli má vrchní okno metodu message, teprve potom pi¹ do statusbaru.

	* lib/form/form.py (EmbeddedEditForm.navigate): Kosmetické úpravy.
	(EditForm._create_form): Pøidán panel emulující statusbar.
	(EditForm.message): Nová metoda.
	(Form.on_command): Doplnìn argument '**kwargs'.
	(EmbeddedEditForm.navigate): Nepokou¹ej se zjistit `object' - není
	to potøeba... Volej `SetEventObject()' jen pokud byl pøedán `object'.
	(EmbeddedEditForm.on_command): Doplnìn argument '**kwargs'.

	* lib/form/inputfield.py (InputField._on_kill_focus): Validaci
	provádìj pouze, pokud do¹lo ke zmìnì. Namísto 'self._message()'
	pou¾ívej funkci `message()'.
	(InputField._message): Zru¹eno.
	(MultiTextField._on_kill_focus): Validaci provádìj pouze, pokud
	do¹lo ke zmìnì. Namísto 'self._message()' pou¾ívej funkci
	`message()'.
	(Invocable.on_command): Doplnìn argument '**kwargs'.

	* lib/form/list.py (List._on_delete_line): Oprava chyby: namísto
	`self._position' volej `self._set_position'.

2002-02-06  Milan Zamazal  <pdm@brailcom.org>

	* config/config.py (logging): Zakomentována volba 'class_filter'.

	* lib/form/list.py (List._set_position): Nová metoda.	
	(List._select_cell, List._on_delete_line): Pou¾ívej ji.

	* lib/data/data.py (opposite_direction): Nová funkce.

	* lib/data/dbdata.py (DBDataPostgreSQL._PgBuffer.correction):
	Loguj ukazovátka.
	(DBDataPostgreSQL._PgBuffer.correction): Neupravuj znaménko
	výsledku dle `direction', zestruènìno.
	(DBDataPostgreSQL.fetchone): Zohlednìna pøedchozí zmìna.
	(PostgreSQLStandardBindingHandler._pdbb_coalesce): Vracej
	nepodmínìnì `value' (doèasný hack).

2002-02-06  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm.__init__): Nastavuj
	`self._size' zde namísto v `_create_form()'.
	(EmbeddedEditForm._create_form): Nenastavuj `self._size'.

2002-02-05  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List._ListTable.__init__): Namísto
	`FieldSpec.label()' pou¾ívej `FieldSpec.column_label()'.
	(List._ListTable._panic): Namísto `_on_leave_window' pou¾ívej
	`_on_leave_form'.
	(List._create_grid): Namísto `_on_leave_window' pou¾ívej
	`_on_leave_form'.
	(List._create_grid): Namísto `FieldSpec.label()' pou¾ívej
	`FieldSpec.column_label()'.
	(List._create_grid): Namísto `FieldSpec.label()' pou¾ívej
	`FieldSpec.column_label()'.
	(List.SetSize): Namísto `FieldSpec.label()' pou¾ívej
	`FieldSpec.column_label()'.

	* lib/form/inputfield.py (InputField._create_label): Pokud je
	label prázdný, nepøidávej dvojteèku.
	(RadioBoxField._create_controls): Pokud je
	label prázdný, nepøidávej dvojteèku.

	* lib/form/form.py (_on_leave_window): Pøejmenováno na
	`_on_leave_form'.
	(PopupForm._on_leave_window): Pøejmenováno na `_on_leave_form'.
	(EmbeddedEditForm.__init__): Vytváøení sizeru pøesunuto do metody
	`_create_form'.
	(EmbeddedEditForm._create_form): Nová metoda.
	(EmbeddedEditForm.size): Nová metoda.
	(EmbeddedEditForm._create_buttons): Metoda pøesunuta do tøídy
	`EditForm'.
	(EmbeddedEditForm._pack_fields): Pro víceøádková políèka
	zarovnávej nadpis nahoru.
	(EmbeddedEditForm.on_command): Namísto `_on_ok' pou¾ívej
	`_on_commit_form'. Namísto `_on_leave_window' pou¾ívej
	`_on_leave_form'.
	(EmbeddedEditForm._on_ok): Pøejmenováno na `_on_commit_form'.
	(EditForm.__init__): Nový argument `editable'.
	(EditForm.__init__): Nastavuj titulek popup okna.
	(EditForm._create_form): Nová metoda.
	(EditForm._create_buttons): Nová metoda.
	(DualForm.__init__): Neo¹etøij EVT_SIZE, není to potøeba.
	(EditDualForm.OnSize): Nová metoda.

2002-02-05  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/form.py (Form.__init__): Smazán neaktuální
	zakomentovaná kód.
	(Form._on_leave_window): Úprava docstringu.

2002-02-05  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/list.py (List.SetSize): Úprava poèítání ¹íøky sloupcù,
	vèetnì zohlednìní zobrazování èi nezobrazování scrollbaru.
	(List._create_grid): Nastav `margins' na 0. Zákaz zmìnu velikostí
	øádkù a sloupcù uvnitø gridu.

	* lib/form/form.py (DualForm.OnSetFocus): Nová metoda.
	(DualForm.__init__): Zaregistruj metodu pro EVT_SET_FOCUS.

2002-02-04  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (Module): Kosmetické úpravy (mazání mezer na
	prázdných øádcích).
	(CheckBoxField._create_controls): Nevytváøej label pro inline políèka.

	* lib/form/form.py (Module): Kosmetické úpravy (mazání mezer na
	prázdných øádcích).

2002-02-03  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL._PgBuffer.current):
	Faktická oprava v docstringu.
	(DBDataPostgreSQL.skip): Proveï pouze zmìnu ukazovátka a vracej
	místo korekce poèet pøeskoèených øádkù.
	(DBDataPostgreSQL._PgBuffer.correction): Nová metoda.
	(DBDataPostgreSQL.skip): Neprovádìj databázový skip.
	(DBDataPostgreSQL.fetchone): Pøi minutí bufferu provádìj
	databázový skip a pou¾ívej novou metodu `correction' bufferu.
	(DBDataPostgreSQL._PgBuffer.fetch): Pøi úplném minutí dat nastav
	ukazovátko mimo data, ne mimo buffer.

	* lib/form/list.py (List.__init__): Nový atribut
	`_cached_position'.
	(List._recreate_grid): Resetuj `_cached_position'.
	(List.select_row): Pracuj s `_cached_position'.

2002-02-02  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/log.py (Logger._retrieve_info): Zji¹»ování jména modulu
	natvrdo zamezeno.
	(Logger.__init__): Odstranìno zapomenuté `foo'.
	
2002-02-01  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/search.py (FilterDialog.run, SearchDialog.run): Nech»
	argument `col' je nepovinný.

	* lib/form/form.py (EmbeddedEditForm._sfs_columns): Nová metoda.
	(EmbeddedEditForm._on_sort_column): Vyu¾ívej ji.
	(EmbeddedEditForm._on_select_filter): Implementováno.
	(EmbeddedEditForm._on_search): Implementováno.
	(EmbeddedEditForm.set_row.find_row): Zaøaï do podmínky filtr,
	i kdy¾ podmínka není zadána.
	(EmbeddedEditForm.set_row): Nový argument `any_row'.
	(EmbeddedEditForm._on_next_record): Pøi pøekroèení hranic dat
	proveï zpìtný chod.
	(EmbeddedEditForm._sf_dialog): Nová metoda.
	(EmbeddedEditForm.__init__): Nové atributy `_search_dialog' a
	`_filter_dialog'.

2002-02-01  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/list.py (_InputFieldCellEditor.BeginEdit): Pro data
	typu 'Codebook' správnì rozdìl hodnotu na sekvenci.
	(_InputFieldCellEditor.EndEdit): Namísto 'field.get_value()'
	pou¾ívej 'field.validate()'. Pro hodnoty typu sekvence proveï
	spojení pøes separátor.
	(List._ListTable.SetValue): Pøidána podpora pro vícehodnotová data
	typu 'Codebook'.
	(List._ListTable.SetValue): Po chybné validaci nezobrazuj dialog,
	pouze zaloguj - nemìlo by k tomu docházet, proto¾e validace je
	provádìna po ji¾ ukonèení editace.
	(List._finish_editing): Nastav default tlaèítko dialogu na 'Ulo¾it'.

	* lib/form/inputfield.py (InputField.type): Nová metoda.
	(InlineMultiTextField._set_value): Kosmetická úprava.

2002-01-31  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm._on_sort_column):
	Implementováno.

	* lib/form/list.py (List._sfs_columns): Vyu¾ívej `sfs_columns'.

	* lib/form/search.py (sfs_columns): Nová funkce.

2002-01-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/search.py (SortingDialog._customize_result): Není-li
	stisknuto akèní tlaèítko, vra» None.
	(SFDialog): Pøepracováno na potomka GenericDialog.
	(SearchDialog, FilterDialog): Zohlednìno pøepracování SFDialog.
	(SortingDialog._ESCAPE_BUTTON): Nová konstanta.
	(SortingDialog.__init__): Pøidáno tlaèítko opu¹tìní dialogu.

	* lib/form/form.py (EmbeddedEditForm.navigate): Vracej flag
	provedení operace.
	(EmbeddedEditForm.on_command): Pro COMMAND_NAVIGATE vracej pravdu,
	pouze pokud byl pøíkaz opravdu proveden.

	* lib/form/command.py: Zru¹en pøíkaz CodeBook.COMMAND_SELECTION.

	* lib/data/types_.py (Integer._NULL_SUBSTITUTION) 
	(Float._NULL_SUBSTITUTION): Hodnota zmìnìna na ''.

	* lib/form/list.py (List.on_key_down.evil_key): Do komentáøe
	doplnìno, proè není provádìn test na Meta.
	(CodeBook.on_command): Zru¹en hack s CodeBook.COMMAND_SELECTION.
	(CodeBook.__init__): Výbìr polo¾ky navazuj na alternate
	activation.
	(CodeBook._WINDOW_HEIGHT): Nová konstanta.
	(CodeBook.__init__): Pou¾ívej ji místo natvrdo zadané hodnoty.
	(List._switch_sorting): Pokud tøídící dialog vrátí None, nedìlej
	nic.
	(List.Close): Nevolej `close' na dialogy.

2002-01-30  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List.__init__): Zru¹en nepou¾ívaný atribut
	`self.activation_key'.
	(List._switch_sorting): Zru¹en kód chovající se jinak k
	èíselníkovým políèkùm.
	(List.set_callback): V assertu povol i None hodnotu pro `function'.
	(ListForm.__init__): Nech» je 'frame_stack' povinným argumentem.
	(CodeBook.__init__): Nech» je 'frame_stack' povinným
	argumentem. Pøedávej frame stack rodiè. konstuktoru. Nenastavuj
	nepou¾ívaný atribut `list.activation_key'. Aktivaèní callback
	nastav na `self._on_selection'.
	(CodeBook._on_activation): Pøejmenováno na `_on_selection'.
	(CodeBook.on_command): Nová metoda.
	(CodeBook.run): Po skonèení dialogu volej `frame_stack.pop()'.
	(BrowseForm.__init__): Nech» je 'frame_stack' povinným argumentem.
	(FilteredBrowseForm.__init__): Nech» je 'frame_stack' povinným
	argumentem a je zachováno jeho obvyklé poøadí (argument condition
	odsunut na konec).
	(FilteredBrowseForm.__init__): Kosmetická úprava.
	(List.on_key_down.evil_key): Netestuj `event.MetaDown()'.

	* lib/form/form.py (Form.__init__): Pøidán assert na resolver a
	frame stack.
	(Form.frame_stack): Nová metoda.
	(EmbeddedEditForm.__init__): 'frame_stack' pøedávej konstruktoru
	rodièe jako neklíèovaný argument.
	(EditForm.__init__): 'frame_stack' pøedávej konstruktoru rodièe
	jako neklíèovaný argument.
	(DualForm.__init__): Nech» je 'frame_stack' povinným argumentem.
	(SideBrowseDualForm._create_side_form): 'frame_stack' pøedávej
	konstruktoru rodièe jako neklíèovaný argument a pøedávej mu
	skuteènou hodnotu, nikoliv None.
	(_create_main_form): 'frame_stack' pøedávej konstruktoru
	rodièe jako neklíèovaný argument.
	(_create_main_form): 'frame_stack' pøedávej konstruktoru
	rodièe jako neklíèovaný argument.

	* lib/form/inputfield.py (Invocable._on_invoke_selection): Nech»
	je argument 'event' nepovinný.
	(DateField._on_invoke_selection): Nový nepovinný argument 'event'.
	(CodeBookField._on_invoke_selection): Nový nepovinný argument 'event'.
	(CodeBookField._on_invoke_selection): Pøi vytváøení 'CodeBook'u
	pøedávej mu frame_stack.

2002-01-29  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/search.py (SortingDialog): Nová tøída.
	(SFDialog.Column): Odsunuto z tøídy a pøejmenováno na SFSColumn.

	* lib/form/command.py: Nový pøíkaz
	List.COMMAND_ACTIVATE_ALTERNATE.
	Pøíkazy List.COMMAND_FILTER, List.COMMAND_SEARCH a
	List.COMMAND_SORT_COLUMN pøesunuty do tøídy Form.

	* lib/form/list.py (List.CALL_ALTERNATE_ACTIVATION): Nová
	konstanta.
	(List.set_callback): Do testu `kind' pøidáno
	CALL_ALTERNATE_ACTIVATION.
	(List._on_activation): Nevracej nic.
	(List._on_alternate_activation): Nová metoda.
	(List.on_command): Pøidáno zpracování pøíkazy
	COMMAND_ACTIVATE_ALTERNATE.
	(List.on_command): Po zpracování pøíkazù vracej TRUE, ne jimi
	vrácené hodnoty.
	(List._switch_sorting): Nech» argumenty `col' a `direction' jsou
	nepovinné; je-li nìkterý z nich zadán, je vyvolán tøídící dialog.
	(List._sf_dialog): Zohlednìna zmìna tøídy specifikace sloupce.
	(List.on_command, List._on_label_left, List._on_label_right):
	Zohlednìn pøesun nìkterých pøíkazù z List do Form.
	(List._sfs_columns): Nová metoda.
	(List._sf_dialog): Pou¾ívej ji.

	* lib/form/form.py (EditDualForm.on_command): Nová metoda.
	(BrowseDualForm._create_main_form): Nech» je volání
	`_on_activation' navázáno na alternativní aktivaci.
	(EmbeddedEditForm.set_row.find_row): Parametrizuj datový select.
	(EmbeddedEditForm.__init__): Nové atributy `_select_condition',
	`_select_filter' a `_select_sorting'.
	(EmbeddedEditForm.on_command): Doplnìna podpora pro pøíkazy
	COMMAND_SEARCH, COMMAND_FILTER a COMMAND_SORT_COLUMN.
	(EmbeddedEditForm._on_search): Nová metoda (zatím prázdná).
	(EmbeddedEditForm._on_select_filter): Nová metoda (zatím prázdná).
	(EmbeddedEditForm._on_sort_column): Nová metoda (zatím prázdná).

2002-01-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/command.py: Pøidány Application aliasy pro EditForm.

	* banka.py: Pøejmenováno na `ebas'.

	* lib/form/list.py (List._ListTable._TYPE_MAPPING): Vyøazeno
	lib.data.Integer.

	* lib/form/screen.py (MenuBar._assemble_menu):
	V UPDATE_UI_CALLBACKU o¹etøuj nedefinovanou aplikaci.

	* lib/data/types_.py (Type._EMPTY_MAPS_TO_NONE): Pøejmenováno na
	_NULL_SUBSTITUTION a hodnota zmìnìna na None.
	(Type.validate, Type.export): Zohlednìna pøedchozí zmìna.
	(Codebook._EMPTY_MAPS_TO_NONE): Zru¹eno.
	(String._NULL_SUBSTITUTION, Float._NULL_SUBSTITUTION)
	(Integer._NULL_SUBSTITUTION, Date._NULL_SUBSTITUTION): Nové
	pøedefinování atributu.
	(Type._AUTONULLIFY): Nový atribut.
	(Type.validate): Zohledòuj ho.
	(String._AUTONULLIFY, DateTime._AUTONULLIFY): Nový atribut.

	* lib/form/form.py (EmbeddedEditForm.__init__): Není-li formuláø
	editovatelný, deaktivuj jeho políèka.
	(DualForm.on_ui_event): Nová metoda.
	(EditDualForm.__init__): Registruj callback na focus hlavního
	formuláøe, nastavující aktivní formuláø.
	(EmbeddedEditForm._on_next_record): Opraven pøeklep
	v identifikátoru _DBOP.
	(EmbeddedEditForm.on_command): Opravena chyba v identifikátoru
	`_on_set_row'.
	(EmbeddedEditForm.on_command): Opravena chyba v identifikátoru
	EditForm.COMMAND_LAST_RECORD.
	(EmbeddedEditForm._set_row): Pøi výjimce loguj i výjimku samotnou.
	(EmbeddedEditForm._set_row): Nemá-li `row' odpovídající klíè,
	nastav `value' na None.
	(SideBrowseDualForm._on_selection): OnSetFocus volej pouze, pokud
	tuto metodu formuláø má.

2002-01-27  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (DBMultiData.check_search_key): Nový test.

	* lib/data/data.py (Data.search_key): Nová metoda.

	* lib/form/form.py (EmbeddedEditForm.__init__): Nový argument
	`editable' a atribut `_editable'.
	(EditForm.__init__): Volej konstruktor EmbeddedEditForm
	s argumentem `editable'.
	(EmbeddedEditForm.on_command): Pøíkazy rozdìleny dle
	re¾imu (ne)editace, pøidány listovací pøíkazy.
	(EmbeddedEditForm.set_row): Sloupec nevytahuj pøes Data.row, nýbr¾
	jej vyhledávej.
	(EmbeddedEditForm.__init__): Nový atribut `_select_count'.
	(EmbeddedEditForm._set_row): Nová metoda.
	(EmbeddedEditForm.set_row.find_row): Vyu¾ívej ji.
	(EmbeddedEditForm._on_next_record): Nová metoda.
	(EmbeddedEditForm._on_set_row): Nová metoda.

	* lib/form/screen.py (WxKey._TRANS_TABLE): Pøidány klávesy Home,
	End, Prior a Next.

	* lib/form/dialog.py (GenericDialog.run): Ukládej se na frame
	stack.

	* lib/form/list.py (List._on_cell_commit): Nový øádek vkládej za
	aktuální øádek, ne pøed nìj.
	(_CellEditor.__init__): Nový argument `registration'.
	(List._create_grid): Pøedávej cell editoru argument
	`registration'.
	(List.__init__): Nový atribut `_current_editor'.
	(_InputFieldCellEditor.EndEdit): O¹etøeny booleans a sekvenèní
	hodnoty.
	(_InputFieldCellEditor.BeginEdit): Volej `_registration'.
	(List._on_cell_rollback): Resetuj aktuální editor.
	(_CellEditor.__init__): Inicializuj atribut `_field'.
	(_CellEditor.field): Nová metoda.
	(List.on_command): Zajisti forwarding pøíkazù aktuálnímu editoru.

	* lib/form/command.py: Pøidány aliasy pro pøíkazy ukonèení editace
	buòky v øádkovém formuláøi.
	Nové pøíkazy pro pohyb po záznamech v editaèním formuláøi.
	Pøidán zápis kláves Prior, Next, Home a End.

2002-01-26  Milan Zamazal  <pdm@brailcom.org>
	
	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_search.sorting_condition):
	Pøedávej relaèním operátorùm argument `ignore_case'.

	* lib/data/data.py (LT, LE, GT, GE): Nech» implicitní hodnota
	`ignore_case' je FALSE.

	* lib/form/list.py (List._on_label_left, List._on_label_right):
	Pøevádìj událost na pøíkaz.
	(List._on_select_cell): Nápodobnì.
	(List._select_cell_command): Nová metoda.
	(List.on_command): Pøidána podpora pro nové pøíkazy.
	(List.on_key_down): Volej pøedchozí `on_key_down' s argumentem
	`dont_skip'.

	* lib/form/command.py: Nové pøíkazy List.COMMAND_SORT_COLUMN a
	List.COMMAND_SELECT_CELL.
	(invoke_command): Nová funkce.

	* lib/form/form.py (SideBrowseDualForm._create_side_form): Nech»
	je rodièem formuláøe `parent'.
	(DualForm.Close): Zru¹ atributy formuláøù.
	(SideBrowseDualForm.Close): Nová metoda.

	* lib/form/application.py (Application.on_command): Zohlednìna
	zmìna `modal'.
	(Application.on_command): Ma¾ hlá¹ení ve status baru.

	* lib/form/screen.py (FrameStack.modal): Zru¹eno.
	(modal): Nová funkce.
	(FrameStack._replace_window): Zohlednìna pøedchozí zmìna.
	(FrameStack._replace_window): Kosmetická úprava.
	(KeyHandler.on_key_down): Vyu¾ij `invoke_command'.

2002-01-25  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._edit_cell): Nekvalifikuj `message'
	jménem modulu a volej je s argumentem `beep_'.
	(List._edit_cell): Hlá¹ení obaleno gettext.
	(List._switch_sorting): Neprovádìj tøídìní poèítaných sloupcù.

	* lib/form/application.py (message): Nový argument `beep_'.

2002-01-25  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/application.py (Application._update_stack_display):
	Nová metoda.
	(Application.OnInit): Volej `self._update_stack_display()'.
	(Application._exit): Pokud framestack není prázdný, zeptej se.
	(Application._popup_form): Volej `self._update_stack_display()'.
	(Application._leave_form): Volej `self._update_stack_display()'.
	(Application.on_command): Pokud je okno na framestacku modální,
	volej jen jeho `on_command' a nic jiného neøe¹.
	(Application.on_command): Oprava zapomenuté negace pøed testem na
	modální okno.

	* lib/form/dialog.py (Dialog): Importuj v¹e z `lib.form'.
	(MultiQuestion.__init__): Ve volání konstruktoru pøedna nastavuj
	ikonu na `ICON_QUESTION'.

	* lib/form/__init__.py (_list): Modul `screen' importuj jako první.

	* lib/form/list.py (List.on_command): Po zpracování COMMAND_EDIT
	vracej v¾dy TRUE. Pokud není nalezen odpovídající pøíkaz, vracej
	v¾dy FALSE.
	(ListForm.__init__): Pou¾ívej `self.title()'. Kosmetické úpravy
	(CodeBook.run): Pøidej se na frame_stack.

	* lib/form/screen.py (StatusBar.__init__): Namísto -1 pou¾ívej
	None pro udání pole s poromìnnou ¹íøkou. ©íøku ber jako poèet
	znakù, ne jako dlg units. 
	(FrameStack.windows): Nová metoda.
	(FrameStack._replace_window): Úpravy jak kosmetické, tak
	sémantické. Zejména co se týèe chování k modálním oknùm.
	(FrameStack._replace_window.modal): Funkce zru¹ena (nahrazena
	stejnojmennou veøejnou metodou).
	(FrameStack.modal): Nová metoda.

	* lib/form/inputfield.py (InputField.__init__): Inicializuj
	atribut `_has_focus'.  O¹etøuj `EVT_SET_FOCUS' voláním
	`_on_set_focus()'.
	(InputField._on_set_focus): Nová metoda.
	(InputField._on_kill_focus): Nastavuj atribut `_has_focus' na FALSE.
	(InputField.has_focus): Nová metoda
	(Invocable.on_command): Nepøedávej metodì `_on_invoke_selection()'
	argument `event'.
	(DateField._on_invoke_selection): Zru¹en argument
	`event'. Vracej `TRUE' namísto `wx.TRUE'.
	(CodeBookField._on_invoke_selection): Zru¹en argument
	`event'. Vracej `TRUE' namísto `wx.TRUE'.

	* lib/form/form.py (EmbeddedEditForm._current_field): Nová metoda.
	(EmbeddedEditForm.on_command): Nejprve volej `on_command()'
	aktuálního políèka.
	(Form.title): Nová metoda.
	(PopupForm._on_leave_window): Odstranìn neaktuální komentáø.
	(PopupForm.run): Upravena logovací hlá¹ka. Kosmetické úpravy.
	(EmbeddedEditForm.__init__): Namísto `self._caption' pou¾ívej
	`self.title()'.
	(EmbeddedEditForm._init_dialog): Nastav focus na první políèko.
	(EmbeddedEditForm._create_caption): Namísto `self._caption'
	pou¾ívej `self.title()'.
	(EmbeddedEditForm._create_buttons): Namísto `self._on_cancel'
	pou¾ij jako handler pro tlaèítko "Cancel" `self._on_leave_window'.
	(EmbeddedEditForm.title): Nová metoda.
	(EmbeddedEditForm.on_command): O¹etøuj také událost
	`Application.COMMAND_LEAVE_FORM'.
	(EmbeddedEditForm._on_ok): Odstranìno zbyteèné logování.
	(EmbeddedEditForm._on_ok): Namísto `self._close_form()' volej
	`self._parent.Close()'.
	(EmbeddedEditForm._on_cancel): Metoda zru¹ena.
	(EmbeddedEditForm._close_form): Metoda zru¹ena.
	(EmbeddedEditForm._on_parent_close): Metoda zru¹ena.
	(EmbeddedEditForm.OnSetFocus): Metoda zru¹ena.
	(EmbeddedEditForm.run): Namísto `PopupForm.run()' volej `Form.run()'.

	* lib/form/command.py: Úprava docstringu.

2002-01-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (FrameStack._replace_window.modal):
	Kosmetická úprava.

	* lib/form/list.py (List._finish_editing): Vyu¾ívej MultiQuestion.
	(List._create_grid): Odstranìn datumový hack.
	(_TextCellEditor): Vyu¾ívej spoleèné vstupní políèko.
	(_Date_Cell_Editor, _BooleanCellEditor, _TextCellEditor)
	(_NumberCellEditor, _FloatCellEditor): Zru¹eno.
	(List._create_grid): Pro v¹echna políèka vyu¾ívej jako editor
	_InputFieldCellEditor.
	(_InputFieldCellEditor.Create): Místo FIELD_CLASS vyu¾ívej
	inputfield.resolve.
	(List._ListTable._TYPE_EDITOR_MAPPING): Zru¹eno.
	(_InputFieldCellEditor.Create): Nehavaruj, pokud widget nemá
	metodu SetInsertionPoint.
	(_InputFieldCellEditor.BeginEdit): Nápodobnì.
	(List.__init__): Volej SetFocus na sebe, nejenom na grid.
	(List.SetFocus): Nový argument `_local'.
	(List.__init__): Nastavuj atr
	(List.select_row): Jsme-li v editaci, ignoruj `position' a vysvi»
	editovaný øádek.
	(List._ListTable.GetTypeName): Vytahuj atribut `wxtype', ne
	`type'.
	(_InputFieldCellEditor.BeginEdit): Pøevádìj hodnoty
	wxGRID_VALUE_BOOL na T/F.
	(_InputFieldCellEditor.BeginEdit): Pro EnumerationField pøevádìj
	`value' na tuple.

2002-01-24  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (get_value): Kosmetické úpravy.
	(MultiTextField._on_kill_focus): Nová metoda.
	(InputField.validate): Kosmetické úpravy.
	(_add_validation_callback): Metoda zru¹ena.
	(InputField._on_kill_focus): Nová metoda
	(_TextValidator._on_char): Pou¾ívej `beep()' namísto `wxBell()'.
	(InputField.__init__): O¹etøuj `EVT_KILL_FOCUS' voláním
	`_on_kill_focus()'.
	(InputField._message): Nová metoda (s prozatimní implementací...).
	(InputField._on_validation): Metoda zru¹ena.

	* lib/form/form.py (PopupForm._popup_frame): Kosmetické úpravy.
	(PopupForm._on_leave_window): Zru¹eny neaktuální komentáøe.
	(DualForm.__init__): Kosmetické úpravy.

	* lib/form/screen.py (FrameStack._replace_window.modal): Oprava chyby.
	(FrameStack._replace_window): Kosmetické úpravy.

2002-01-23  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (FrameStack.push): Zmìnìno zacházení
	s modálními okny, nyní takté¾ ukládají informace na frame stack.
	(FrameStack.pop): V docstringu zohlednìna modální okna.
	(FrameStack._replace_window): Zohlednìna modální okna.

	* lib/form/form.py (Form.on_user_action): Pøejmenováno na
	`on_command'.
	(PopupForm.run): Pou¾ívej frame stack.
	(Form.__init__): Nech» argument `frame_stack' je povinný.
	(EmbeddedEditForm.__init__, EditForm.__init__): Nápodobnì.

	* lib/form/dialog.py (MultiQuestion): Nová tøída.
	(Question): Nech» je potomkem MultiQuestion.

2002-01-22  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/application.py (Application.message): Argument
	`message' smí být i None.

	* lib/form/screen.py (WxKey.is_true_key): Nová metoda.
	(StatusBar.message): Argument `message' smí být i None.
	(KeyHandler.on_key_down): Není-li klávesa pouhým modifikátorem,
	sma¾ hlá¹ení v status bar.

	* lib/form/list.py (List._change_selection_colors): Nová metoda.
	(List.SetFocus, List.OnKillFocus): Vyu¾ívej ji.
	(List._on_insert_line): `computer' je metoda, ne atribut.
	(List._finish_editing): Zaveden tøítlaèítkový dialog s mo¾ností
	ulo¾ení zmìn.
	(List._edit_cell): Nepøedávej application.message argument
	`timeout'.
	(List.exit_check): Dotaz na ulo¾ení editovaného øádku pokládej
	pouze, pokud je øádek zmìnìn.

	* lib/form/form.py (SideBrowseDualForm._create_side_form): Místo
	`form_.set_row' (co to mìlo být?) volej `form_.select_row'.
	(SideBrowseDualForm._create_side_form): Nový atribut
	`_selection_data'.
	(SideBrowseDualForm._on_selection): Vedlej¹í formuláø filtruj
	pouze, pokud do¹lo ke zmìnì filtrovacích dat.
	(EmbeddedEditForm._on_parent_close): Volej `unlock'.
	(BrowseDualForm.__init__): Volej OnSetFocus na hlavní
	formuláø (pøesto¾e, zdá se, to nic nedìlá).

2002-01-22  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/screen.py (KeyHandler.__init__): Nech» argumentem mù¾e
	být i sekvence.

	* lib/form/application.py (Application._popup_form): Zmìna
	argumentù (pou¾ívej pøímo tøídu a název namísto textového
	identifikátoru obsahujícího obojí). Následné vypu¹tìní kódu pro
	zbyteèné zpracování identifikátoru. V¾dy volej `form.run()',
	proto¾e nyní mají tuto metodu v¹echny typy formuláøù.

	* lib/form/command.py: `CodeBook' není `Codebook'.

	* lib/form/list.py (_InputFieldCellEditor.Reset): Namísto
	`self._field.reset_value()' volej `self._field.reset()'.
	(BeginEdit): Namísto `field.set_value()' volej `field.init()'.
	(CodeBook): Tøída `Codebook' pøejmenována zpìt na `CodeBook'.
	(CodeBook.__init__): `CodeBook' není `Codebook'.

	* lib/form/form.py (EmbeddedEditForm._edit_update): Namísto
	`field.set_unmodified()' volej `field.init()'.
	(EmbeddedEditForm.set_row): Namísto `f.set_default()' volej
	`f.init()'.
	(Form.run): Nová metoda.
	(PopupForm._on_parent_close): V logovací hlá¹ce pou¾ívej `self._name'.
	(PopupForm.run): V logovací hlá¹ce pou¾ívej `self._name'.
	(EmbeddedEditForm.exit_check): Logovací hlá¹ka zru¹ena.

	* lib/form/inputfield.py (InputField.set_unmodified): Metoda
	zru¹ena.
	(InputField.set_default): Metoda zru¹ena (resp. transformována na
	metodu 'init').
	(InputField.init): Nová metoda.
	(InputField.set_value): Nenastavuj `self._initial_value' - to teï
	dìlá pouze metoda `init()'. Update docstringu.
	(InputField.reset_value): Pøejmenováno na `reset()'. Update
	docstringu.
	(CodeBookField._create_widget): Neo¹etøuj `EVT_KEY_DOWN' pro
	`display'.
	(Invocable._create_widget): Neo¹etøuj `EVT_KEY_DOWN' pro `button'.
	(TextField._on_key_down_multiline): Namísto
	'self._form._on_key_down()' volej `self.on_key_down()'.
	(_on_key_down): Metoda zru¹ena.
	(InputField.__init__): Namísto o¹tøování `EVT_KEY_DOWN' samostatnì
	volej `KeyHandler.__init__()'.
	(InputField): Nech» je tato tøída potomkem tøídy `KeyHandler'.

2002-01-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (DualForm.__init__): Nový atribut
	`_active_form'.
	(DualForm.on_command): Nová metoda.
	(SideBrowseDualForm._on_selection, DualForm._on_change_window):
	Zru¹eno.
	(SideBrowseDualForm._create_side_form): Nastav formuláøi selection
	callback.
	(SideBrowseDualForm._on_side_selection): Nová metoda.

	* lib/form/list.py (ListForm.__init__): Opravy formátování.
	(List._on_edit): Vracej TRUE/FALSE dle úspìchu/neúspìchu editace.

2002-01-21  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/list.py (ListForm.__init__): Vra» nastavení
	`self._text' podle `title'.
	(ListForm.SetSize): Nenastavuj `SetDimension', ale volej
	self._box.Fit(self).
	(ListForm.OnSize): Po `SetSize' volej je¹tì self.Layout().
	(ListForm.SetSize): Nevolej zbyteènì self._box.Fit(self).
	(ListForm.__init__): Nevolej zbyteènì
	`box.SetDimension'. Nenastavuj `self.SetAutoLayout' (v OnSize je
	voláno self.Layout()).

2002-01-21  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField.set_default): Pokud
	specifikace políèka neurèujue 'default', nastav hodnotu na
	exportovanou NULL hodnotu daného typu.

2002-01-20  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (KeyHandler.on_command): Nová metoda.

	* lib/form/list.py (List): Zmìnìno poøadí dìdiènosti.
	(List._on_cell_commit): Volej MoveCursorRight nepodmínìnì
	s wx.FALSE.

	* lib/form/form.py (Form): Zmìnìno poøadí dìdiènosti.

	* lib/form/application.py (Application): Zmìnìno poøadí
	dìdiènosti.
	(Application.on_command): Zestruènìn docstring.
	(Application._call_current_window): Doplnìno vracení hodnot.
	(Application.on_key_down): Nová metoda.

2002-01-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/_test.py (NextSubclass): Pøejmenováno na Classes.
	(Classes.check_it): Pøejmenováno na `check_next_subclass'.
	(Classes.check_public_attributes): Nový test.

	* lib/util/util.py (public_attributes): Nová funkce.

	* lib/form/inputfield.py: Neimportuj defs.key.
	(Invocable._on_key_down): Zru¹eno.
	(Invocable.on_command): Nová metoda.

	* lib/form/form.py: Neimportuj defs.key.
	(EmbeddedEditForm.on_key_down): Zru¹eno.
	(EmbeddedEditForm.on_command): Nová metoda.
	(EmbeddedEditForm._on_ok): Nech» je argument `event' nepovinný.
	(EmbeddedEditForm.navigate): Nech» je argument `object' nepovinný.

	* lib/form/list.py: Neimportuj defs.key.
	(List.__init__, Codebook.__init__): Aktivaèní klávesu pøebírej
	z odpovídajícího pøíkazu.
	(List._on_line_commit, List._on_line_rollback): Není-li seznam
	v editaci, vra» FALSE.

	* lib/form/command.py: Vlo¾ena dokumentace zápisu z key.py.
	(Command.__str__): Nová metoda.
	
	* config/config.py (logging): Doplnìny zakomentované vzory
	logovacích filtraèních voleb.

	* lib/util/log.py (Logger.__init__): Nové atributy
	`_module_filter' a `_class_filter'.
	(Logger._prefix): Zji¹»ování frame atd. pøesunuto do
	`_retrieve_info'.
	(Logger._prefix): Importuj `inspect' nepodmínìnì.
	(SyslogLogger._prefix._): Stejné zmìny jako v Logger._prefix.
	(Logger._retrieve_info): Nová metoda.
	(Logger.log): Volej ji.
	(Logger._is_accepted): Dodána podpora pro ladící filtry.

	* lib/form/application.py (Application.on_command): Po dobu
	zpracování pøíkazu nastav busy cursor.
	(Application.on_command): Pøidána logovací hlá¹ka.
	(Application._init): Nová metoda.
	(Application.OnInit): Volej ji.
	(Application._leave_form): Opraven chybný odkaz na frame stack.

	* lib/form/screen.py: Neimportuj defs.key.
	(busy_cursor): Nová funkce.
	(is_busy_cursor): Nová metoda.
	(KeyHandler.on_key_down): Dívej se do dictionary tøídy, ne instance.
	(KeyHandler.on_key_down): Opraveny rùzné pøeklepy.
	(KeyHandler.on_key_down): Je-li nalezen pøíkaz, av¹ak ten není
	zpracován, pokraèuj ve zpracování klávesy.
	(WxKey.is_event_of_key): Jestli¾e `key' je None, vra» FALSE.

	* lib/data/types_.py (Codebook._EMPTY_MAPS_TO_NONE): Nastaveno na
	FALSE.
	(Codebook._export): O¹etøuj pøípad, kdy je `value' None; obecnì
	v takovém pøípadì vracej tuple prázdných øetìzcù.
	(Codebook.__init__): Nový atribut `_empty_export'.

2002-01-18  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (Form): Buï potomkem KeyHandler.
	(Form.__init__): Nepøiøazuj explicitnì handler kláves.
	(Form.on_key_down): Zru¹eno.

	* lib/form/list.py (CodeBook): Pøejmenováno na Codebook.
	(ListForm._on_key_down): Zru¹eno.
	(BrowseForm._on_key_down): Zru¹eno.
	(BrowseForm.on_key_down): Zru¹eno.
	(List.UA_LINE_COMMIT, List.UA_LINE_ROLLBACK): Zru¹eno.
	(ListForm.on_user_action): Pøejmenováno na `on_command'.
	(List.on_user_action): Nápodobnì.
	(List.on_command): Kompletnì pøedìláno.
	(List): Buï potomkem KeyHandler.
	(List.on_key_down): Zjednodu¹eno, vìt¹í èást funkcionality
	pøesunuta do standardního zpracování kláves a `on_command'.
	(List._on_edit, List._on_line_commit, List._on_line_rollback)
	(List._on_cell_commit, List._on_cell_rollback): Zru¹en argument
	`event'.
	(List._on_activation, List._on_search, List._on_filter)
	(List._on_insert_line, List._on_delete_line): Nápodobnì.
	(List.__init__): Zru¹en argument `key_handler' a atribut
	`_key_handler'.
	(ListForm.__init__): Zohlednìna pøedchozí zmìna.
	
	* lib/form/__init__.py (_list): Zaèlenìn soubor `command'.

	* lib/util/test.py (transform_args, TestSuite.add.prefix_test):
	Vyu¾ívej `starts_with'.

	* lib/util/_test.py (StringFunctions): Nová sada testù.

	* lib/util/util.py (starts_with): Nová funkce.

	* lib/form/application.py (UserAction): Zru¹eno.
	(Application.on_exit): Pøejmenováno na `_exit', zru¹en argument
	`event'.
	(Application._exit): Vylep¹ena logovací hlá¹ka.
	(Application.on_load_form): Pøejmenováno na `_popup_form'.
	(Application.on_frame_size): Pøejmenováno na `_on_frame_size'.
	(Application.OnInit): Zohlednìna pøedchozí zmìna.
	(Application.OnInit): Pro zpracování kláves registruj místo
	dosavadního handleru metodu `_on_key_down'.
	(Application._on_key_down): Nová metoda.
	(Application): Buï potomkem `KeyHandler'.
	(Application.on_user_action): Pøejmenováno na `on_command'.
	(Application.on_command): Pøidáno zpracování globálních pøíkazù.
	(Application._leave_form): Nová metoda.
	(Application.__init__): Nová metoda.
	(Application._popup_form): Argument `event' nahrazen argumentem
	`formid'.
	(Application._popup_form): Odstranìny blbiny s oddìlovaèi menu.
	(Application.on_menu_action): Zru¹eno.
	(Application.OnInit): Zru¹ena tvorba escape handleru a pøiøazení
	klávesového callbacku.

	* lib/form/screen.py (Command): Pøesunuto do command.py.
	(KeyHandler): Nová tøída.
	(WxEscapeHandler.handler): Zru¹eno.
	(Menu.__init__): Zru¹en argument `id' a atribut `_id'.
	(Menu.id): Zru¹eno.
	(MItem.__init__): Zru¹eny argumenty `id' a `callback', nové
	argumenty `command' a `args'.
	(MItem.id, MItem.callback): Zru¹eno.
	(MItem.command, MItem.args): Nové metody.
	(MItem.__init__): Je-li uvedeno 'hotkey', nastav je 'command'.
	(MenuBar.__init__): id generuj, nepøebírej je z polo¾ek.
	(MenuBar._assemble_menu): Nápodobnì.

	* lib/form/command.py: Nový soubor.
	(Command.id): Nová metoda.
	(Command.key): Zru¹eno, nahrazeno atributem `key'.

	* lib/data/dbdata.py (DBDataPyPgSQL._pg_query): Opraveno chybné
	formátování.

2002-01-18  Tomá¹ Cerha  <cerha@brailcom.org>

	* config/config.py (icon_dir): Nová konfiguraèní promìnná.

	* lib/form/list.py: Namísto dialogu 'Message' pou¾ij dialog
	'Error'.
	(List._finish_editing): Úprava pou¾ití dialogu 'Question'.
	(List._on_search): Namísto dialogu 'Message' pou¾ij dialog
	'Warning'.
	(List._on_edit): Úprava pou¾ití dialogu 'Message'.  Namísto
	dialogu 'Message' pou¾ij dialog 'Warning'.
	(List._on_cell_commit): Úprava pou¾ití dialogu 'Question'.
	Nastavuj 'TRUE' jako implicitní odpovìï.

	* lib/form/inputfield.py (InputField.validate): Namísto dialogu
	'Message' pou¾ij dialog 'Error'.

	* lib/form/form.py (EmbeddedEditForm._lock): Úprava pou¾ití
	dialogu 'Message'.
	(EmbeddedEditForm.exit_check): Úprava pou¾ití dialogu 'Question'.
	(EmbeddedEditForm.exit_check): V konstruktoru `Question' pou¾ij
	`yes_default=TRUE'.
	(EmbeddedEditForm.exit_check): Úprava pou¾ití argumentu `default'
	dialogu 'Question'.

	* lib/form/application.py (Application._top_level_exception): Namísto
	dialogu 'Message' pou¾ij dialog 'Error'.

	* lib/form/dialog.py: Modul kompletnì pøepsán. Následující záznamy
	jsou vìt¹inou jen velmi obecné...
	(GenericDialog): Nová základní tøída.
	(Message): Doplnìna mo¾nost specifikovat ikonu. Vìt¹ina obecného
	kódu pøesunuta do tøídy `GenericDialog'.
	(Choice): Tøída zru¹ena (její funkènost je ji¾ obsa¾ena v tøídì
	'Message').
	(Warning): Nová tøída.
	(Error): Nová tøída.
	(Question): Tøída je nyní pouze specializací tøídy `Message'.
	(InputDialog): Nová tøída s obecný, textovým vstupem.
	(Password): Tøída je nyní pouze specializací tøídy `InputDialog'.
	(Calendar): Tøída nyní vyu¾ívá obecné tøídy 'GenericDialog'.
	(GenericDialog._create_dialog): Pokud je nastaveno
	`self._default_button', o¹etøuj `EVT_SET_FOCUS' metodou
	`._focus_default_button()'.
	(GenericDialog._focus_default_button): Nová metoda.
	(GenericDialog._create_buttons): Pro `default' tlaèítko volej
	`SetDefault()' a ulo¾ ho do `self._default_button'.
	(Question.__init__): Argument `default' má pro tuto tøídu
	speciální význam (jeho hodnota je boolean) - zdokumentováno. 

	* lib/form/search.py (SFDialog._selected_condition): Namísto
	dialogu 'Message' pou¾ij dialog 'Error'.

2002-01-17  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (Form.focus): Volej na aplikaci `activate'.
	(Form._ACTIVATIONS): Nová konstanta.
	(Form.ACT_FORM): Nová konstanta.

	* lib/form/application.py (Application.activate): Nová metoda.

	* lib/form/screen.py (MItem.__init__): Zru¹en argument
	`activation'.
	(MItem.activation): Zru¹eno.
	(Menu.activation): Nová metoda.
	(MenuBar.activate): Nová metoda.
	(MenuBar.__init__): Nevkládej podmínìnì aktivní polo¾ky do menu,
	vytvoø jejich seznam.
	(MenuBar.save, MenuBar.restore): Nové metody.

	* lib/form/application.py (Application.OnInit): Nevolej
	`_activate'.
	(Application.push, Application.replace): Zru¹en argument
	`activation'.

	* lib/form/screen.py (ButtonBar): Nebuï potomkem Active.
	(ButtonBar.activate): Zru¹eno.
	(beep): Nová funkce.

2002-01-17  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField.__init__): V inline re¾imu
	nastavuj controlùm jiného rodièe ne¾ ve formuláøi (nová promìnná
	`self._ctrl_parent'. Pøidán také komentáø vysvìtlující tento
	hack. Na `self._controls' pou¾ívej xtuple().
	(InputField._create_label): Pou¾ívej `self._ctrl_parent'.
	(Unlabeled._create_label): Pou¾ívej `self._ctrl_parent'.
	(TextField._create_text_control): Pou¾ívej `self._ctrl_parent'.
	(CheckBoxField._create_controls): Pou¾ívej `self._ctrl_parent'.
	(ChoiceField._create_controls): Pou¾ívej `self._ctrl_parent'.
	(RadioBoxField._create_controls): Pou¾ívej `self._ctrl_parent'.
	(ListBoxField._create_controls): Pou¾ívej `self._ctrl_parent'.
	(Invocable._create_button): Pou¾ívej `self._ctrl_parent'.
	(CodeBookField._create_widget): Pou¾ívej `self._ctrl_parent'.

2002-01-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py: V docstringu zru¹en odstavec o aktivacích.
	(_Activation): Zru¹eno.
	(Active): Zru¹eno.
	(MenuBar): Ji¾ není potomkem `Active'.
	(MenuBar.activate): Zru¹eno.
	(MItem.__init__): `callback' nyní mù¾e být i instance Command.
	(FrameStack.replace): Nevolej `activate'.
	(FrameStack._activate): Zru¹eno.
	(FrameStack._State.__init__): Zru¹en argument `activation'
	(FrameStack._State.activation): Zru¹eno.
	(ACT_DEFAULT): Zru¹eno.
	(FrameStack.push, FrameStack.pop): Nevolej `_activate'.
	(FrameStack.push, FrameStack.replace): Zru¹en argument
	`activation.
	(Command): Nová tøída.

2002-01-16  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EmbeddedEditForm.__init__): na událost
	`wx.EVT_INIT_DIALOG' reaguj voláním `self._init_dialog()'. Nevolej
	`self.set_row()', jen si zapamatuj klíè - `set_row()' bude voláno
	v `_init_dialog()'.
	(EmbeddedEditForm._init_dialog): Nová metoda.

	* lib/form/inputfield.py (InputField._create_label): Jako parent
	pou¾ij `self._form', jinak label není vidìt...

	* lib/form/list.py (List._edit_cell): Pøi pokusu o editaci
	needitovatelného sloupce volej `wx.wxBell()'.  Namísto log()
	pou¾ívej application.message() (a vyu¾ij `timeout'!).

	* lib/form/spec.py (FieldSpec.column_label): Úprava docstringu.
	Namísto `... and ... or ...' pou¾ívej `if ... else ...'.
	(FieldSpec.column_width): Úprava docstringu. Oprava chyb.
	(FieldSpec.height): Namísto `... and ... or ...' pou¾ívej `if
	... else ...'.

	* lib/form/screen.py (StatusBar._Timer): Nová tøída.
	(StatusBar.__init__): Pro ka¾dé políèko vytvoø timer.
	(StatusBar.message): Nový argument `timeout' - pokud je definován,
	spus» timer.

	* lib/form/application.py (Application.message): Nový argument
	`timeout'.
	(message): Nový argument `timeout'.

2002-01-15  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/spec.py (FieldSpec.__init__): Implicitní hodnotu
	`column_width' ber z `width'.
	(FieldSpec.type): Do assertu na existenci sloupce pøidáno id
	sloupce.
	(FieldSpec.width, FieldSpec.column_width): Je-li ¹íøka 0, vra» ji
	a ne default.

	* lib/form/list.py (List.OnKillFocus): Místo Refresh volej Show
	vyp/zap.
	(List._ListTable._Column.__init__): Nový argument a atribut
	`wxtype'.
	(List._ListTable.__init__): Zohlednìna pøedchozí zmìna.
	(List._ListTable.__init__): Typ vytahuj ze specifikace sloupce.
	(List._ListTable.GetValue, List._ListTable.SetValue): Nápodobnì.
	(List._create_grid): Nepøedávej do Computer typ.
	(List._create_grid): Do volání FieldSpec pøidán argument `type_'.
	(List._on_insert_line): Typ vytahuj ze specifikace sloupce.

2002-01-15  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField.__init__): Neukládej
	`self._data'. Neukládej `self._data_column'. Ukládej `self._type'.
	(data_column): Metoda zru¹ena.
	(StringField._maxlen): Pou¾ívej `self._type' namísto
	`self.data_column().type()'.
	(InputField.validate): Update identifikátorù v
	docstringu. Pou¾ívej `self._type' namísto
	`self.data_column().type()'.
	(InputField.set_default): Pou¾ívej `self._type' namísto
	`self.data_column().type()'.
	(StringField): Update identifikátorù v docstringu.
	(StringField._maxlen): Pou¾ívej `self._type' namísto
	`self.spec().type()'.
	(EnumerationField): Update identifikátorù v docstringu.
	(EnumerationField._values): Pou¾ívej `self._type' namísto
	`self.data_column().type()'.
	(DateField): Update identifikátorù v docstringu.
	(CodeBookField): Update identifikátorù v docstringu.
	(CodeBookField._number_of_fields): Pou¾ívej `self._type' namísto
	`self.data_column().type()'.
	(CodeBookField._maxlen): Pou¾ívej `self._type' namísto
	`self.data_column().type()'.
	(CodeBookField._on_text_hook): Pou¾ívej `self._type' namísto
	`self.data_column().type()'.

	* lib/form/list.py (_InputFieldCellEditor.Create): Volej
	`control.SetInsertionPoint(0)'. Konstruktoru `InputField'u
	pøedávej nový parametr `form'.
	(_InputFieldCellEditor.BeginEdit): Konstruktoru `InputField'u
	pøedávej nový parametr `form'.
	
	* lib/form/inputfield.py (resolve): Nový povinný argument `form'.
	(InputField.__init__): Nový povinný argument `form'.
	(InputField._on_key_down): `Form' není `self._parent', ale
	`self._form'...
	(_skip_navigation): `Form' není `self._parent', ale
	`self._form'...
	(TextField._create_text_control): Velikost nastavuj pouze pokud
	není "inline".
	(TextField._on_key_down_multiline): `Form' není `self._parent', ale
	`self._form'...
	(DateField._on_invoke_selection): Namísto `self._parent.parent()'
	pou¾ívej `self._parent' (Parent ji¾ není `Form').
	(CodeBookField._on_invoke_selection): Také tak...

	* lib/form/form.py (EmbeddedEditForm._pack_fields): Funkci
	`inputfield.resolve()' pøedávej nový argument `form'.

2002-01-15  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (FieldSpec.__init__): Zru¹eno zapomenuté
	pøiøazení `hint'.
	(hint): Metoda zru¹ena.

2002-01-15  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (MenuBar.MENU_ID_SEPARATOR): Nová konstanta.
	(MenuBar._assemble_menu): Pou¾ívej ji místo natvrdo zadaného
	znaku.

	* lib/form/list.py (ListForm.on_user_action): Nová metoda.
	(List.on_user_action): Nová metoda.
	(List.UA_LINE_COMMIT, List.UA_LINE_ROLLBACK): Nové konstanty.

	* lib/form/form.py (Form.on_user_action): Nová metoda.

	* lib/form/application.py (Application._menu_id): Nová metoda.
	(Application.on_load_form): Vyu¾ívej ji.
	(Application._top_level_exception): Nová metoda.
	(Application.on_load_form): Vyu¾ívej ji.
	(Application.on_menu_action): Nová metoda.
	(Application.on_ui_event): Doplnìn docstring.
	(Application._call_current_window): Nová metoda.
	(Application.on_ui_event): Vyu¾ívej ji.
	(Application.on_user_action): Nová metoda.
	(UserAction): Nová tøída.
	(Application.on_load_form): Pou¾ívej MENU_ID_SEPARATOR místo
	natvrdo zadaného znaku.

2002-01-14 Tomá¹ Cerha <cerha@brailcom.cz>

        * fefs/UcDenik.py: Úpravy související se zru¹ením tøídy.

	* lib/form/spec.py (FieldSpec.__init__): Zru¹en argument
	`hint'. Nový argument `column_label'.
	(FieldSpec.width): Stylistická úprava kódu.
	(FieldSpec.column_label): Nová metoda.
	(FieldSpec.column_width): Stylistická úprava kódu.
	(FieldSpec.height): Stylistická úprava kódu.

	`spec.ColumnSpec'.

	* lib/form/inputfield.py (resolve): Ke zji¹tìní typu pou¾ívej
	`spec.FieldSpec.type()' namísto `lib.data.ColumnSpec.type()'.
	(InputField.__init__): Zru¹en assert na existenci datového
	sloupeèku. Ukládej si odkaz na datový objekt.
	(InputField.data_column): Update docstringu.
	(InputField.spec): Update docstringu.
	(InputField.set_default): Pouøívej `self.spec().type()' namísto
	`Computer.type()'.

	* lib/form/list.py (List._ListTable.__init__): Pou¾ívej
	`FieldSpec.column_width()' namísto `width()'.
	(List.__init__): Update docstringu.
	(List._create_grid): Novì vytváøené FieldSpec pøedávej i argument
	`column_width'.
	(List._create_grid): Pou¾ívej `FieldSpec.column_width()' namísto
	`width()'.
	(List.SetSize): Pou¾ívej `FieldSpec.column_width()' namísto
	`width()'.
	(ListForm._columns): Update docstringu.
	(CodeBook._columns): Update docstringu.

	* lib/form/resolver.py (ResolverFileError.__init__): Nový atribut
	`exception'.
	(Resolver._load_module): Pøedávej zachycenou výjimku vytváøené
	instanci `ResolverFileError'.

	* lib/form/spec.py: Update docstringu.
	(Computer.__init__): Zru¹en argument `type'. Update docstringu.
	(type): Metoda zru¹ena.
	(ColumnSpec): Tøída Zru¹ena.
	(ColumnSpecFromField): Tøída zru¹ena.
	(FieldSpec): Update docstringu.
	(FieldSpec.__init__): Argument `label' nech» je povinný. Nový
	argument `column_width'. Nový argument `type_'. Doplòeny asserty.
	(FieldSpec.type): Nová metoda.
	(FieldSpec.width): Stylistické úpravy.
	(FieldSpec.column_width.ault):  Nová metoda.
	(ViewSpec.__init__): Úpravy související se zru¹ením tøídy `ColumnSpec'.
	Nevytváøej slovníky sloupcù ani políèek.
	(ViewSpec._remember_columns): Metoda zru¹ena.
	(ViewSpec._remember_fields): Metoda zru¹ena.
	(ViewSpec.field): Metoda zru¹ena.
	(ViewSpec.column): Metoda zru¹ena.

2002-01-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List.on_ui_event): Nová metoda.
	(ListForm.on_ui_event): Nová metoda.
	(List.UI_EDIT_CHANGE): Nová konstanta.
	(List._select_cell): Volej SetGridCursor ka¾dopádnì.
	(List._sf_dialog): SFDialog, ne Dialog.

	* lib/form/form.py (Form.on_ui_event): Nová metoda.

	* lib/form/screen.py (Menu.__init__): Nový argument `uievent_id' a
	atribut `_uievent_id'.
	(Menu.uievent_id): Nová metoda.
	(MenuBar._assemble_menu): Registruj callbacky pro polo¾ky menu
	s uievent_id.

	* lib/form/application.py (Application.on_ui_event): Nová metoda.
	(Application.OnInit): `_application' nastav co nejdøív.

2002-01-14  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (ColumnSpec.__init__): Atribut `computer'
	nech» je privátní (`_computer'). 
	(ColumnSpec.computer): Nová metoda.
	(ColumnSpecFromField.__init__): Nastavuj také `computer'.
	(FieldSpec.__init__.ault): Nový argument `computer'.
	(FieldSpec.computer): Nová metoda.

2002-01-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/spec.py (ColumnSpec.__init__): `computer' pøejmenováno
	na `_computer'.
	(ColumnSpec.computer): Nová metoda.

	* lib/form/list.py (List._create_grid): Zji¹»uj poèítanost
	poèítaèe sloupce testem na typ jeho hodnoty.
	(List._create_grid): Místo pøenastavování atributù v kopii
	ColumnSpec vytvoø zbrusu novou instanci.
	(List._ListTable.__init__, List._create_grid)
	(List._sf_dialog): Zohlednìna zmìna ColumnSpec.

	* lib/data/data.py (Row.__str__): Vracej i klíèe sloupcù.

2002-01-13  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (Data.check_row_key): Nový test.
	(Data.setUp): Nová metoda.

	* lib/data/data.py (Data.row_key): Nová metoda.
	(Row.__init__): Úpravy docstringu.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_tabcol)
	(PostgreSQLStandardBindingHandler._pdbb_btabcol)
	(PostgreSQLStandardBindingHandler._pdbb_coalesce)
	(PostgreSQLStandardBindingHandler._pg_send_notifications): Doplnìn
	struèný docstring.
	(PostgreSQLStandardBindingHandler._pg_update): Vyu¾ito `xtuple'.
	(PostgreSQLStandardBindingHandler._pdbb_row_main_value): Zru¹eno.
	(PostgreSQLStandardBindingHandler._pg_update) 
	(DBDataPostgreSQL.update): Místo `_pdbb_row_main_value' pou¾ívej
	`row_key'.
	(PostgreSQLStandardBindingHandler._pdbb_sort2sql): Drobné
	zjednodu¹ení kódu.

	* lib/form/list.py (List.on_key_down.evil_key): Akceptuj pouze
	nìkteré klávesy a klávesy s nìkterými modifikátory.

2002-01-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/_test.py (Find): Nová sada testù.
	(NextSubclass): Nová sada testù.

	* lib/util/util.py (find): Nová funkce.
	(next_subclass): Nová funkce.
	(_mro): Nová funkce.

	* lib/form/form.py (Form._on_key_down): Pøejmenováno na
	`on_key_down'.
	(EmbeddedEditForm._on_key_down): Nápodobnì.
	(Form.__init__): Zohlednìna pøedchozí zmìna.

	* lib/form/inputfield.py (InputField.reset_value): Nová metoda.
	(Invocable._on_key_down): Dal¹í metodu `_on_key_down' volej pouze,
	pokud nebyla zpracována klávesa.
	(Invocable._on_key_down): Pøi nezpracované klávese volej metodu
	pøedka místo metody rodièe.
	(InputField._on_key_down): V inline re¾imu o¹etøuj klávesy
	potvrzení a zru¹ení editace políèka.

	* lib/form/list.py (_InputFieldCellEditor.Create): Nastav widget
	pøes SetControl.
	(_InputFieldCellEditor.BeginEdit, _InputFieldCellEditor.EndEdit) 
	(_InputFieldCellEditor.Reset): Pro obnovení pùvodní hodnoty
	vyu¾ívej metody tøídy InputField.
	(BrowseForm.on_key_down): Nová metoda.
	(ListForm._on_key_down): Nová metoda.
	(List._on_key_down): Pøejmenováno na `on_key_down'.
	(List._create_grid): Zohlednìna pøedchozí zmìna.

2002-01-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py: lib.data.types_ -> lib.data.
	(List._select_cell): Logovací hlá¹ky pøechodu loguj s druhem
	DEBUG.
	(List._on_key_down): Loguj klávesovou událost s druhem DEBUG.
	(List._on_select_cell): Loguj buòku s druhem DEBUG.
	(List._select_cell): SelectRow volej pouze, pokud daný øádek ji¾
	není v selekci.
	(List.select_row.set): Nápodobnì.
	(_InputFieldCellEditor): Nová tøída.
	(_Date_Cell_Editor): Nová tøída.
	(_CellEditor.__init__): Nová metoda.
	(_BooleanCellEditor.__init__, _NumberCellEditor.__init__)
	(_FloatCellEditor.__init__, _TextCellEditor.__init__): Nová
	metoda.
	(List._create_grid): Volej konstruktor editoru s novì zavedenými
	argumenty.
	(List._ListTable._TYPE_EDITOR_MAPPING): Pøidán _DateCellEditor.

	* lib/util/log.py (Logger._prefix): Modul zji¹»uj pouze, je-li
	definováno __debug__.

2002-01-11  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (Computer.__call__): Nová metoda.
	(FieldSpec.__init__): Nový argument 'default'.
	(FieldSpec.default): Nová metoda.

	* lib/form/inputfield.py (InputField.set_default): Nová metoda.

	* lib/form/form.py (EmbeddedEditForm.__init__): `self.set_row()'
	volej i kdy¾ `key' je None.
	(EmbeddedEditForm.set_row): Kdy¾ je `key' None, volej pro v¹echna
	políèka metodu `set_default()'.

2002-01-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/util.py: Definuj `super' natvrdo.

2002-01-09  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/list.py (List._create_grid): Nastavuj font pro label
	pøi vytváøení gridu
	(wxPython-2.3.2 toti¾ nastavuje o¹klivý font pro záhlaví listu).

2002-01-09  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/util.py (super): Pøejmenováno na `super_'.
	(super): Nová podmínìnì pøiøazená funkce.

	* lib/form/search.py: Updatovány importy.
	(Dialog): Pøejmenováno na SFDialog.
	(SearchDialog, FilterDialog): Zohlednìna pøedchozí zmìna.

	* lib/form/list.py (BrowseForm.__init__, CodeBook.__init__):
	Opravena kvalifikace konstanty SELECTION_CALLBACK.
	(BrowseForm.set_callback): Nová metoda.

	* lib/form/form.py (EditForm.__init__): Nový argument `popup'.
	(EditDualForm._create_main_form): Volej konstruktor EditForm
	s argumentem `popup'.
	(SideBrowseDualForm): Nová tøída.
	(BrowseDualForm._create_side_form): Pøesunuto do
	SideBrowseDualForm.
	(EditDualForm._create_side_form): Nápodobnì.
	(BrowseDualForm, EditDualForm): Buï potomkem SideBrowseDualForm.
	(Form.set_callback): Nová metoda.
	(EditForm.CALL_SELECTION): Nová konstanta.
	(Form._run_callback): Nová metoda.
	(Form.__init__): Nový atribut `_callbacks'.
	(EditForm.set_row): Volej selection callback.
	(EditDualForm._create_main_form): Nastav vytvoøenému formuláøi
	selection callback.
	(BrowseDualForm._create_main_form): Jako selection callback
	nastavuj `_on_selection' místo vlastní funkce.
	(BrowseDualForm): Odstranìny kvalifikace souboru `list'.
	(BrowseDualForm._on_activation): Nová metoda.
	(EditDualForm.__init__): Zru¹en argument `row'.
	(PopupForm._on_leave_window): Nová metoda.
	(Form._on_leave_window): Odstranìny vìci týkající se PopupForm.
	(EditForm): Pøejmenováno na EmbeddedEditForm, nedìdí PopupForm.
	(EditForm): Nová tøída.
	(PopupForm._on_parent_close): Nová metoda.
	(EmbeddedEditForm.exit_check): Nová metoda.
	(EmbeddedEditForm._on_parent_close): Ztrivializováno,
	funkcionalita pøenesena do `exit_check'.
	(EmbeddedEditForm.OnSetFocus): Testuj na prázdné `_fields'.

	* lib/data/_test.py: Místo jednotlivých souborù importuj pouze
	lib.data.

	* lib/util/_test.py (InstanceResolver): Zru¹eno.

2002-01-09  Pavel Hanak  <hanak@brailcom.cz>

	* lib/form/form.py (BrowseDualForm._create_side_form,
	BrowseDualForm.__init__, BrowseDualForm._create_main_form):
	Pou¾ívej `List' místo `list.List'.
	

2002-01-09  Tomá¹ Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (ColumnSpecFromField.__init__): ze specifikace
	políèka pøebírej i `separator'.
	(FieldSpec.__init__): Nový argument `separator'.
	(FieldSpec.separator): Nová metoda.

	* lib/form/inputfield.py (resolve): Nový argument `inline'.
	(InputField.__init__): Nový argument `inline'. Nejprve volej
	`self._create_controls()', potom teprve
	`self._create_widget()'. Pokud je `inline' pravda, nevytváøej
	label a proveï assert na poèet prvkù vrácený metodou
	`self._create_controls()' rovný právì jedné.
	(InputField._create_controls): Nová metoda.
	(InputField._create_widget): Sestav widget jako sizer slo¾ený z
	prvkù `self._controls'. Update dokumwentace - rozdìlení funkènosti
	na dvì metody - `_create_controls()' `_create_widget()'.
	(InputField._skip_navigation): Kód uzavøi do try ... except.
	(GenericField): Update dokumentace.
	(TextField._create_widget): Metoda nahrazena pouze metodou
	`_create_controls()'.
	(CheckBoxField._create_widget): Metoda nahrazena pouze metodou
	`_create_controls()'.
	(ChoiceField._create_widget): Metoda nahrazena pouze metodou
	`_create_controls()'.
	(RadioBoxField._create_widget): Metoda nahrazena pouze metodou
	`_create_controls()'.
	(ListBoxField._create_widget): Metoda nahrazena pouze metodou
	`_create_controls()'.
	(Invocable._create_widget): Zmìny související s novým významem
	metody `_create_widget()'
	(InlineMultiTextField): Nová tøída.
	(MultiTextField): Nech» je tøída potomkem `InlineMultiTextField' a
	pøedefinovává pouze nezbytné metody.
	(MultiTextField._create_controls): V 'inline' re¾imu volej metodu
	pøedka.
	(MultiTextField.get_value): V 'inline' re¾imu volej metodu pøedka.
	(MultiTextField._set_value): V 'inline' re¾imu volej metodu
	pøedka.
	(CodeBookField._create_widget): V 'inline' re¾imu nevytváøej display.

	* lib/form/list.py (List._ListTable.GetValue): U stringových hodnot
	je¹tì pøed vrácením spoj øádky.

2002-01-08  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/util.py (Resolver): Zru¹eno.
	(InstanceResolver): Zru¹eno.
	(xlist): Nová funkce.

	* lib/form/resolver.py (Resolver.__init__): `path' pøevádìj na
	list pomocí `xlist'.

	* lib/form/screen.py (StatusBar.__init__.field_width): Neimportuj
	`form'.
	(MenuBar._assemble_menu): Neimportuj lib.form.screen.

	* lib/form/spec.py (Computer.__init__): Místo lib.data.types_
	importuj lib.data.

	* lib/form/inputfield.py: Neimportuj lib.util.
	Importuj hvìzdièkovì lib.form místo importù jednotlivých souborù.
	(CodeBookField._on_invoke_selection): Neimportuj `list'.

	* config/config.py (application_name): Importuj z lib.data, ne
	lib.data.dbdata.

	* lib/data/__init__.py: Hvìzdièkovì importuj lib.util.

	* lib/data/types_.py: Neimportuj lib.util.

	* lib/data/data.py: Neimportuj lib.util.

	* lib/data/dbdata.py: Neimportuj lib.util.
	(PostgreSQLStandardBindingHandler._pdbb_coalesce.ault): Argument
	id sloupce nahrazen argumentem typ sloupce.
	(DBColumnBinding.__init__): V docstringu u argumentu `column'
	doplnìno, ¾e mù¾e být sekvencí.
	(PostgreSQLStandardBindingHandler._pdbb_sort2sql.item2sql) 
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql.relop):
	O¹etøeny multisloupce.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Sjednocena tvorba `ordering' a `rordering'.

	* lib/form/list.py: Importuj celé lib.form hvìzdièkovì.
	Neimportuj lib.util.
	(List.__init__): Ostranìn hack s importem `application'.

	* lib/form/form.py: Neimportuj lib.data.dbdata.
	Importuj celé lib.form hvìzdièkovì.
	Neimportuj lib.util.	
	(EditForm._on_parent_close, BrowseDualForm.__init__)
	(BrowseDualForm._create_main_form, BrowseDualForm._create_side_form)
	(EditDualForm._create_side_form, EditDualForm._create_main_form):
	Neimportuj `list'.

	* lib/form/dialog.py: Místo lib.data.dbdata importuj lib.data.

	* lib/form/application.py: Neimportuj `config'.
	lib.form importuj vcelku a hvìzdièkovì.
	Neimportuj lib.util.
	(Application.on_load_form): Neimportuj `dialog'.

	* lib/form/__init__.py: Importuj hvìzdièkovì v¹echny soubory.
	Aktualizován docstring.

2002-01-07  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List.__init__): Importuj `application.'
	(List._on_delete_line, List._on_line_commit): Zobraz zprávu
	o úspìchu do stavového øádku.

	* config/config.py (logging): Nová konfiguraèní volba `logger'.

	* lib/util/test.py: `config' importuj a¾ na místì pou¾ití.

	* lib/data/dbdata.py: Místo jednotlivých submodulù lib.data
	hvìzdièkovì importuj lib.data.
	mx.DateTime importuj plnì kvalifikovanì.
	(DBDataPyPgSQL._pg_query): Dojde-li k operaèní chybì uvnitø
	transakce, nepokou¹ej se provést dotaz nad novým spojením.
	(PostgreSQLStandardBindingHandler._pdbb_coalesce.ault): Doplnìna
	podpora pro Boolean a Float.
	(PostgreSQLStandardBindingHandler._pdbb_coalesce): Doplnìny
	kvalifikace typù hodnot.
	(PostgreSQLStandardBindingHandler._pdbb_coalesce): Nový argument
	`value', vracej celý coalesce výraz.
	(PostgreSQLStandardBindingHandler._pdbb_sort2sql.item2sql) 
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql.relop) 
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Zohlednìna pøedchozí zmìna.

	* lib/data/data.py: Hvìzdièkovì importuj lib.data.
	Místo lib.util.util importuj lib.util.

	* lib/data/__init__.py: Hvìzdièkovì importuj `types_' a `dbdata'.

	* lib/util/__init__.py: Hvìzdièkovì importuj `test'.

	* lib/util/log.py (log): V docstringu povoleno neklíèování
	argumentu `data'.
	(SyslogLogger._MAX_MESSAGE_LENGTH): Nový konstantní atribut.
	(SyslogLogger._send): Jakés takés o¹etøení maximální mo¾né délky
	zprávy syslogu.
	(log): Nevytváøej `logger' natvrdo, nýbr¾ ber parametry jeho
	konstrukce z konfigurace.
	(SyslogLogger._prefix): Nech» prefix není prázdný a obsahuje
	v¹echny informace neposkytované syslogem.

	* lib/form/application.py: Zru¹en import `locale'.
	(Application.message): Nová metoda.
	(_application): Nová promìnná.
	(Application.OnInit): Ulo¾ se do `_application'.
	(Application.on_exit): Odstraò se z `_application'.
	(message): Nová funkce.

	* lib/form/screen.py (StatusBar.message): Pøejmenováno na
	`_current_message'.
	(StatusBar.show_message): Pøejmenováno na `message', zmìna
	definice chování pøi neexistujícím id.
	(StatusBar): Úpravy docstringu.
	(StatusBar.__init__): Úpravy docstringu.
	(StatusBar.__init__): ©íøky polí jsou nyní v dialogových
	jednotkách, úpravy kódu.
	(StatusBar.message): Úpravy docstringu.
	(StatusBar._field_number, StatusBar.message): Neexistuje-li pole
	s po¾adovaným id, je vyvolána výjimka KeyError (pouze dokumentaèní
	zmìna).
	(StatusBar.save, StatusBar.restore): Zohlednìno pøejmenování
	nìkterých metod.

2002-01-06  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Opraveno chybné poøadí parametrù v tvorbì
	`_pdbb_command_insert_newpos'.
	(PostgreSQLStandardBindingHandler._pg_insert): O¹etøen pøípad, kdy
	SQL pøíkaz vracející nejvy¹¹í poøadové èíslo vrátí NULL.

	* lib/form/list.py (List._on_line_commit): Roz¹íøena hlá¹ka
	o neúspìchu insertu.
	(List._ListTable._EditedRow.__init__): Konstruktoru pøedka
	pøedávej ji¾ zkopírovaný sloupec, je-li nový.

2002-01-05  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql.relop):
	`lower' aplikuj pouze na stringové sloupce.

	* lib/form/list.py (List._FOCUS_COLORS): Nový atribut.
	(List._NOFOCUS_COLORS): Nový atribut.
	(List.SetFocus): Nastav barvu výbìru a volej `focus' na rodièe.
	(List.OnKillFocus): Nová metoda.
	(List._on_select_cell): Volej SetFocus.
	(List._select_cell): Nevolej SetFocus na grid.
	(List._recreate_grid): Místo nastavení focusu buï nastav focus,
	nebo zru¹ focus.
	(List.__init__): Do docstringu doplnìna poznámka o správném
	rodièe.
	(ListForm.focus): Nová metoda.
	(ListForm.defocus): Nová metoda.
	(ListForm._TITLE_BACKGROUND_COLOR): Nový atribut.
	(ListForm.__init__): Nastav barvu záhlaví.

	* lib/form/form.py (Form._focused_form): Nový atribut.
	(Form.focus): Nová metoda.
	(Form.defocus): Nová metoda.
	(focused_form): Nová funkce.

2002-01-04  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (BrowseDualForm._create_main_form): Vyselektuj
	první øádek.
	(BrowseDualForm.__init__): Nová metoda.

2002-01-03  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_insert): Je-li tabulka
	uspoøádaná, doplò do øádku poøadové èíslo i kdy¾ `after'
	i `before' je None.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands): Nový
	atribut `_pdbb_command_insert_newpos'.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Pøevádìj ids ordering sloupcù na databázové názvy.
	(DBDataPostgreSQL.insert): Loguj takté¾ `after' a `before'.
	(DBDataPostgreSQL.insert): Opraven test na nalezení souseda.

	* lib/form/list.py (List._on_line_commit): Doplnìna podpora pro
	uspoøádané seznamy.
	(List._ListTable.row): Správnì urèi èíslo øádku, nachází-li se za
	editovaným øádkem.
	(List._on_delete_line): Opraven test na poslední øádek tabulky pøi
	volbì nové buòky.

2002-01-02  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List.select_row): Ulo¾ pozici do `_position'.
	(List.refresh): Nový parametr `filterflag'.
	(List.__init__): Nový atribut `_filterflag'.
	(List._create_grid): Indikaci filtru zapínej dle `_filterflag', ne
	dle podmínky.
	(List._on_filter): Pøedávej `refresh' parametr `filterflag'.
	(List._recreate_grid): Pøed voláním `_select_cell' testuj `row' na
	None, ne pouze nepravdu.
	(List._recreate_grid): `_select_cell' volej s `invoke_callback'
	TRUE.
	(List._sf_dialog): Vynechej poèítané sloupce.

	* lib/util/util.py (compare_objects): Souvisí s __cmp__, ne
	__call__ (oprava docstringu).

	* lib/data/data.py (Data._Operator.__cmp__): Nová metoda.

	* lib/form/form.py (BrowseDualForm._create_side_form): `splitter'
	-> `self._splitter'.
	(DualForm.__init__): Nejprve vytváøej main form, teprve pak side
	form.
	(DualForm.__init__): Odstranìn nadbyteèný argument z volání
	`_create_main_form'.

	* lib/data/types_.py (Value.__init__): Je-li typem `String', pøímo
	nastav `_exported' na `value'.

	* lib/util/log.py (log): Vyhazuj debugovací hlá¹ky.

	* lib/data/dbdata.py
	(DBDataPostgreSQL._pg_create_make_row_template): Nová metoda.
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Optimalizováno.
	(DBDataPostgreSQL.__init__): Nový atribut `_pg_make_row_template'.
	(DBDataPostgreSQL.__init__): Do seznamu argumentù v docstringu
	doplnìno `ordering'.

2001-12-31  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/search.py (FilterDialog._create_buttons): "Filtruj" ->
	"Filtrovat", "Nefiltrovat" -> "Zru¹it filtr".
	(Dialog._create_buttons): "Zru¹it" -> "Zavøít".

	* lib/form/list.py (_scrollbar_width): Nová pomocná funkce.
	(CodeBook.__init__): Vyu¾ívej ji.
	(List.SetSize): Pøenastav ¹íøky sloupcù.
	(List._recreate_grid): Volej SetSize.
	(List._on_filter): Nenastavuj barvu záhlaví.
	(List._create_grid): Pøi zapnutém filtru nastav barvu záhlaví.

	* lib/util/log.py (Logger.log): Do docstringu doplnìno, ¾e
	argument `data' není nutno klíèovat.
	(Logger._formatted_data): Strings pou¾ij pøímo, nepøevádìj je pøes
	`repr'.

	* lib/form/application.py (Application.on_load_form): Loguj
	odchycenou neoèekávanou výjimku.

2001-12-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._on_filter): Pøi zapnutí filtru zmìn
	barvu záhlaví.
	(List._FILTER_COLOR): Nová konstanta.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql.relop):
	Pøidána podpora pro `ignore_case'.

	* lib/data/data.py (EQ, NE, WM, NW, LT, LE, GT, GE): Nový argument
	`ignore_case'.
	(Data._Operator.__init__): Nový argument `kwargs' a atribut
	`_kwargs'.
	(Data._Operator.kwargs): Nová metoda.

	* lib/form/search.py (Dialog._create_widget.condition): Nový
	atribut `_primary_column_selector'.
	(Dialog.run): Nastavuj v primárním selectoru implicitní sloupec.
	(Dialog.run): Nový atribut `_colnum'.
	(Dialog._on_suck): Není-li vybrán ¾ádný sloupec, pou¾ij `_colnum'.
	(FilterDialog._create_buttons): Nové tlaèítko pro zru¹ení filtru.
	(FilterDialog._on_reset_filter): Nová metoda.

2001-12-29  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (Data.search): Upøesnìn pojem "aktuální øádek".
	(Data.rewind): Nová metoda.
	(MemData.rewind): Nová metoda.

	* lib/data/dbdata.py (DBDataPostgreSQL._PgBuffer.current):
	Opravena faktická chyba v docstringu.
	(DBDataPostgreSQL.search): O¹etøen pøípad, kdy je aktuální øádek
	mimo buffer, av¹ak ne mimo data.
	(DBDataPostgreSQL.lock_row): V logovacím volání nepøedpokládej, ¾e
	`key' je tuple.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands): Nový
	atribut `_pdbb_command_search_last'.
	(PostgreSQLStandardBindingHandler._pg_search): Pøi zpìtném hledání
	pou¾ívej `_pdbb_command_search_last'.
	(DBDataPostgreSQL._pg_value): Øádnì zpracovávej datum a èas.
	(DBDataPostgreSQL.rewind): Nová metoda.

	* lib/form/search.py (Dialog.close): Nová metoda.
	(Dialog.__init__): Zru¹en argument `row'.
	(Dialog.run, SearchDialog.run, FilterDialog.run): Nový argument
	`current_row'.
	(Dialog.run, SearchDialog.run, FilterDialog.run): Zru¹en argument
	`kwargs'.
	(Dialog.run, SearchDialog.run, FilterDialog.run): Nový argument
	`col'.

	* lib/form/list.py (List.select_row): Pøi neúspìchu hledání nastav
	na 0 `position', ne `result'.
	(List.Close): Nová metoda.
	(ListForm.Close): Volej Close na `_list'.
	(List._on_search): Pøi nenalezení záznamu zobraz, nejen vytvoø,
	dialog.
	(List._ListTable.rewind): Nová metoda.
	(List._on_search): Po vyhledání proveï rewind na tabulku.
	(List._on_search): Místo `_select_row' volej `_select_cell'.
	(List._on_search): Pøi zpìtném hledání se posouvej zpìt.
	(List._sf_dialog): Nepøedávej dialogu aktuální øádek.
	(List._on_search, List._on_filter): Pøedávej dialogu aktuální
	øádek a èíslo sloupce.
	(List._create_grid, List._on_search, List.select_row.find):
	Vyu¾ívej metodu lib.data.Data.rewind.

2001-12-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql): Doplnìn
	chybìjící argument ve volání `string.replace'.
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql): Nepokou¹ej
	se modifikovat øetìzec, nejde to.
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql): Opraveno
	chybné pøevádìní hvìzdièek a otazníkù pro LIKE.

	* lib/data/data.py (WM): Operátor je 'WM', ne 'EQ'.

	* lib/util/log.py (Logger._formatted_data): Na tuples aplikuj
	`str' na jednotlivé prvky.

	* lib/form/form.py (BrowseDualForm.Show, BrowseDualForm.OnSize)
	(BrowseDualForm.Close): Pøesunuto do DualForm.
	(DualForm._create_main_form): Nová metoda.
	(DualForm._create_side_form): Nová metoda.
	(BrowseDualForm.__init__): Zru¹eno, kód pøesunut do
	DualForm.__init__ a metod `_create_main_form' a
	`_create_side_form'.
	(BrowseDualForm._create_main_form.callback): Nová metoda.
	(BrowseDualForm._create_side_form): Nová metoda.
	(EditDualForm.__init__): Zru¹eno.
	(EditDualForm._create_side_form): Nová metoda.
	(EditDualForm._create_main_form): Nová metoda.

	* lib/form/search.py (FilterDialog.run): Nová metoda.
	(FilterDialog._on_filter): Nastav atribut `_perform'.
	(Dialog._create_buttons): Vracej buttonky.
	(Dialog._on_suck, Dialog._selected_condition): GetSelectionString
	-> GetStringSelection.
	(Dialog._create_widget): Úpravy `and_' -- zduplikováno `&',
	vlo¾eno do sizeru a jiné neúspì¹né pokusy o vycentrování &.
	(Dialog._on_suck): Opraveno chybné jméno pomocné promìnné.
	(Dialog._LABEL): Nový atribut.
	(Dialog._create_widget): Vyu¾ívej ho.
	(SearchDialog._LABEL, FilterDialog._LABEL): Nový atribut.
	(SearchDialog.run, FilterDialog.run): Doplnìno logování.

	* lib/form/list.py: Importuj modul `resolver' standardnì.
	(List._on_key_down): Pøidány klávesy LIST_FILTER a LIST_SEARCH.
	(List._on_search): Nová metoda.
	(List._on_filter): Nová metoda.
	(List.__init__): Nové atributy `_search_dialog' a
	`_filter_dialog'.
	(List._sf_dialog): Nová metoda.
	(List._on_search, List._on_filter): Doplnìno logování.

2001-12-27  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/search.py: Nový modul.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql): Pøidána
	podpora pro operátor WM.

	* lib/data/data.py (NE): Nová operátorová funkce.
	(WM, NW): Nové operátorové funkce.

2001-12-26  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._on_edit): Zamykej editovaný záznam.
	(List._on_line_rollback, List._on_line_commit): Odemykej záznam.

	* lib/data/dbdata.py (DBDataPostgreSQL.lock_row): Odstranìn
	nadbyteèný backslash v hlá¹ce.
	(DBDataPostgreSQL.lock_row): Pøed zápisem klíèe do logu na jeho
	polo¾ky aplikuj `str'.

	* lib/form/form.py (EditForm.run): Nová metoda, zaji¹»uje
	zamykání.
	(EditForm._lock): Zru¹en argument `key'.
	(EditForm._lock): Jestli¾e klíè je None, neprovádìj zamykání a
	rovnou vra» TRUE.
	(EditForm._lock): Kvalifikuj Message jménem modulu.

2001-12-25  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/dialog.py (db_operation): Vyu¾ívej metodu
	DBConnection.modified.

	* banka.py (_USAGE): Mírnì upraveno.  Doplnìna nová volba
	--dbuser.
	(_process_options): Nová volba --dbuser.

	* lib/form/application.py (Application.on_load_form): Odchytávej
	v¹echny výjimky a na jejich výskyt reaguj chybovou hlá¹kou.

	* lib/form/form.py (Form.__init__): Pøi databázové chybì nenechej
	konstrukci instance nedokonèenou, nahoï výjimku.

	* lib/data/_test.py (DBDataOrdering.check_insert): Opravy chyb a
	rùzná vylep¹ení.
	(DBConnection.check_modified): Nový test.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Zru¹en atribut `_pdbb_command_insert_eshift'.
	(PostgreSQLStandardBindingHandler._pg_insert): Pou¾ívej pro after
	i before `_pdbb_command_insert_shift'.
	(PostgreSQLStandardBindingHandler._pg_insert): Opravy chyb
	souvisejících s after/before.
	(DBDataPostgreSQL.insert): Pokud je definováno ordering, které je
	souèástí klíèe, neprovádìj kontrolu na duplicitu vkládaného øádku.
	(DBDataPyPgSQL._PgNotifier.__init__): Nech» `_data_objects' je
	instance WeakKeyDictionary.
	(DBDataPyPgSQL._PgNotifier._register): Hlá¹ka výjimky obalena
	gettextem.
	(DBConnection.modified): Nová metoda.

2001-12-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (Row.check_append): Nový test.
	(DBDataOrdering): Nová sada testù.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_insert): Dopsána podpora pro
	øádkové uspoøádání.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands): Nové
	atributy `_pdbb_command_insert_shift' a
	`_pdbb_command_insert_eshift'.
	(PostgreSQLStandardBindingHandler._pg_insert)
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Atribut `_pddb_command_get_last' pøejmenován na
	`_pdbb_command_get_last'.
	(DBDataPostgreSQL.update): Aplikuj na `key' `xtuple'.
	(DBDataPostgreSQL.update): Pøidána podpora pro uspoøádané tabulky.

	* lib/data/data.py (Data.__init__): Aplikuj na `key' a `ordering'
	`xtuple'.
	(Row.append): Nová metoda.
	(Data.update): Drobné upøesnìní v docstringu.

2001-12-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (String._validate): Do hlá¹ky o dlouhém
	øetìzci pøidány i patøièné údaje.

2001-12-21  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (TextField._create_text_control): Pro
	víceøádková vstupní políèka volej o¹etøuj `wx.EVT_KEY_DOWN' pomocí
	metody `self._on_key_down_multiline()'.
	(TextField._on_key_down_multiline): Nová metoda.
	(TextField._on_key_down_multiline): Pøidán komentáø.

2001-12-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List.select_row.find): Po skipu resetuj
	aktuální øádek tabulky.

	* lib/data/_test.py: Updatovány importy pro novou verzi Pythonu.
	(String.check_validation_limited): `maxwidth' -> `maxlen'.
	(Date.check_validation, DateTime.check_validation): Odstranìn
	import DateTime.
	(DBDataFetchBuffer._check_skip_fetch): Pøi oèekávaném øádku
	doplnìn test na to, ¾e øádek není None.
	(DBDataReuse.check_it): Nápodobnì.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec.gettype):
	Jestli¾e velikost textového políèka je v PostgreSQL záporná, nech»
	je zde neomezená.
	(DBDataPyPgSQL._pg_query): Zmìnìna chybová hlá¹ka na výsti¾nìj¹í.
	(DBDataPyPgSQL._pg_query): Do v¹ech výjimek vyvolaných voláním
	`query' pøidán jako argument provádìný SQL dotaz.
	(DBDataPostgreSQL.skip): Zru¹ena minulá zmìna.
	(DBDataPostgreSQL.fill): Pøepracováno.

2001-12-20  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL._PgBuffer.skip): Resetuj
	buffer, i kdy¾ `pointer' je rovno `buflen'+1.
	(DBDataPostgreSQL._PgBuffer.__str__): Sjednoceny výpisy bufferu.
	(DBDataPostgreSQL._PgBuffer.__str__): O¹etøuj i pøípady, kdy
	`pointer' ukazuje mimo buffer.
	(DBDataPostgreSQL._PgBuffer.skip): Resetuj buffer pøi jakémkoliv
	jeho minutí.

	* lib/form/list.py (List._select_cell): Jestli¾e se èíslo sloupce
	bere ze starého sloupce, nech» je toto èíslo nezáporné.
	(List.refresh): Implicitní hodnota argumentu `when' je nyní
	závislá na hodnotì argumentu `reset'.
	(List._ListTable._get_row): Nepøedpokládej automaticky, ¾e první
	stahovaný øádek je øádek èíslo 0.

2001-12-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._on_key_down.evil_key): Místo
	`hasModifiers' testuj pøes `AltDown' a `ControlDown' (kvùli
	NumLocku).

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_search): Zohledòuj
	vzestupnost/sestupnost setøídìní jednotlivých sloupcù.

2001-12-19  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py: `from resolver import ResolverSpecError'
	(BrowseForm._on_edit_form): Oprava docstringu.
	(BrowseForm._on_edit_form): Zkus zjistit alternativní jméno
	specifikace pro editaèní formuláø (funkce `edit_form_name' z
	vlastní specifikace).

	* lib/form/form.py (EditForm.navigate): Nová metoda.
	(EditForm._on_key_down): Vyu¾ívej ji.

	* lib/form/inputfield.py (TextField._create_text_control): Event
	navazuj na control, ne na rodièe.
	(Invocable._on_key_down): Kosmetické úpravy.
	(Invocable._create_widget): Event navazuj na button, ne na rodièe.
	(DateField._on_invoke_selection): Jako rodièe pro dialog nastav
	svého dìdeèka (self._parent.parent()) - odpadne tím problém se
	ztrátou fokusu. Zru¹en hack o¹etøující ztrátu focusu.
	(DateField._on_parent_focus): Metoda zru¹ena.
	(InputField._skip_navigation): Nová metoda.
	(Invocable._create_widget): O¹etøuj `wx.EVT_NAVIGATION_KEY'
	metodou `_skip_navigation()'.
	(CodeBookField._create_widget): O¹etøuj `wx.EVT_NAVIGATION_KEY'
	metodou `_skip_navigation()'.

	* lib/form/resolver.py (ResolverFileError): Nová tøída.
	(ResolverSpecError): Nová tøída.
	(Resolver._load_module): Vyu¾ívej tøídu `ResolverFileError'.
	(Resolver.get): Vyu¾ívej tøídu `ResolverSpecError'.

2001-12-18  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List.find): Opìt od nalezené pozice odeèítej
	jednièku.

	* lib/data/types_.py: Updatovány importy pro novu instalaci
	Pythonu.

	* lib/data/dbdata.py: Updatovány importy pro novu instalaci
	Pythonu.
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql.relop):
	Pøi operátoru nerovnosti obal v¹e `coalesce'.
	(PostgreSQLStandardBindingHandler._pdbb_coalesce): Nová metoda.
	(PostgreSQLStandardBindingHandler.item2sql) 
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql.relop) 
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Vyu¾ívej ji.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_search.sorting_condition):
	Opravena zmateèná práce s ids.

2001-12-17  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (_TextValidator.__init__): `max_length'
	zmìnìno na `maxlen'...
	(_TextValidator._on_char): `_max_length' zmìnìno na `_maxlen'...
	(TextField._create_widget): `_max_length' zmìnìno na `_maxlen'...
	(TextField._max_length): Metoda pøejmenována na `_maxlen'
	(TextField._create_text_control): Argument `max' pøejmenován na
	`maxlen' a uèinìn volitelným.
	(TextField._create_widget): Volitelný argument `maxlen' uvádìj
	vèetnì identifikátoru.
	(StringField._maxlen): Metoda pøejmenována na `_maxlen'.
	(MultiTextField._width, MultiTextField._filter): Zru¹en argument
	`i' a návratová hodnota zmìnìna na tuple.
	(MultiTextField._max_length): Metoda zru¹ena.
	(CodeBookField._maxlen): Nová metoda implementovaná pomocí metody
	`maxlen()' datového typu `Codebook'.
	(CodeBookField._on_invoke_selection): Na vytvoøený formuláø
	`CodeBook' volej refresh() s nastavením pozice na souèasnou
	hodnotu.
	(MultiTextField._width): Pokud specifikace není sekvence, vytvoø
	sekvenci identických hodnot.
	(MultiTextField._filter): Pokud specifikace není sekvence, vytvoø
	sekvenci identických hodnot.

2001-12-17  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/inputfield.py (StringField._max_length): `maxwidth' ->
	`maxlen'.

	* lib/data/_test.py (String): `maxwidth' -> `maxlen'.

	* lib/data/types_.py (String._validate): Jestli¾e `maxwidth' je
	None, neprovádìj kontrolu délky.
	(Codebook.maxlen): Nová metoda.
	(String): V¹echna `maxwidth' pøejmenována na `maxlen'.
	(Codebook.__init__): Nový atribut `_maxlen'.

	* lib/data/dbdata.py
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Pøi chybì validace
	DBUserException pøedávej hlá¹ku validaèní výjimky, ne výjimku
	samotnou.
	(PostgreSQLStandardBindingHandler.gettype): `maxwidth' ->
	`maxlen'.

2001-12-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataDefaultClass.__init__) 
	(DBDataPyPgSQL.__init__, DBDataPostgreSQL.__init__) 
	(DBData.__init__): Nový argument `ordering'.
	(DBDataPostgreSQL.insert): Nové argumenty `after' a `before'.
	(DBDataPostgreSQL._pg_insert) 
	(PostgreSQLStandardBindingHandler._pg_insert): Nápodobnì.

	* lib/data/data.py (Data.__init__): Nový argument `ordering'.
	(Data.insert): Nové argumenty `after' a `before'.
	(Data.update): Specifikováno chování u øazených datových objektù.

2001-12-15  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._current_row): Nová metoda.
	(List._current_key, List._on_edit, List._on_insert_line) 
	(List._on_delete_line): Vyu¾ívej ji.
	(List._recreate_grid): `_select_row' volej bez vyvolání
	callbacku.  Nevolej je, pokud seznam obsahuje vlo¾ený øádek.
	(List._on_insert_line): Nastav hodnoty boolean sloupce nového
	øádku na FALSE.
	(List.select_row): Nesni¾uj èíslo nalezeného øádku o 1.

2001-12-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/log.py (Logger._prefix): Buï opatrnìj¹í ohlednì
	mno¾ství zanoøených framù.

	* lib/form/form.py (Form.__init__): Databázové operace obaleny
	protekèním kódem.

	* lib/form/application.py (Application.on_load_form): Nech»
	odchycení neznámého menu id je aplikováno pouze na pøíslu¹ný kód.

	* lib/form/list.py (List._on_line_commit): Opraveny hlá¹ky
	o neúspìchu updatu.
	(List._ListTable.EditInfo.__init__): Nový argument a atribut
	`orig_content'.
	(List._ListTable.editing): Pøedávej EditInfo nový argument.
	(List._on_line_commit): Pùvodní klíè ber z pùvodního, ne nového,
	obsahu øádku.
	(List._select_cell, List._on_line_commit): Nastavuj `_position'.
	(List.select_row.find): Opraveno vyta¾ení klíèových sloupcù.
	(List.select_row): Doplnìn chybìjící argument rodièe do volání
	_DBOP.
	(List.find): Výsledek musí být o 1 men¹í, nebo» search vrací
	hodnoty od 1 vý¹e.
	(List._recreate_grid): Kromì volání `select_row' pøemísti
	i kurzor.
	(List.select_row): Vracej èíslo vysvíceného øádku.

	* lib/data/data.py (Data.update): Docstring udìlán poøádnì.

2001-12-13  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Codebook._export): Pøed voláním
	`self._data.row' pøeveï `value' na instance Value.

	* lib/form/list.py (List.select_row): Implementováno vyhledávání
	dle klíèe.
	(List._current_key): Nová metoda.
	(List._on_activation): Vyu¾ívej ji.

	* lib/data/_test.py
	(DBDataDefaultClass.check_select_fetch_direction): Odstranìna
	blokace testu.
	(Codebook): Opraveno vícero zmatkù.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_select): Nový atribut
	`_pdbb_select_rows'.
	(DBDataPostgreSQL.fetchone): Pøedávej metodì _PgBuffer.fetch
	atribut `_pdbb_select_rows'.
	(DBDataPostgreSQL._PgBuffer.fetch): Nový argument `number_of_rows'.
	Updatuj `_pointer', pokud dojde k pøekroèení hranic dat.

2001-12-13  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (_filter_func): Je¹tì malá oprava chyb v
	definici mno¾in znakù.
	(_pp_func): Funkce zru¹ena (nahrazena metodou
	`TextField._post_process_func()').
	(_filter_func): Funkce zru¹ena (nahrazena metodou
	`TextField._filter_func()').
	(InputField.__init__): Neukládej `self._post_process_func' - tady
	to nemá co dìlat...
	(TextField.NUMBERS, TextField.ASCII, TextField.LETTERS): Nové
	konstanty.
	(TextField._post_process_func): Nová metoda.
	(TextField._filter_func): Nová metoda.
	(TextField._create_widget): Vyu¾ívej `TextField._filter_func()'.
	(MultiTextField._filter): Vyu¾ívej `TextField._filter_func()'.
	(TextField._post_process): Vyu¾ívej `TextField._post_process_func()'.

	* lib/form/inputfield.py (_filter_func): Oprava definice mno¾iny
	`ascii' a `letters'.
	(MultiTextField._filter): Oprava chyby (volej `_filter_func()').

	* lib/form/inputfield.py (_filter2wx): Funkce zru¹ena.
	(_filter_func): Nová metoda.
	(_TextValidator.__init__): Nová tøída.
	(_wx_size): Metoda zru¹ena.
	(TextField._create_text_control): Nová metoda.
	(TextField._create_widget): Vyu¾ívej `self._create_text_control()'
	(TextField._max_length): Nová metoda.
	(TextField._set_validator): Nová metoda.
	(TextField._on_text): Zmìna dokumentace (zmìna zpùsobu pou¾ití).
	(TextField._on_text): Volej metodu `_on_text_hook_()'.
	(TextField._on_text_hook): Nová metoda.
	(StringField): Nová tøída.
	(resolve): Rozeznávej `StringField'.
	(MultiTextField._create_widget): Vyu¾ívej
	`TextField._create_text_control()'
	(MultiTextField._number_of_controls): Nová metoda.
	(MultiTextField._width): Nová metoda.
	(MultiTextField._filter): Nová metoda.
	(MultiTextField._max_length): Nová metoda.
	(CodeBookField._on_text): Metoda zru¹ena.
	(CodeBookField._number_of_controls): Nová metoda.
	(CodeBookField._max_length): Nová metoda.
	(CodeBookField._on_text_hook): Nová metoda.

	* lib/form/spec.py (TextFilter.INCLUDE_LIST): Nová Konstanta.
	(TextFilter.EXCLUDE_LIST): Nová Konstanta.
	(FieldSpec.__init__): Nový argument `filter_list'.
	(FieldSpec.filter_list): Nová metoda.

	* lib/form/form.py (EditForm._on_key_down): Na klávesu Enter
	reaguj vyvoláním navigaèní události (`wx.wxNavigationKeyEvent').

2001-12-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/spec.py (ColumnSpecFromField.__init__): Pøidána podpora
	pro `codebook'.
	(ColumnSpec.__init__): Nový parametr `codebook'.
	(ColumnSpec.codebook): Nová metoda.

	* lib/form/list.py (List._edit_cell): Je-li editovaným políèkem
	èíselník, místo standardní editace vyvolej èíselníkové okno.
	(List._on_cell_commit): Nech» argument `event' je nepovinný.

	* lib/data/_test.py (Codebook.setUp): Nová metoda.
	(Codebook.check_special_export): Nový test.

	* lib/data/types_.py (Codebook.__init__): Nový atribut
	`_data_changed'.
	(Codebook._update_enumeration): Zohledòuj tento atribut.
	(Codebook.on_data_change): Registruj callback na zmìnu dat.
	(Codebook.is_valid, Codebook._export): Volej `update_enumeration'.
	(Codebook.Mode.ONCE): K updatu dochází i pøi zmìnì dat.
	(Codebook._export): Pakli¾e `value' neodpovídá ¾ádné vnitøní
	hodnotì, vra» None.
	(Codebook._update_enumeration): Zru¹eno `_row_cache'.
	(Codebook._export): Pøepsáno.
	(Codebook._export): Do docstringu pøidáno upzornìní na mo¾nost
	zmìny vnitøních hodnot.

2001-12-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Codebook._export): col_id -> column;
	vylep¹en docstring.

	* lib/form/list.py (List.SetValue): Odstranìn zapomenutý print.

	* lib/data/data.py (OR): Pøedávej argumenty `AND' správnì.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler.sorting_condition): Opravy chyb.
	(PostgreSQLStandardBindingHandler.relop): Nech» `None' je validní
	podpodmínka AND.
	(PostgreSQLStandardBindingHandler.relop): Kontroluj, ¾e ký¾ený
	sloupec existuje.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	V `_pdbb_command_search_first' selectuj i oid.
	(PostgreSQLStandardBindingHandler.relop): Opravy chyb v nových
	operátorech.

	* lib/data/_test.py (DBMultiData.check_search): Nový test.

2001-12-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (ReversedSorting): Nová sada testù.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql): Pøidána
	podpora operátorù LT a NOT.
	(PostgreSQLStandardBindingHandler._pg_search): Nová metoda.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands): Nové
	atributy `__pdbb_command_search_first' a
	`_pdbb_command_search_distance'.
	(DBDataPostgreSQL.search): Do `_pg_search' pøedávej celý øádek,
	nikoliv pouze klíè.
	(DBDataPostgreSQL._pg_search): `key' -> `row'.
	(DBDataPostgreSQL.update): Jestli¾e `key' není sekvence, pøeveï je
	na tuple.

	* lib/data/data.py (Data.search): V docstringu upøesnìno, ¾e
	vyhledávání se provádí pouze mezi øádky selectu.
	(OR, NOT, LT, GT, LE, GE): Nové operátorové funkce.
	(reversed_sorting): Nová funkce.
	(AND): Argumentem mù¾e být libovolný operátor.

	* lib/data/types_.py (Codebook._export): Odstranìn zapomenutý
	print.
	(Codebook.value_columns): Opraven docstring.

2001-12-10  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (List._create_grid): Pokud je label ¹ir¹í ne¾
	¹íøka ze specifikace, nastav ¹íøku sloupce na ¹íøku labelu.

2001-12-07  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (_filter2wx): Nová funkce.
	(_pp_func): Nová funkce. 
	(InputField.__init__): Zapamatuj si funkci odpovídající
	specifikace `post_process'.
	(TextField._on_text): Volej `self._post_process()'.
	(TextField._post_process): Nová metoda.
	(MultiTextField._create_widget): Pro jednoduchou vazbu datového
	sloupce pouze vracej výsledek metody pøedka.
	(CodeBookField._create_widget): Zmen¹eno odsazení displeje.
	(CodeBookField._on_text): Volej `self._post_process()'.

	* lib/form/spec.py (PostProcess): Nová tøída.
	(FieldSpec.__init__): Update dokumentace k 'post_process', update
	assertu.

2001-12-06  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (FieldSpec.__init__): Pøidán assert na
	`selection_type'.
	(FieldSpec.__init__): Nový argument `filter'.
	(FieldSpec.__init__): Nový argument `post_process'.
	(dir_const): Nová funkce.
	(TextFilter): Nová tøída.
	(FieldSpec.post_process): Nová metoda.
	(FieldSpec.filter): Nová metoda.
	(GroupSpec.__init__): vyu¾ívej novou funkci `dir_const()'

	* lib/form/inputfield.py (resolve): Úprava chybové hlá¹ky.

	* lib/form/form.py (EditForm._create_group): Zru¹en zapomenutý print.
	(EditForm._create_group): Pokud má skupina orámování, pøidej je¹tì
	sizer s horním odsazením.

2001-12-05  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (GroupSpec.__init__): Nový argument `border_style'.
	(BorderStyle): Nová tøída.
	(GroupSpec.border_style): Nová metoda.

	* lib/form/form.py (_border_style2wx): Nová funkce.
	(EditForm._create_group): Vyu¾ívej `border_style' ze specifikace.

	* lib/form/inputfield.py (CodeBookField._create_widget): ©íøku ze
	specifikace displeje pøevádìj na pixely.

	* lib/data/types_.py (Codebook._export): Oprava pøeklepu...
	(Codebook._export): Pro indexaci `self._row_cache' pou¾ívej
	exportovanou (u¾ivatelskou) hodnotu.

	* lib/form/inputfield.py (MultiTextField._set_value): Pokud poèet
	prvkù `values' neodpovídá poètu políèek, pøebývající hodnoty
	ignoruj a chybìjící doplò prázdnými øetìzci.
	(CodeBookField): Doplnìna dokumentace k displeji.
	(CodeBookField._create_widget): Pokud není specifikován displej,
	nevytváøej ho. ©íøku displeje ber ze specifikace. Ulo¾ název
	sloupeèku pro displej ze specifikace (`self._display_column').
	(CodeBookField._on_text): Implementuj update displeje za pomoci
	nové mo¾nosti metody 'Codebook.export()'.
	(CodeBookField._on_invoke_selection): Ze specifikace èíselníku ber
	pouze slice prvních dvou hodnot.

	* lib/form/spec.py (FieldSpec.__init__): Doplnìna dokumentace ke
	specifikaci displeje.

	* lib/form/form.py (EditForm._on_parent_close): Nerad to
	pøiznávám, ale sleep jsem musel zvìt¹it na 500ms, jinak to
	nechodilo s novou verzí wxPython. U¾ by se s tím mìlo nìco
	udìlat...

	* lib/form/inputfield.py (TextField._create_widget): Pøi
	`EVT_TEXT' volej metodu `_on_text()'.
	(MultiTextField._create_widget): Pøi `EVT_TEXT' volej metodu
	`_on_text()'.
	(TextField._on_text): Nová metoda.
	(CodeBookField._create_widget): Implemenuj vlastní metodu, která k
	widgetu pøidá políèko `display' pro zobrazeni popisu hodnoty z
	èíselníku.
	(InputField.__init__): Volej `self._add_validation_callback()'.
	(InputField._add_validation_callback): Nová metoda.
	(InputField._on_validation): Nová metoda.

	* lib/form/spec.py (FieldSpec.__init__): Doplnìna dokumentace ke
	specifikaci èíselníku.

2001-12-04  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EditForm._on_key_down): O¹etøení klávesy
	`key.EDIT_FORM_COMMIT' voláním `self._on_ok()'.
	(EditForm._create_buttons): Tlaèítko `Ok' nenastavuj jako default.
	Namísto `Cancel' pou¾ívej nápis `Zavøít'.

	* lib/form/inputfield.py (InputField._height): Vracej skuteènì jen
	poèet znakù, ne po¾adovanou velikost políèka.
	(InputField._wx_size): K vý¹ce (poètu znakù) pøièti 0.5 a teprve
	potom pøeveï na pixely.
	(TextField._create_widget): Pokud je `self._height()' více ne¾
	jeden znak, vytvoø políèko s pøíznakem `wx.wxTE_MULTILINE'.
	(TextField._set_value): Pou¾ívej `wxTextCtrl.SetValue()' (pøíznak
	modifikace nevyu¾íváme).
	(Invocable._create_widget): Udávej vý¹ku pøi volání
	`self._create_button()'
	(Invocable._create_button): Vý¹ku neurèuj sám, ale pøebírej z
	nového argumentu `height'.

2001-12-03  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/list.py (CodeBook.__init__): Akceptuj i string jako
	argument `returned_columns' namísto jednoprvkové sekvence (a
	pøeveï jej na tuple).

	* lib/form/inputfield.py (ListBoxField._create_widget): Nová tøída.
	(resolve): Rozeznávej `ListBoxField'.

	* lib/form/spec.py (ColumnSpec.__init__, FieldSpec.__init__) 
	(ViewSpec.__init__): Dokumentace nepovinného uvádìní
	identifikátorù nìkterých klíèových atributù.
	(ColumnSpecFromField): Nová tøída.
	(ViewSpec.__init__): Nech» argument 'columns' mù¾e obsahovat i
	instance `FieldSpec', které budou pøevedeny na `ColumnSpecFromField'.
	(SelectionType.LIST_BOX): Nová Konstanta.
	

2001-11-29  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (FilteredBrowseForm.filter): Pøedávej refreshi
	`computer_data'.
	(List.refresh): Nový `reset' argument `computer_data'.
	(List.__init__): Nový atribut `_computer_data'.
	(List._create_grid): Poèítej poèítaèe.
	(List._ListTable.__init__, List._on_insert_line): `computer()' ->
	`computer'.
	(ListForm.__init__): Ukládej box do atributu.
	(ListForm.SetSize): Nastavuj rozmìry boxu.
	(List.__init__): Atribut `_columns' pøejmenován na
	`_orig_columns'.
	(List._create_grid): Vytváøej atribut `_columns', skryté sloupce
	pøesuò na konec.
	(List._ListTable.__init__): Neprovádìj pøesun skrytých sloupcù.
	(List._ListTable.__init__): Nech» `_column_count' obsahuje pouze
	poèet viditelných sloupcù.
	(List._on_line_commit): V pøípadì neúspìchu pro ji¾ existující
	klíè neprovádìj refresh.
	(List._on_line_commit): Editovaný øádek odnastavuj pouze v pøípadì
	úspìchu databázové operace.

	* lib/form/spec.py (ColumnSpec.__init__): Zmìnìn význam argumentu
	`computer', je-li jím funkce.
	(ColumnSpec.__init__): Doplnìn assert na argument `computer'.
	(ColumnSpec.__init__): Atribut `_computer' pøejmenován na
	`computer'.
	(ColumnSpec.computer): Zru¹eno.

2001-11-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/spec.py: Opraveno odsazování, drobné úpravy
	v docstrings.
	(Computer): Nová tøída.
	(ColumnSpec.__init__): Upravena dokumentace argumentu `computer'.

	* lib/form/list.py (List._ListTable._Computer): Zru¹eno.
	(List._ListTable.__init__, List._ListTable.GetValue)
	(List._create_grid, List._on_insert_line): Updatovány vìci ohlednì
	specifikace poèítaných sloupcù.

	* lib/form/form.py (Form._on_leave_window): self._parent.Close se
	pokou¹ej volat pouze pro instance PopupForm, proto¾e jinak takový
	pokus vede k uzavøení hlavního framu, tj. ukonèení aplikace.

	* lib/data/dbdata.py (DBException.__init__): Loguj podrobnosti
	výjimky také jako OPERATIONAL.

	* lib/form/list.py (List._create_grid): Nech» rodièem gridu je
	List sám.
	(ListForm.__init__): Nech» titulek je instance wxStaticText.
	(ListForm.__init__): Provedena magie s nastavováním velikostí, aby
	byl vidìt titulek i seznam.
	(List._on_cell_rollback, ListForm.OnSize): Od vý¹ky seznamu odeèti
	vý¹ku titulku.
	(ListForm.SetSize): Nová metoda.
	(List.__init__): Nový atribut `_size'.
	(List.SetSize): Ulo¾ velikost.
	(List._create_grid): Velikost gridu nastavuj dle hodnoty
	v `_size', ne velikosti rodièe.
	(List._on_cell_commit): Pøidán chybìjící argument `event' do
	volání `_on_insert_line'.
	(List._on_line_commit): Opìt ru¹ editaci øádku i pro nový øádek.
	(List._ListTable.edit_row): Zru¹en assert na ru¹ení editace nového
	øádku.
	(List._on_key_down): Pøi nezpracovávané klávese volej fallback
	metodu zadanou v konstruktoru.
	(List.__init__): Nový argument `key_handler'.
	(ListForm.__init__): Pøedávej konstruktoru List argument
	`key_handler'.

2001-11-28  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (Invocable._create_widget): Pøidej
	tlaèítku o¹etøení událostí kláves pomocí `self._on_key_down()'.

	* lib/form/list.py (CodeBook): Tøídu `ListForm' uvádìj v seznamu
	pøedkù jako první.

	* lib/form/form.py (PopupForm): Nebuï potomkem `wx.wxDialog'.

2001-11-27  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (BrowseDualForm.__init__): Je¹tì jedno
	`noselect->select_row' ve volání BrowseForm.
	(BrowseDualForm.__init__): Updatován zpùsob zadávání callbacku do
	BrowseForm.
	(EditForm._signal_update, BrowseDualForm.__init__): `reshuffle' ->
	`refresh'.
	(BrowseDualForm.__init__.callback): Volej `filter', ne `set_row'.

	* lib/form/list.py (List._create_grid): Je-li zadán vlo¾ený øádek,
	zvy¹ poèet øádkù o 1.
	(List._create_grid): Poèet øádkù získávej pouze ze selectu, nikdy
	z pøedchozího gridu.
	(List._on_line_commit): Neodnastavuj editaci øádku v tabulce,
	jedná-li se o nový øádek.
	(ListForm.Show): Pøi zapnutí zobrazení volej `refresh'.
	(List._on_key_down.evil_key): Nech» je zlou klávesou i Enter.
	(List._ListTable.GetValue): Opraveny pøeklepy ve volání
	konstruktoru Value.
	(List._on_insert_line): Nový argument `event'.

2001-11-27  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py (EditForm._on_ok): Neukládej, pokud nebyla data
	zmìnìna.
	(EditForm._edit_update): Pokud jsou data ulo¾ena, volej
	'set_unmodified()' pro ka¾dé políèko.
	(changed): Úprava dokumentace.

	* lib/form/inputfield.py (InputField.set_unmodified): Nová metoda.
	(InputField.is_modified): Doplnìna dokumentace.

2001-11-26  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL.update): Pøevádìj `key' na
	tuple.
	(PostgreSQLStandardBindingHandler._pdbb_row_main_value): Vracej
	tuple, ne list.

	* lib/form/list.py (List._create_grid): Nech» poèítané sloupce
	jsou needitovatelné.
	(List._create_grid, List._ListTable.__init__): Pøidána podpora pro
	speciální význam nulové ¹íøky sloupce.
	(List._on_insert_line): Pøi vytváøení nového øádku spoèítej
	poèítané datové sloupce.
	(List._ListTable._EditedRow.__init__): Odkazuj se na pøedka pøes
	__bases__, pøes `super' to nefunguje.
	(List._on_key_down): Opraveny pøeklepy ve jménech kláves.
	(List._ListTable.GetValue): Øádkovou korekci provádìj pouze, pokud
	je editovaný øádek nový.
	(List._on_line_commit): Editovaný øádek nevytahuj z editaèních
	informací, nýbr¾ pøes `row()'.
	(List._on_line_commit): Opraveno vyta¾ení klíèe.
	(List._switch_sorting): Testuj na neukonèenou editaci.
	(List.refresh): Opravena invertovaná hodnota `delay'.
	(List._ListTable.edit_row): Zkopíruj øádek pøed jeho ulo¾ením do
	editaèní struktury.
	(List._finish_editing): Odchod povolen, pokud øádek nebyl zmìnìn,
	ne naopak.
	(List._on_line_rollback): Neodnastavuj editaci øádku v tabulce,
	jedná-li se o nový øádek.
	(List._ListTable.editing): Opraveno nastavení `changed' pro nový
	øádek.
	(List.__init__): Do `new' ukládej originální podobu nového øádku.

	* lib/form/spec.py (ColumnSpec.__init__): Znaènì roz¹íøen význam
	argument `column'.
	(ColumnSpec.__init__): Roz¹íøení významu argumentu `width'
	o speciální hodnotu 0.

2001-11-25  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/util.py: Zru¹eny importy nepou¾itých modulù.

	* lib/data/_test.py (Row.check_columns): Nový test.

	* lib/data/data.py (Row.columns): Nová metoda.
	(Row.__setslice__): Vyu¾ívej `__setitem__' místo pøímého
	pøiøazování do datového objektu.

	* lib/form/screen.py (WxEscapeHandler.handle): LEAVE_WINDOW ->
	GLOBAL_LEAVE_WINDOW.

	* lib/form/form.py (Form._on_key_down): LEAVE_WINDOW ->
	GLOBAL_LEAVE_WINDOW.
	(Form._on_leave_window): Zakomentován nadbyteèný øádek.
	(BrowseDualForm.__init__): Update pro zmìny modulu `list'.
	(EditForm._on_parent_close): `reshuffle' -> `refresh'.

	* lib/form/list.py (List._on_label_left, List._on_label_right):
	Neprovádìj pøetøídìní, volej `_switch_sorting'.
	(List._switch_sorting): Nová metoda.
	(List.__init__): Atributy `_*sort' pøejmenovány na `_*sorting'.
	(List.refresh): Parametr `sort' pøejmenován na `sorting'.
	(List._on_select_cell): Updatováno volání refreshe, pøidáno
	logování.
	(List._on_key_down): Pøepracováno.
	(BrowseForm._on_key_down): Staro(nová) metoda.
	(List._ListTable.row): V docstringu upøesnìny vrácené sloupce.
	(List._current_cell): Nová metoda.
	(List._ListTable.editing): Nová metoda.
	(List.__init__): Zohlednìna zmìna jména aktivaèní klávesy v 'key'.
	(List.exit_check): Updatováno vzhledem k ostatním úpravám, pøidán
	docstring.
	(List.SetFocus): Update volání refreshe.
	(List._select_cell): Updatováno.
	(List._on_edit): Nová metoda.
	(List.row_key): Zru¹eno.
	(List._row_data): Zru¹eno.
	(List.total_width): Do docstringu doplnìna jednotka délky.
	(List.edit_cell): Pøejmenováno na `_edit_cell', updatováno.
	(List._on_insert_line): Nová metoda.
	(List._finish_editing): Updatováno.
	(List._ListTable.EditInfo): Nová pomocná tøída.
	(List._on_delete_line): Nová metoda.
	(List._on_cell_commit): Pøejmenováno na `_on_cell_rollback'.
	(List.refresh): Pro zji¹tìní rozeditovanosti øádku pou¾ívej
	`editing'.
	(List._on_line_rollback): Pøepracováno.
	(List._on_line_commit): Pøepracováno.
	(List._on_cell_commit): Updatováno.
	(List._run_callback): Nová metoda.
	(ListForm.__init__): _List -> List.
	(ListForm.__init__): Volej konstruktor List s argumentem
	`select_row'.
	(List._create_grid): Pøejmenovány atributy `inserted_*' podobnì
	jako v List._ListTable.
	(ListForm._on_size): Pøejmenováno zpìt na OnSize.

2001-11-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (Row.__init__): Nepøevádìj prvky dat na lists.
	(Row.__setitem__): Zajisti, ¾e zmìna dat se neprojeví v mìlce
	zkopírovaných instancích.

	* lib/form/list.py (List._ListTable): Sepsáno nìkolik
	implementaèních poznámek.
	(List._ListTable._CurrentRow): Nová pomocná tøída.
	(List._ListTable._EditedRow): Nová pomocná tøída.
	(List._ListTable._Computer): Nová pomocná tøída.
	(List._ListTable._Column): Nová pomocná tøída.
	(List): Pøidána komentáø o pojmenovávání nìkterých promìnných.
	(List._ListTable.GetValue): Pøepsáno.
	(List._ListTable.SetValue): Pøepsáno.
	(List._ListTable._set_row): Pøejmenováno na `_get_row'.
	(List._ListTable._retrieve_row): Pøepsáno.
	(List._ListTable.row_key): Zru¹eno.
	(List._ListTable.newly_edited_row): Zru¹eno.
	(List._ListTable.row): Nová metoda.
	(List._ListTable.GetNumberRows): Ztrivializováno.
	(List._ListTable.__init__): Pøepsáno.
	(List.__init__): Volej konstruktor pøedka.
	(List._ListTable.__init__): Argumenty `inserted_line' a
	`inserted_line_values' pøejmenovány na `inserted_row_number' a
	`inserted_row'.
	(List._ListTable.GetColLabelValue, List._ListTable.GetTypeName):
	Updatováno pro novou podobu sloupcových informací.

2001-11-23  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/spec.py (ViewSpec.__init__): Nový argument `title'.
	(ViewSpec.title): Nová metoda.

	* lib/util/_test.py: Opraveno umístìní #!.
	(Some): Nová sada testù.

	* lib/util/util.py (some): Nová funkce.

	* lib/form/list.py (ListForm.__getattr__): Nová metoda.  Nyní
	explicitnì neobalujeme ¾ádné metody list, v¹echny jeho veøejné
	ne-wx metody jsou obaleny automaticky.
	(ListForm.reshuffle): Zru¹eno.
	(ListForm.__init__): Zru¹eny argumenty `*_callback'.
	(ListForm.columns): Pøejmenováno na `_columns'.
	(ListForm.__init__): Zru¹en argumenty `goto' a `noselect', zaveden
	nový argument `select_row'.
	(ListForm): Vylep¹en docstring.
	(ListForm.OnSize): Pøejmenováno na `_on_size'.
	(CodeBook.columns): Pøejmenováno na `_columns'.
	(BrowseForm.__init__): Zru¹eny argumenty `*_callback'.
	(BrowseForm.__init__): Zru¹en argument `noselect', zaveden nový
	argument `select_row'; argument `frame_stack' je nyní nepovinný.
	Argumenty jsou nyní zcela shodné s argumenty pøedka.
	(BrowseForm.set_modification_callback): Zru¹eno.
	(FilteredBrowseForm.__init__): Argument `frame_stack' je nyní
	nepovinný a je a¾ za argumentem `condition'.  Argument `noselect'
	zru¹en a zaveden nový argument `select_row'.
	(FilteredBrowseForm.set_row): Pøejmenováno na `filter'.
	(FilteredBrowseForm.__init__): Volej `filter'.
	(FilteredBrowseForm.filter): Argument `data' je nyní nepovinný.
	(FilteredBrowseForm.filter): Pracuj správnì pro statické podmínky.
	(_List): Pøejmenováno na `List'.
	(BrowseForm._on_insert_line, BrowseForm._on_edit_line)
	(BrowseForm._on_delete_line): Zru¹eno.
	(BrowseForm._on_key_down): Zru¹eno.
	(BrowseForm.on_edit_form): Pøejmenováno na `_on_edit_form'.
	(FilteredBrowseForm.filter): Místo `reshuffle' volej `refresh'.
	(List.CALL_SELECTION, List.CALL_ACTIVATION)
	(List.CALL_MODIFICATION): Nové konstanty.
	(List.set_selection_callback, List.set_activation_callback)
	(List.set_modification_callback): Zru¹eno.
	(List.set_callback): Nová metoda.
	(CodeBook.__init__): Nastavuj listu speciální klávesu pro výbìr
	z èíselníku.
	(List.reset, List.reshuffle, List.maybe_refresh): Zru¹eno.
	(List.refresh): Nyní pøepracovaná sjednocená metoda zahrnující
	v¹echny druhy refreshù.
	(List.DOIT_IMMEDIATELY, List.DOIT_AFTEREDIT, List.DOIT_IFNEEDED):
	Nové konstanty.
	(List.goto): Zru¹eno.
	(List.select_row): Nová metoda.
	(List.__init__): Zru¹en argument `noselet', nový argument
	`select_row'.
	(List): Zru¹en atribut `_in_paint'.
	(List.__init__): Zru¹ena inicializace atributù inicializovaných
	v `_create_grid'.
	(List._create_grid): Zru¹en atribut `_colindex'.
	(ListForm.__init__): Pøidej do formuláøe záhlaví, je-li to ¾ádáno.
	(List._ListTable.disable): Pøejmenováno na `close'.
	(List._ListTable._set_row): Doplnìn docstring.
	(List._ListTable): Doplnìn komentáø ke tøídì.

2001-11-22  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Opraveno volání konstruktoru DBException s chybnými argumenty.
	(PostgreSQLStandardBindingHandler._pdbb_row_main_value):
	Nápodobnì.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec): Do
	podporovaných typù pøidán typ `oid'.

	* lib/form/list.py (_List._ListTable.SetValue): Nenastavuj
	aktuální øádek, je-li novì editovaný.
	(_List._ListTable.newly_edited_row): Nápodobnì.
	(_List.set_modification_callback): Nová metoda.
	(_List.set_selection_callback, _List.set_activation_callback):
	Upøesnìní v docstringu.
	(_List.__init__): Nový atribut `_modification_callback'.
	(BrowseForm.__init__): Nový argument `modification_callback'.
	(_List._on_line_commit): Volej modification_callback.
	(ListForm.reshuffle): Aktualizace je nyní nepodmínìná (pouze zmìna
	docstringu).
	(ListForm.reshuffle): Volej metodu listu `refresh', ne
	`reshuffle'.
	(BrowseForm.set_modification_callback): Nová metoda.
	(_NumberCellEditor, _FloatCellEditor): Buï potomkem
	grid.wxGridCellTextEditor.

	* lib/form/form.py (BrowseDualForm.Show): Volej Show podformuláøù.
	(BrowseDualForm.callback): Nastavuj vedlej¹ímu formuláøi
	modifikaèní callback pro aktualizaci hlavního seznamu.

	* lib/form/application.py (Application.on_exit): Pøed ukonèením
	vyprázdni zásobník.

	* lib/form/screen.py (FrameStack.count): Zru¹eno.
	(FrameStack.empty): Nová metoda.

2001-11-22  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/form.py: Úpravy dokumentace.
	(EditForm._pack_fields): Namísto `field.control()' volej
	`field.widget()'.
	(EditForm.changed): Zcela nová implementace zalo¾ená na
	`InputField.is_modified()'.
	(EditForm.OnSetFocus): Vyu¾ívej `InputField.set_focus()'.

	* lib/form/inputfield.py (InputField.control): Metoda pøejmenována
	na `widget()'.
	(InputField._create_control): Metoda pøejmenována na
	`_create_widget()'. Stejnì tak ve v¹ech odvozených tøídách.
	(InputField.__init__): Inicializuj atribut `self._initial_value'.
	(InputField.is_modified): Nová metoda.
	(InputField.set_value): Metoda nyní implementuje nìkteré spoleèné
	akce a není ji¾ tedy urèena k pøedefinování v odvozených
	tøídách. K pøedefinování je urèena nová metoda `_set_value()'.
	(InputField._set_value): Nová metoda. Ve v¹ech odvozených tøídách
	byla metoda `set_value()' pøejmenována na `_set_value()'.

2001-11-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_List._row_data): Jestli¾e sloupec není
	v datech, pøeskoè ho.
	(_List._ListTable.newly_edited_row): Pøi editaci nového øádku
	nepøebírej data z jiného øádku tabulky.

2001-11-20  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/inputfield.py (InputField.__init__): Event handler
	navazuj v¾dy - i pokud je políèko needitovatelné. Inicializuj
	promìnnou `self._enabled'.
	(InputField._disable): Nová metoda
	(InputField.disable): Nastav pouze pøíznak `self._editable' a
	volej `self._disable()'.
	(GenericField._disable): Pøejmenovaná metoda `disable()'.
	(Invocable._create_control): Oprava chybky (návratová hodnota,
	pokud je políèko needitovatelné). Testuj radìji `self._enabled', ne¾
	`self.spec().editable()'.
	(Invocable._on_key_down): Callback `_on_invoke_selection' volej
	pouze pokud je `self._enabled'.

	* lib/form/inputfield.py (module): Rozsáhlé zmìny v hierarchii
	tøíd.  Není mo¾no komentovat v¹echny detaily, omezím se na popis
	jednotlivých tøíd.
	(InputField): Je nyní pouze "abstraktní" tøídou, která
	neimplementuje metody související s pou¾itím konkrétních vstupních
	prvkù, pouze definuje jejich význam.
	(GenericField): Nová tøída. Implementuje nìkteré metody spoleèné
	pro tøídy vyu¾ívající jednoduché vstupní prvku wx windows.
	(Unlabeled): Implementuje metodu `_create_label()' vracející
	prázdný label.
	(TextField): Nová tøída. Implementuje kompletní vstupní políèko s
	textovým ovládacím prvkem.
	(MultiTextField): Nová tøída. Implementuje textové vstupní políèko
	pro datové sloupce s vícenásobnou vazbou.
	(CheckBoxField): Bývalá tøída `BooleanInputField'.
	(1EnumerationField): Nìkteré metody pøesunuty do `GenericField'.
	(ChoiceField): Bývalá tøída `ChoiceInputField'.
	(RadioBoxField): Bývalá tøída `RadioBoxInputField'.
	(Invocable): Nová tøída implementující spoleèné vlastnosti pro
	políèka s mo¾ností výbìru.
	(DateField): Nová tøída. Políèko s mo¾ností výbìru data z
	kalendáøe.
	(CodeBookField): Políèko s mo¾ností výbìru data z èíselníku. Z
	bývalé tøídy `CodeBookInputField' zde zbyla pouze metoda
	`_on_selection()', která se teï ale chová jinak (zmìna zpùsobu
	pøedávání hodnot mezi políèkem a formuláøem (viz.
	`list.CodeBook.run()'). V¹e ostatní bylo pøesunuto do nadtøíd, aby
	to mohlo být sdíleno s jinými typy políèek.
	(resolve): Implicitní typ políèka nech» je 'TextField'. Pøidán typ
	'Date'.

	* lib/form/list.py (CodeBook.__init__): Namísto argumentu `fields'
	pou¾ívej `returned_columns'. Související zmìny dokumentace.
	(CodeBook._on_activation): Hodnoty sloupcù z `returned_columns'
	ulo¾ do `self._returned_values'. Úplnì opu¹tìna my¹lenka pøímého
	nastavování hodnot políèek.
	(CodeBook.run): Vlastní implementace podìdìné metody: Vracej
	`self._returned_values' (v pøípadì opu¹tìní bez výbìru je None).

	* lib/form/dialog.py (Calendar.__init__): Pøidej
	`wx.wxDIALOG_MODAL' do stylu dialogu. Namísto "Cancel" pou¾ij
	nápis "Zru¹it". Formátovací úpravy.
	(Calendar._on_activation): Pøejmenováno na `_on_ok'.

	* lib/form/dialog.py (Calendar.run): Explicitnì zniè dialog.

2001-11-20  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (Row.items): Nová metoda.

	* lib/form/list.py (_List._create_grid, _List._ListTable.__init__)
	(_List._ListTable._retrieve_row): Pøidána podpora pro poèítané
	sloupce.
	(_List._col_index): Zru¹eno.
	(_List.edit_cell): O¹etøuj needitovatelná políèka.
	(_List._ListTable._retrieve_row.fetch): Nová pomocná funkce.
	(_List._ListTable.newly_edited_row, _List._ListTable.SetValue):
	Pøidána podpora pro poèítané sloupce.

	* lib/form/spec.py (ColumnSpec.__init__): Nový argument
	`computer'.
	(ColumnSpec.computer): Nová metoda.

2001-11-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (Form._on_leave_window): Nevolej event.Skip(),
	je-li `event' None.

	* lib/form/list.py (_List._create_grid): Volej `_on_leave_window'
	se správným poètem argumentù.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Obaluj tøídící sloupce SQL funkcí `coalesce'.
	(PostgreSQLStandardBindingHandler._pdbb_sort2sql.item2sql):
	Nápodobnì.

2001-11-18  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL.select) 
	(DBDataPostgreSQL.fetchone, DBDataPostgreSQL.skip): Pøi havárii DB
	operace nastav `_pg_is_in_select' na FALSE.
	(DBDataPostgreSQL.search): Nová metoda.
	(DBDataPostgreSQL._pg_search): Nová metoda.
	(DBDataPostgreSQL._PgBuffer.current): Nová metoda.

	* banka.py (run_application): Pro jistotu explicitnì zapni garbage
	collection.

	* lib/data/data.py (Data.search): Zmìnìna návratová hodnota a
	neposouvá se ukazovátko (pouze zmìna docstringu).

2001-11-17  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (Data.search): Nová metoda.
	(Data.skip): Upøesnìno, ¾e metodu lze pou¾ít jenom bìhem selectu.

	* lib/form/form.py (EditForm.__init__): Akceptuj frame stack.
	(EditForm._signal_update): Nová metoda.
	(EditForm._edit_insert, EditForm._edit_update) 
	(EditForm._edit_delete): Volej ji.

	* lib/form/screen.py (FrameStack.push): `window' smí být
	i None (pouze zmìna docstringu).

	* lib/form/list.py (_List._on_paint): Zru¹eno.
	(_List.refresh): Nastavuj èasy zmìn.
	(_List._on_line_rollback, _List._on_line_commit): Je-li `_changed'
	pravda, volej `refresh'.
	(_List.refresh): Resetuj atribut `_changed'.
	(_List._on_select_cell): Pøidán test na po¾adavek pøenaètení dat.
	(_List.maybe_refresh): Nová metoda.
	(_List.SetFocus, _List._on_select_cell): Volej ji.
	(ListForm.Show): Pøi pozitivním po¾adavku volej _list.SetFocus.
	(BrowseForm.on_edit_form): Pøedávej EditForm frame stack.

	* lib/data/_test.py (Row.check_update): Nový test -- pøesunut test
	`update' z `check_nonempty'.

2001-11-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (TutorialTest.check_it): Zajisti uspání
	datových objektù i pøi chybì.
	(TutorialTest.check_it): Update pro novou podobu èíselníkù.
	(TutorialTest.setUp): Typ klíèe èíselníku zmìnìn na VARCHAR, nebo»
	èíselníky smí být pouze stringové.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_send_notifications): Volej
	`_pg_query' mimo transakci.
	(DBDataPostgreSQL.unlock_row): Nápodobnì.
	(PostgreSQLStandardBindingHandler._pdbb_table_row_lists):
	Zohledni, ¾e `value' mù¾e být sekvence nezávisle na `column'.
	(DBDataPostgreSQL._pg_value): V enumerations zohledòuj prázdné
	hodnoty v sekvencích.
	(DBDataPostgreSQL._pypg_new_connection): Nastav spojení
	serializable transaction level.

	* lib/data/types_.py (Type.export): Kosmetické úpravy.

	* lib/form/list.py (_List.SetFocus): Nová metoda.

	* lib/form/form.py (BrowseDualForm.callback): Nech» callback
	hlavního formuláøe nastavuje na konci na tento formuláø focus.

2001-11-16  Tomas Cerha  <cerha@brailcom.org>

	* lib/form/spec.py (FieldSpec.__init__): Nedoplòuj defaultní ¹íøku
	a vý¹ku zde.
	(FieldSpec.width): umo¾ni specifikovat defaultní ¹íøku.
	(FieldSpec.height): umo¾ni specifikovat defaultní vý¹ku.

	* lib/form/dialog.py (Dialog.run): Doplnìn dokumentaèní øetìzec.
	(Calendar): Nová tøída.

2001-11-15  Tomas Cerha  <cerha@brailcom.org>

	* lib/data/_test.py (Row.check_nonempty): Pøidán test na
	`Row.update()'.

	* lib/form/spec.py (ViewSpec.columns): Oprava chybky.

	* lib/form/inputfield.py (InputField.validate): Pokud dojde k
	chybì, zobraz dialog s popisem chyby.
	(InputField.validation_error): Metoda zru¹ena.
	(EnumerationInputField._values): Zru¹eny zapomenuté appendy...
	(EnumerationInputField.get_value): Úprava docstringu.
	(EnumerationInputField.set_value): Zru¹en kód pro vyhledání
	u¾ivatelské hodnoty podle vnitøní. Pøijímej tuple.
	(EnumerationInputField.get_value): Vracej tuple.
	(EnumerationInputField.set_value): Úprava docstringu.

	* lib/form/form.py (_validate): O¹etøení chyby validace (zobrazení
	dialogu s popisem chyby) pøenech na `InputField.validate()'.
	(EditForm.changed): Upøesnìna logovací hlá¹ka.

	* lib/data/types_.py (Type.export): Mapování None na prázdý
	øetìzec provádìj i pro sekvence.
	(Enumeration._export): Upøesnìna chybová hlá¹ka.
	(Value.export): Nevydávej `self.value()' za exportovanou hodnotu,
	ale skuteènì proveï `export()'. Neprovádìj mapování None na prázdý
	øetìzec pro sekvence - to teï dìlá `Type.export()'.

2001-11-15  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBColumnBinding.__init__): Není-li
	`enumerator' sekvence ani None, pøeveï jej na tuple.

2001-11-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBColumnBinding.__init__): Pøetr¾ena vazba
	mezi `enumerator' a `related_to' (dokumentaèní zmìna).
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Opraveno zpracování
	sekvenèního typu.
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Upraveno pro novou
	podobu types_.Codebook.
	(DBDataPostgreSQL._pg_value): Nápodobnì.

	* lib/data/types_.py (Codebook): Výraznì pøepracováno, zmìnìna
	definice vnitøních a u¾ivatelských hodnot.
	(Boolean.__init__): Nech» je specifikace tuple, ne list.

2001-11-13  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/_test.py (Dialog.check_interactive_choice): Nový test.

	* lib/form/dialog.py (Choice): Nová tøída.
	
	* lib/form/list.py (_List._create_grid): Volej na nový grid
	`SetFocus'.
	(_List.exit_check): Nová metoda.
	(ListForm.Show): Nová metoda.

2001-11-13  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/inputfield.py (resolve): Rozeznávej RadioBoxInputField
	a ChoiceInputField.
	(InputField._create_control): Doplnìna dokumentace. Nestarej se o
	spec.enable().
	(InputField.__init__): Pokud není spec.enable(), volej self.disable()
	(InputField.enable): Nová metoda.
	(InputField.disable): Nová metoda.
	(InputField.get_value): Doplnìna dokumentace. Vylep¹en assert.
	(InputField.set_value): Doplnìna dokumentace. Vylep¹en assert.
	(BooleanInputField._create_control): Nestarej se o spec.enable().
	(EnumetrationInputField): Nová tøída.
	(RadioBoxInputField._create_control): Nová tøída.
	(ChoiceInputField.set_value): Metoda pøesunuta do spoleèné
	nadtøídy `EnumerationInputField'.
	(ChoiceInputField.get_value): Metoda pøesunuta do spoleèné
	nadtøídy `EnumerationInputField'.
	(CodeBookInputField.enable): Nová metoda.
	(CodeBookInputField.disable): Nová metoda.
	(CodeBookInputField._create_control): Nestarej se o spec.enable(). 

	* lib/form/spec.py (SelectionType): Nová tøída.
	(FieldSpec.__init__): Zru¹en argument `selection'. Nové atributy
	`selection_type' a `orientation'.
	(selection): Metoda zru¹ena.
	(FieldSpec.orientation): Nová metoda.
	(FieldSpec.selection_type): Nová metoda.

	* lib/form/inputfield.py (ChoiceInputField): Nová tøída.
	(resolve): Vyu¾ívej `ChoiceInputField'.
	(InputField.__init__): Nepamatuj si odkaz na datový objekt.
	(InputField.set_value): Loguj DEBUG hlá¹ku.
	(BooleanInputField.set_value): Loguj DEBUG hlá¹ku.
	(CodeBookInputField.set_value): Loguj DEBUG hlá¹ku.

	* lib/form/form.py (EditForm.set_row): Úprava logovacích
	hlá¹ek. O¹etøení chyb pøi nastavování políèek pøenech na metodì
	`InputField.set_value()'.


2001-11-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_List._ListTable._get_value): Vracej výsledný
	øádek.
	(_List._ListTable.get_key): Pøejmenováno na `row_key'.
	(_List.row_key): Zohlednìna pøedchozí zmìna.
	(_List._ListTable._get_value): Zru¹en argument `col'.
	(_List._ListTable.GetValu): Zohlednìna pøedchozí zmìna.
	(_List._ListTable.row_key): Zohlednìny zmìny `_get_value'.
	(_List._ListTable.newly_edited_row): Updatuj aktuální sloupec, ne¾
	ho pou¾ije¹.
	(_List._ListTable.SetValue): Nápodobnì.
	(_List._ListTable._get_value): Pøejmenováno na `_retrieve_row'.
	(_List._ListTable._set_row): Nová metoda.

2001-11-12  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/spec.py (FieldSpec.codebook): Update dokumentace.
	(FieldSpec.selection): Nová metoda.
	(FieldSpec.__init__): Nový argument `selection'.

	* lib/form/list.py (BrowseForm.on_edit_form): Oprava pøeklepu.

2001-11-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py: Na mnoha místech doplnìno logování.

	* lib/data/_test.py (Type.check_validation) 
	(Boolean.check_validation, String.check_validation_unlimited):
	Update pro novou práci s prázdnými hodnotami.
	(_TypeCheck._test_null_validation): Nová metoda.

	* lib/data/types_.py (Type.validate): Pøi zásahu do cachované
	hodnoty jiného typu nevracej None.

	* lib/data/dbdata.py (DBDataPyPgSQL.__init__)
	(DBDataPyPgSQL._pypg_allocate_connection)
	(DBDataPyPgSQL._pypg_deallocate_connection)
	(DBDataPyPgSQL._pypg_get_connection): `_pypg_connection' je nyní
	zásobník.
	(DBDataPyPgSQL._pypg_return_connection): Vracej spojení
	nepodmínìnì.
	(DBDataPostgreSQL._pg_begin_transaction): Neukonèuj transakci.
	(DBDataPostgreSQL._pg_commit_transaction)
	(DBDataPostgreSQL._pg_rollback_transaction): Neresetuj
	`_pg_is_in_select'.
	(DBDataPostgreSQL.close): Resetuj `_pg_is_in_select'.
	(DBDataPostgreSQL.select): Volej `close'.
	(DBDataPostgreSQL.insert): Není-li øádek vlo¾en, neloguj, ¾e
	vlo¾en byl.
	(DBDataPostgreSQL.update): Nápodobnì.
	(DBDataPyPgSQL._pypg_allocate_connection): Volej
	`_pypg_get_connection' s argumentem `outside_transaction' TRUE.
	(DBDataPyPgSQL._pypg_deallocate_connection): Vracej spojení
	nepodmínìnì.
	(DBDataPyPgSQL._pypg_get_connection): Zdroj spojení urèuj výhradnì
	dle argumentu `outside_transaction'.
	(DBDataPyPgSQL._pg_query): Spojení vracej jen pokud je
	`outside_transaction' pravda.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec.gettype):
	Volej `_pg_query' s pravdivým argumentem `outside_transaction'

2001-11-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/_test.py: Dal¹í pokyny pro testování inline editace.

	* lib/form/list.py (_List.value_conversion): Odstranìn zapomenutý
	print.
	(_List._ListTable.GetValue.value_conversion): Pøidána podpora pro
	rozeditované nezvalidované hodnoty.
	(_List._ListTable.SetValue): Nezvalidovanou hodnotu ulo¾ do
	`validation_error'.
	(_List.edit_cell): Resetuj `validation_error' v tabulce.
	(_List._on_key_down): Nech» tabulátor natvrdo vyvolá
	`_on_cell_commit'.
	(_List._on_line_commit): Opraveno zpracování návratových hodnot
	databázové operace.

	* lib/data/types_.py (Codebook.values): Pou¾ívej `super'.

2001-11-09  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Neo¹etøuj NULL.

	* lib/data/types_.py (String._EMPTY_MAPS_TO_NONE): Zru¹eno.
	(Type.validate): Zmìnìn zpùsob práce s prázdnými hodnotami;
	pøepracováno.
	(Type._validate): Vracej hodnotu obsahující None, ne pouhé None.
	(Type._export): Nová metoda.
	(Type.export): Pozmìnìno chování pro prázdné hodnoty, pøesmìrování
	na `_export', nové argumenty `args' a `kwargs'.
	(Float.__init__): V chybì assertu uvádìj i chybný argument.
	(Float._validate): Nápodobnì.
	(Float._validate): Doplnìn assert na argument `precision'.
	(Float.export, String.export, DateTime.export, Date.export)
	(Enumeration.export, Codebook.export, Sequence.export):
	Pøejmenováno na `_export'.
	(Value.export): Do apply pøedávej tuple, ne list.
	(Value.export): Neo¹etøuj None.
	(Enumeration.__init__): V docstringu upøesnìn význam prázdných
	stringù coby nedefinovaných hodnot.

	* lib/form/list.py (_List._on_line_commit): Klíè vytahuj pouze pøi
	updatu, ne pøi insertu.
	(_List._finish_editing): Správnì o¹etøuj situaci, kdy je
	rozeditován øádek beze zmìn hodnot.
	(_List._on_line_rollback): Vynu» pøekreslení vráceného editovaného
	øádku.
	(_List.__init__): Inicializuj atribut `validation_error'.
	(_List._recreate_grid): Nová metoda.
	(_List._on_line_rollback, _List.insert_line, _List.refresh):
	Vyu¾ívej ji.
	(_List._ListTable.GetValue): Není-li nastaven datový objekt, vra»
	prázdný øetìzec.
	(_List._ListTable.disable): Nová metoda.
	(_List._recreate_grid): Volej ji.
	(_List._init_select): Zakázáno pøepou¾ití dat z minulého selectu.
	(_List._ListTable.SetValue): Nepou¾ívej _current_row pro nové
	øádky.

2001-11-08  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/_test.py: Do pokynù testování inline editace doplnìna
	kontrola poètu øádkù.

	* lib/form/list.py (_List._select_row): Pøejmenováno na
	`_select_cell' a pøepracováno.
	(_List._on_select_cell): Èást funkcionality pøesunuta do
	`_select_cell'.
	(_List._select_cell): Zajisti viditelnost zvoleného øádku.
	(_List._on_line_rollback, _List._finish_editing)
	(_List.insert_line): `_select_row' -> `_select_cell'.
	(_List._finish_editing): Nevolej `_select_cell', je to nadbyteèné.
	(_List._select_cell): Nastav gridu focus.

2001-11-08  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/spec.py (ViewSpec.columns): Pokud není definován
	èíselník daného jména, vra» seznam v¹ech sloupcù a loguj o tom
	DEBUG informaci.
	(ViewSpec.__init__): V¹echny parametry nech» jsou nepovinné.
	(ViewSpec.layout): Vyvolej výjimku, pokud v konstruktoru nebyl
	specifikován layout.
	(ViewSpec.columns): Vyvolej výjimku, pokud v konstruktoru nebyly
	specifikovány sloupce.

2001-11-07  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/application.py (Application.OnInit): Poèáteèní
	velikost okna nastavena na 800x500 px.

	* lib/data/types_.py (Value.export): Pokud je value sequence,
	nahraï None za prázdný øetìzec i v této sekvenci.
	(Codebook.extract): Namísto `Type.export()' volej
	`Value.export()', která¾to navíc umí zacházet s None hodnotami.

	* lib/form/form.py (EditForm._pack_fields): Oprava docstringu.
	(EditForm.changed): Namísto `f.data_column().id()' volej rovnou
	`f.id()'. Pokud je `self._key' None (pøi insertu), vracej v¾dy TRUE.

2001-11-07  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (WxKey._key2wx): Upravuj kódy pro klávesy
	Ctrl-písmeno, aby odpovídaly mapování tìchto kláves na ASCII
	znaky.

	* lib/form/_test.py: Struèný soupis instrukcí pro testování inline
	editace.

	* lib/form/list.py (_List._on_line_commit): Nech» je argument
	`event' nepovinný.
	(_List._on_cell_commit): Jiné chování po editaci posledního
	políèka novì vkládaného øádku.
	(_List.insert_line): Nastavuj nový atribut `_last_inserted_copy'.
	(_List.broken_key): Zmìny v bláhové nadìji na odfiltrování
	nechtìných kláves.
	(_List._create_grid): Definován callback pro click my¹i.

2001-11-06  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBException.__init__): Vypisuj do logu
	výjimky nikoliv z `args', nýbr¾ z `exception'.

	* lib/form/list.py: Odstranìny zapomenuté printy.
	(_List._on_select_cell): Pokud ji¾ v selectu buòky jsme, volej
	originální handler místo pouhého návratu.
	(_List._row_data): Pøi programové chybì kvùli validaci zaznamenej
	i validaèní chybovou hlá¹ku
	(_List._row_data): O¹etøuj pøi validaci Booleans.
	(_List._on_cell_commit): Edituje-li se nový øádek, spus» pro dal¹í
	buòku editaci.
	(_List._on_cell_commit): Pøi chybì validace zùstaò na editaci
	aktuálního políèka.
	(_List.SetValue): Nastavuj nový atribut `validation_error'.

	* lib/data/data.py (Row.update): Vylep¹en docstring.

2001-11-05  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL._PgBuffer.skip): O¹etøuj
	pøekroèení zaèátku hranic dat.
	(DBDataPostgreSQL.skip): Volej _PgBuffer.skip s argumentem poètu
	øádkù.
	(DBDataPostgreSQL._PgBuffer.skip): Nový argument `number_of_rows'.
	(DBException.__init__): Vypisuj do logu výjimku z argumentù,
	i kdy¾ není prvním argumentem.

	* lib/form/list.py (_List._on_line_rollback): Nastav grid cursor.
	(_List._ListTable.__init__): Nový povinný argument `row_count'.
	(_List._create_grid): Nenastavuj poèet øádkù tabulky, pøedávej ho
	jako parametr konstruktoru.
	(_List._kill_editing): Zru¹eno.
	(_List._on_select_cell, _List.reshuffle): Místo `_kill_editing'
	volej `_on_line_rollback'.
	(_List._on_line_rollback): Nech» je argument `event' nepovinný.
	(_List._select_row): Nový argument `invoke_callback'.
	(_List._select_row): Nastavuj pozici gridového kurzoru, je-li
	tøeba.
	(_List._on_select_cell, _List.insert_line)
	(_List._on_line_rollback): Neselectuj øádek samo, pou¾ívej
	`_select_row'.
	(_List._select_row): Nový argument `col'.
	(_List.__init__): Nový atribut `_in_select_cell.
	(_List._select_row, _List._on_select_cell): Pou¾ívej jej.
	(_List._on_select_cell): Opravena selekce øádkù za zru¹eným novým
	øádkem.
	(BrowseForm._on_key_down): Pøi kopírovacím vlo¾ení øádku volej
	`_on_insert_line' s argumentem `copy' TRUE, ne FALSE.
	(_List._ListTable.__init__): Pøevádìj `inserted_line_values' na
	èíselné klíèe.
	(_List._ListTable.GetValue): Opraveno zji¹»ování nezeditovaných
	hodnot editovaných øádkù.
	(_List._finish_editing): Nová metoda.
	(_List.reshuffle, _List._on_select_cell): Vyu¾ívej ji.
	(_List._on_line_commit): Pøidána podpora pro vlo¾ení nového øádku.

2001-11-05  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/form.py (EditForm.__init__): Inicializuj `self._row'.
	(EditForm.set_row): Zapamatuj si získaná data v `self._row'.

	* lib/data/data.py (Row.update): Nová metoda.

	* lib/form/form.py (EditForm._edit_update): Neprovádìj zamykání zde.
	(EditForm._edit_update): Vyu¾ívej `Row.update()'

	* lib/form/list.py (_List.goto): Nová metoda - zatím bez
	implementace
	(ListForm.__init__): Nový klíèový argument `goto'. Vyu¾ívej
	`_List.goto()'.

2001-11-04  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_List._create_grid): Atribut `row_count'
	tabulce nastavuj pouze jsou-li inicializována data.
	(_List._create_grid): Argument `no_data_init' pøejmenován na
	`data_init' a jeho význam invertován.
	(_List.reshuffle): Doplnìn chybìjící argument konstruktoru
	dialog.Question.
	(_List._create_grid): Nové argumenty `inserted_line' a
	`inserted_line_values'.
	(_List.insert_line): Opraveny parametry volání `_create_grid',
	nenastavuj atributy tabulky separátnì.
	(_List._create_grid): V pøípadì potøeby pøevíjej data.
	(_List._ListTable.GetValue): Pøi vytahování hodnoty za vlo¾eným
	øádkem jednièku odeèítej, ne pøièítej.
	(_List.insert_line): Nekopíruj hodnoty do nového øádku pokud
	seznam nemá ¾ádný øádek.
	(_List._ListTable): Atribut `_editing_new' pøejmenován na
	`edited_new'.
	(_List._on_line_rollback): Pokud byl editován nový øádek, zøiï
	nový grid.

2001-11-03  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (BrowseForm._on_insert_line): Nové argumenty
	`after' a `copy'.
	(BrowseForm._on_key_down): Vracej výsledky volání metod, ne
	wx.TRUE.
	(BrowseForm._on_key_down): Rozli¹uj mezi rùznými variantami
	pøidání øádku.
	(BrowseForm._on_insert_line): Dopsáno.
	(_List.insert_line): Dopsáno.
	(_List._ListTable.__init__): Nový argument `inserted_line_values'.
	(_List._ListTable.__init__): Zru¹en argument `condition'; nevolej
	`_init_select'.
	(_List._ListTable._init_select): Pøesunuto do `_List' a upraveno.
	(_List._create_grid): Nový argument `no_data_init'; provádìj
	select nad datovým objektem.
	(_List._on_label_left, _List._on_label_right): Pokud je ji¾ seznam
	¾ádaným zpùsobem setøídìn, zru¹ tøídìní.

2001-11-02  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL._PgBuffer.skip): Buï
	konzervativnìj¹í ohlednì rozsahu okrajových korekcí, aby
	nedocházelo k vynechání posunutí.

	* lib/form/list.py (_List._ListTable.GetValue): Ve virtuálním
	øádku o¹etøuj i dosud nevyplnìné hodnoty.
	(BrowseForm._on_edit_line, BrowseForm._on_delete_line): Pro
	needitovatelný formuláø vracej wx.FALSE.
	(_List._ListTable.new_row): Pøejmenováno na `newly_edited_row'.
	(_List._on_line_commit): Zohledni pøedchozí zmìnu.
	(_List._ListTable.__init__): Nový argument `inserted_line'.
	(_List.insert_line): Nová metoda.
	(_List): Atribut `_list' pøejmenován na `_table'.
	(_List.refresh): Je-li editován nìjaký øádek, tak místo provedení
	refreshe nastav atribut `_changed'.
	(_List._kill_editing): Nová metoda.
	(_List._on_select_cell): Vyu¾ívej ji.
	(_List.reshuffle): Je-li editován nìjaký øádek, ¾ádej od u¾ivatele
	potvrzení akce.

2001-11-01  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_List._ListTable.__init__): Nový atribut
	`_editing_new'.
	(_List._ListTable.GetNumberRows)
	(_List._ListTable.GetValue): Zohledòuj jej.

2001-11-01  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/inputfield.py (CodeBookInputField._on_invoke_codebook):
	Volej rovnou konstruktor formuláøe (ji¾ ne resolver).
	(InputField.__init__, InputField.__init__): Argument `spec'
	pøejmenován na `fspec' (konflikt s názvem modulu). Asserty provádìj na
	relativní jména modulù (bez `lib.').

	* lib/form/form.py (PopupForm._popup_frame): Argument `title' je
	nepovinný a pokud není zadán, automaticky ho doplò podle titulku
	okna `parent'.
	(EditForm.__init__): Titulek okna nastavuj a¾ po volání
	konstruktoru pøedka.

	* lib/form/list.py (BrowseForm.on_edit_form): Pou¾ívej své jméno k
	vyvolání formuláøe. Volej rovnou konstruktor formuláøe (ji¾ ne
	resolver).

	* lib/form/form.py (Form.__init__): Zapamatuj si `name'.

	* lib/form/resolver.py (Module): Totálnì zjednodu¹eno. Vypu¹tìno
	v¹e co souviselo s vytváøením instancí formuláøù a datových
	objektù. Resolver teï poskytuje pouze specifikace (Pomocí jediné
	veøejné metody `get()').

	* lib/form/application.py: Pøidán import `lib.form'.
	(Application.on_load_form): Od resolveru vy¾aduj pouze
	specifikaci. Formuláø vytváøej pomocí `apply()'

	* lib/form/form.py (Form.__init__): Namísto argumentù `view' a
	`data' pøijímej `name' a pøíslu¹né specifikace zjisti pomocí
	resolveru podle tohoto jména. Datový objekt vytvoø pomocí
	`spec.DataSpec.create_data_object()'. Doplnìna dokumentace.
	(Form): Kompletní pøepsání dokumentace.
	(EditForm.__init__): Zmìna argumentù odpovídající nadtøídì.
	(BrowseDualForm.__init__): Zmìna argumentù odpovídající nadtøídì.
	(BrowseDualForm.__init__): Zmìna argumentù odpovídající nadtøídì.
	Rozdìlení specifikací hlavního a vedlej¹ího formuláøe do dvou souborù.
	(EditDualForm.__init__): Zmìna argumentù odpovídající nadtøídì.
	Smazána ve¹kerý kód, proto¾e by musel být stejnì pøepsán...

	* lib/form/list.py (ListForm.__init__): Zmìna argumentù
	odpovídající nadtøídì.
	(CodeBook.__init__): Zmìna argumentù odpovídající nadtøídì.
	(BrowseForm.__init__): Zmìna argumentù odpovídající nadtøídì.
	(FilteredBrowseForm.__init__): Zmìna argumentù odpovídající nadtøídì.

	* lib/form/spec.py (DataSpec.create_data_object): Nová metoda.

	* lib/form/form.py (DualForm.__init__): Vyu¾ívej super().

2001-10-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_List._on_key_down): Pøidány callbacky pro
	klávesy BROWSE_INLINE_COMMIT a BROWSE_INLINE_ROLLBACK.
	(_List._on_line_commit): Nová metoda.
	(_List._on_line_rollback): Nová metoda.
	(_List._on_cell_escape): Opraven chybný název volané metody.
	(_CellEditor): Nová tøída.
	(_BooleanCellEditor, _NumberCellEditor, _FloatCellEditor)
	(_TextCellEditor): Nové tøídy.
	(_List._ListTable._TYPEMAPPING): Pøejmenováno na _TYPE_MAPPING.
	(_List._ListTable._TYPE_EDITOR_MAPPING): Nová konstanta.
	(_List._create_grid): Nastavuj editovatelným sloupeèkùm na¹e
	editory.
	(_List.row_key): Dokonèení nedokonèené vìty v docstringu.
	(_List._ListTable.value_conversion, _List._ListTable.SetValue):
	Nech» jsou zeditované hodnoty uchovávány jako instance Value.
	(_List._ListTable._get_value): Prezentaèní úpravy pøesunuty do
	GetValue.
	(_List._ListTable.new_row): Nová metoda.

2001-10-30  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/form.py (EditForm._on_parent_close): oprava Argumentù
	pro Question.

	* lib/form/screen.py (WxKey.is_event_of_key): Odstranìna (obejita)
	chyba (zvlá¹tnost) s NumLockem.

	* lib/form/form.py (EditForm._edit_update): Zamykej updatovaný øádek.

2001-10-29  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_row_main_value): Chybová
	logovací hlá¹ka pøesunuta pøímo do konstruktoru výjimky.
	(PostgreSQLStandardBindingHandler._pg_select): Nápodobnì.
	(PostgreSQLStandardBindingHandler._pg_delete): Nápodobnì.
	(DBDataPyPgSQL._register): Nápodobnì.
	(PostgreSQLStandardBindingHandler.gettype): Nápodobnì.

	* lib/form/list.py (_List._ListTable.GetValue): Pøi editaci øádku
	vracej zeditované hodnoty.
	(_List._ListTable.SetValue): Dokonèeno.
	(_List.edit_cell): Nastavuj atribut `editing_values' listu.
	(_List._ListTable.__init__, _List._ListTable._get_value): Zru¹eny
	zále¾itosti týkající se reshuffle.
	(_List._ListTable.reset, _List._ListTable.reshuffle): Zru¹eno.
	(_List._ListTable._reshuffle): Pøejmenováno na `_init_select'.
	(_List._ListTable.__init__): Nový kód místo zru¹ených metod.
	(_List._on_key_down): Zji¹»uj stav editace z listu.
	(_List.on_data_change): Pøepracováno.
	(_List._REFRESH_PERIOD): Nová konstanta.
	(_List._on_paint): Zapracovány "obèasné" refreshe.
	(_List._on_paint): Volej `refresh' místo ji¾ neexistující metody
	`_reshuffle'.
	(_List._on_select_cell): Pøidána kontrola na zmìnu editovaného
	øádku.

2001-10-29  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/list.py (BrowseForm): Opraven docstring,
	zru¹eny nepotøebné konstanty EDIT_MODE a VIEW_MODE.
	(_List.SetValue): Opravena chyba (zobrazení chybové hlá¹ky)

2001-10-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_List.row_key): Opraven docstring.
	(_List.row_key): Nech» je argument `row' nepovinný.
	(BrowseForm._on_delete_line): Dokonèeno.
	(_List._create_grid): Editaci zaka¾ pouze pro needitovatelné
	sloupce.
	(_List._create_grid): Pøedìlána práce s atributy.
	(_List.edit_cell): Nová metoda.
	(_List.__init__): Nový atribut `_editing'.
	(_List._on_key_down): Rozli¹uj mezi prohlí¾ením a editací políèka.
	O¹etøuj políèkové editaèní klávesy.
	(_List._on_cell_commit, _List._on_cell_escape): Nové metody.
	(_List._ListTable.SetValue): Kus napsán.

2001-10-27  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (EditForm._edit_delete): Vyu¾ita funkce
	dialog.delete_record.

	* lib/form/dialog.py (delete_record): Nová funkce.

	* lib/form/list.py (_List._ListTable._YES, _List._ListTable._NO):
	Zru¹eno.
	(BrowseForm.mode, BrowseForm.switch_mode): Zru¹eno.
	(BrowseForm.__init__): Místo atributu `_mode' zaveden atribut
	`_inline_editable'.
	(BrowseForm._on_key_down): Pøidány callbacky pro inline pøidání,
	editaci a smazání záznamu.
	(BrowseForm._on_insert_line, BrowseForm._on_delete_line) 
	(BrowseForm._on_edit_line): Nové metody.
	(_List._row_key): Pøejmenováno na `row_key'.
	(_List._on_activation): Zohlednìna pøedchozí zmìna.
	(_List.refresh): Nová metoda.
	(_List.reshuffle): Vyu¾ívej ji.

	* lib/form/inputfield.py (CodeBookInputField.get_value): Vracej
	skuteènì tuple, nikoliv list.

2001-10-26  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (FrameStack._replace_window): Nový argument
	`close'.
	(FrameStack.replace, FrameStack.pop): Volej `_replace_window'
	s argumentem `close' TRUE.

	* lib/form/form.py (BrowseDualForm.Show): Proveï Show pouze pro
	splitter.
	(BrowseDualForm.Close): Nová metoda.

	* lib/form/list.py (_List._create_grid): Opravena chyba
	zarovnávání.  Opraveno nastavování atributù sloupcù.
	Zjednodu¹eno.
	(_List._create_grid): Pøidány callbacky pro kliknutí na label.
	(_List._on_label_left): Nová metoda.
	(_List._on_label_right): Nová metoda.
	(_List.reshuffle, _List._ListTable.reshuffle)
	(_List._ListTable._reshuffle): Nový argument `sort'.
	(_List.reshuffle): Nech» je starý grid odstranìn ze svého rodièe.
	(_List.__init__): Nové atributy `_condition' a `_sort'.
	(_List._create_grid): Zru¹en argument `condition'.
	(_List._ListTable.GetColLabelValue): Upravuj labels setøídìných
	sloupcù.
	(_List._ListTable._get_value): Pro nepravdivé hodnoty booleanu
	vracej prázdný øetìzec.

2001-10-26  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/list.py (_List._create_grid): zakomentovány èásti kódu,
	které patrnì souvisely se starým provedením vícehodnotových
	sloupeèkù...
	(_List._create_grid): zru¹en zapomenutý print.

	* lib/form/form.py (EditForm._create_caption): nastav kódování fontu.

	* lib/form/spec.py (ColumnSpec.__init__): defaultní separátor zmìò
	na dvojteèku.

	* lib/form/list.py (_List._create_grid): nastavuj zarovnání u
	v¹ech sloupeèkù, nastav vlastnosti hlavièky.

2001-10-25  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/form.py (PopupForm.run): zobraz formuláø pomocí ShowModal().
	(EditForm.__init__): nový argument `key'. Pokud byl zadán `key',
	naèti data a naplò svá políèka.
	(EditForm._on_parent_close): ukonèi formuláø pomocí EndModal().
	(EditForm.set_row): pøidány logovací hlá¹ky, namísto
	f.data_column().id() pou¾ívej jen f.id().

	* lib/form/inputfield.py (BooleanInputField.set_value): úprava
	docstringu.
	(CodeBookInputField._create_control): zapamatuj si vtupní políèka
	v seznamu self._controls.
	(CodeBookInputField._on_invoke_codebook): vyu¾ívej zmìny ve
	specifikaci (FieldSpec.codebook() je seznam obsahující i id
	cílových sloupeèkù), pøedávej resolveru správný argument fields.
	(CodeBookInputField.set_value): nová metoda.
	(CodeBookInputField.get_value): nová metoda.

	* lib/form/list.py (_List._on_select_cell):
	`self._selection_callback' volej s argumentem `self._row_key'
	namísto `self._row_data'.
	(_List._row_key): nová metoda.
	(_ListTable.get_key): nová metoda.
	(_List.set_activation_callback): oprava docstringu.
	(CodeBook._on_activation): argument je key (sekvence klíèových
	hodnot), zpracuj i násobné klíèe, volej self._parant.EndModal(0)
	(BrowseForm.on_edit_form): argument je key (sekvence klíèových
	hodnot), vyu¾ívej resolver, vyu¾ívej form.run()

2001-10-25  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_List._ListTable.__init__): Vyu¾ívej
	ColumnSpec.separator().
	(_List._select_row): Nová metoda.
	(_List._on_select_row): Volej ji.
	(FilteredBrowseForm.__init__): Opraveno pøedávání argumentù do
	konstruktoru pøedka.

	* lib/data/dbdata.py (DBDataPostgreSQL.select)
	(DBDataPostgreSQL._pg_select)
	(PostgreSQLStandardBindingHandler._pg_select): Nový argument
	`sort'.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands): Do
	`_pdbb_command_select' zahrnuto volitelné tøídìní.
	(PostgreSQLStandardBindingHandler._pdbb_sort2sql): Nová metoda.

	* lib/data/_test.py (Float.check_rounding): Nový test.
	(_TypeCheck._test_validity): Pøidána podpora pro klíèové argumenty
	`validate'.
	(Boolean.check_validation): Updatován test na prázdný øetìzec.
	(DBDataDefaultClass.check_select_sorting): Nový test.
	(DBDataDefaultClass.setUp): Nový atribut atribut `dosnova'.

	* lib/data/types_.py (Type.validate, Type._validate): Akceptuj
	i libovolné klíèované argumenty.
	(Float.CEILING, Float.FLOOR): Nové konstanty.
	(Float._validate): Nové argumenty `precision' a `rounding'.

2001-10-24  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/list.py (_List._create_grid): poèítej souèet ¹íøek sloupcù.
	(_List.total_width): nová metoda.
	(CodeBook.__init__): nastavuj velikost dialogu.
	
	* lib/form/inputfield.py (CodeBookInputField._on_invoke_codebook):
	vyu¾ívej resolver pro zobrazení èíselníku.

	* lib/form/list.py (Module): V¹echny odkazy na `lib.view.*'
	zmìnìny na `spec.*'.
	(ListForm.__init__): nový argument `resolver', argument `parent'
	pøesunut.
	(CodeBook.__init__): nový argument `resolver', argument `parent'
	pøesunut.
	(BrowseForm.__init__): nový argument `resolver', argument `parent'
	pøesunut.

	* lib/form/inputfield.py (Module): importuj `spec' namísto
	`lib.view', V¹echny odkazy na `lib.view.*' zmìnìny na `spec.*'.

	* lib/form/form.py: Zmìna v¹ech výskytù `view.View' na `spec.ViewSpec'.
	Zmìna poøadí argumentù konstruktorù v¹ech formuláøových tøíd a
	pøidání argumentu `resolver' v¹em tìmto konstruktorùm.

	* lib/form/application.py (Application._resolver): nová metoda.
	(Application.title): pøejmenováno na `_title'.
	(Application.menu): pøejmenováno na `_menu'.
	(Application.buttons): pøejmenováno na `_buttons'.
	(Application.status_fields): pøejmenováno na `_status_fields'.
	(Application.on_load_form): Jméno specifikace a formuláøové tøídy
	urèi podle textového identifikátoru polo¾ky menu, která událost
	vyvolala. Pro vytvoøení formuláøe pou¾ij resolver.
	(Application.on_load_table): metoda zru¹ena - '_on_load_form' je
	nyní obecná a zastane obojí.

	* lib/form/spec.py (Module): Nový modul vytvoøený ze zru¹eného
	`lib.view'.
	(DataSpec): Nová tøída
	(View): Tøída pøejmenována na 'ViewSpec' (konzistence).
	(Module): Rozsáhlé zmìny dokumentace týkající se pøesunu modulu z
	`lib.view' do `lib.form'.
	(ColumnSpec.__init__): nový argument `separator'
	(ColumnSpec.separator): nová metoda

	* lib/view/__init__.py (Module): Modul zru¹en, obsah pøesunut do
	modulu `form'.
	* lib/view/view.py (Module): soubor pøesunut do	modulu `form' a
	pøejmenován na `spec.py'.

2001-10-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (BrowseDualForm.__init__): Pøedávej obìma
	formuláøùm argument `noselect'.

	* lib/data/data.py (Data.select): Nový argument `sort'.
	(MemData.select): Zdokumentována nepodpora tøídìní.

	* lib/form/list.py (_List._create_grid): Pro èíselné sloupce
	nastavuj zarovnávání napravo.
	(_List.__init__): Nový atribut `noselect'.
	(ListForm.__init__, BrowseForm.__init__) 
	(FilteredBrowseForm.__init__): Nápodobnì.
	(_List._ListTable.GetTypeName): Nová metoda.
	(_List._ListTable._TYPEMAPPING): Nový privátní atribut.
	(_List._ListTable._get_value): Pro typy z _TYPEMAPPING vracej
	hodnotu, ne exportovanou hodnotu.
	(_List._ListTable.__init__): Nerozdìluj sloupce sekvenèního typu
	na více sloupcù.
	(_List._ListTable._get_value): Zobrazuj hodnoty vícesloupcových
	typù oddìlené separátorem.

	* lib/data/types_.py (Number): Nový typ.
	(Integer, Float): Nyní dìdí Number místo Type.

	* lib/data/dbdata.py (PostgreSQLStandardBindingHandler.gettype):
	Úpravy kódu, pøidáno rozpoznávání pøesnosti desetinných èísel.

2001-10-23  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Codebook.__init__): Opraven popis argumentù.

	* lib/data/dbdata.py
	(DBDataPostgreSQL._pg_make_row_from_raw_data): I v pøípadì
	èíselníku se sekvencí value columns nevolej `validate' a rovnou
	pou¾ij tuple stringù získaných pøímo z databáze.

	* lib/form/list.py (_List._ListTable._YES, _List._ListTable._NO):
	Nové konstanty.
	(_List.ListTable._get_value): Pou¾ívej tyto konstanty pro
	zobrazování hodnot typu Boolean.

2001-10-22  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Boolean): Upøesnìn docstring.

	* lib/form/form.py (BrowseDualForm.__init__): Doplnìn docstring.
	(BrowseDualForm): Do docstringu doplnìny typy obou formuláøù.

2001-10-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL._PG_CACHE_SIZE): Nová
	konstanta.
	(DBDataPostgreSQL._PgBuffer.fill): Pou¾ívej ji.
	(DBDataPostgreSQL._PG_INITIAL_FETCH_SIZE): Zmen¹eno na 50.

2001-10-20  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (BrowseDualForm.OnSize): Nová metoda.
	(BrowseDualForm.__init__): Registruj ji pro EVT_SIZE.
	(BrowseDualForm.__init__): Zru¹eny blbiny s explicitním
	nastavováním velikosti.
	(BrowseDualForm.__init__): Znemo¾ni u¾ivatelský unsplit.

	* lib/form/list.py (_List._on_activation): Ber øádek z gridu, ne
	ze sebe.
	(ListForm.__init__): Update docstringu.
	(_List._ListTable.__init__): `column_*' argumenty nahrazeny
	jediným argumentem `columns'.
	(_List._create_grid): Zohlednìní pøedchozí zmìny.
	(_List._ListTable._get_value): Vytahuj z datového øádku správný
	sloupec.
	(_List._row_data, _List._create_grid, _List._ListTable.__init__)
	(_List._ListTable._get_value): Doplnìna podpora pro multisloupce.

2001-10-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL.select): Nepou¾ívej cache,
	do¹lo-li ke zmìnì podmínky.

	* lib/form/form.py (BrowseDualForm.__init__): Zajisti nulový obsah
	formuláøe na zaèátku jeho zobrazení.

	* lib/data/data.py (Data._Operator.__str__): Opraveno.

	* lib/form/list.py (BrowseForm.on_edit_form): Smazán zapomenutý
	print.
	(_List._row_data): Nový argument `row'.
	(_List._on_activation, _List._on_select_cell): Pøedávej ho.
	(_List): Buï potomkem wxWindow, ne wxGrid.
	(_List.__init__): Zru¹en atribut `_column_count', nový atribut
	`_columns'.
	(_List._create_grid): Nová metoda.
	(_List.__init__): Vyu¾ívej ji.
	(_List._on_select_cell, _List._row_data, _List.reshuffle): Pracuj
	nad self._grid, ne self.
	(ListForm.__init__): Zru¹ena registrace klávesových událostí pro
	list.
	(_List.reset): Volej `reshuffle'.
	(_List.reshuffle): Pøedìláno, nový argument `_position', metoda
	nyní nahrazuje stávající grid za nový.
	(_List._ListTable): Pøedávej z konstruktoru condition.

2001-10-18  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (BrowseDualForm): Dopsáno.

	* lib/view/view.py: Formátovací úpravy.
	(LayoutSpec.__init__): FieldGroup -> GroupSpec v docstringu.

	* lib/util/util.py (debugger): Nová funkce.

	* lib/form/list.py (_List._on_activation): Pøedávej výsledek
	volání metody, ne metodu.
	(_List._row_data): Opravena promìnná ve volání `validate'.
	(BrowseForm.__init__): Nový argument `selection_callback'.
	(_List.reshuffle): Mdlé pokusy o refresh seznamu pøi zmìnì dat.

	* lib/data/types_.py (Type._EMPTY_MAPS_TO_NONE): Nový atribut.
	(Type.validate): Mapuj prázdné øetìzce na None, pokud to
	_EMPTY_MAPS_TO_NONE dovoluje.
	(String._EMPTY_MAPS_TO_NONE): Pøedefinuj na FALSE.

2001-10-17  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (BrowseDualForm): Nový kód, nehotovo.

	* lib/form/list.py (BrowseForm.__init__): Nenastavuj activation
	callback sám, pøedej ho jako parametr konstruktoru pøedka.
	(BrowseForm.on_edit_form): Zmìna struktury argumentu `data'.
	(ListForm.__init__): Zmìna struktury argumentù callbackù.
	(_List.__init__): Nový atribut `_data'.
	(_List._row_data): Vracej data v nové struktuøe.
	(_List._ListTable.reshuffle, _List._ListTable._reshuffle)
	(_List.reshuffle): Nový argument `condition'.
	(FilteredBrowseForm): Dopsáno.

2001-10-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (ListForm.__init__): Nové argumenty
	'selection_callback' a 'activation_callback'.
	(ListForm.__init__): Zru¹ena poznámka v docstringu o ji¾
	neexistující metodì `fill'.
	(_List.set_selection_callback): Nová metoda.
	(_List.__init__): Atribut `_callback' pøejmenován na
	`_activation_callback', nový atribut `_selection_callback'.
	(_List.set_activation_callback, _List._on_activation): `_callback'
	-> `_activation_callback'.
	(_List._on_select_cell): Volej `_selection_callback', je-li
	nastaven.
	(_List._row_data): Nová metoda.
	(_List._on_activation): Pou¾ívej ji.
	(CodeBook.__init__): Nenastavuj activation callback sám, pøedej ho
	jako parametr konstruktoru pøedka.

	* lib/form/form.py (SettableForm): Nová tøída.

2001-10-15  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Value.export): Jestli¾e hodnota je None,
	nehavaruj a exportuj ji jako prázdný øetìzec.

	* lib/form/list.py (_List._ListTable.__init__): Nový argument
	`column_labels' a atribut `_column_labels'.
	(_List._ListTable.GetColLabelValue): Nová metoda.
	(_List.__init__): Pøedávej konstruktoru _ListTable column_labels.

2001-10-15  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/inputfield.py (BooleanInputField.set_value): nepou¾ívej
	`DBColumnBinding.bindings()',ale `types.Codebook.number_of_columns()'

	* lib/form/list.py (BrowseForm.on_edit_form): Upøesnìna logovací hlá¹ka

2001-10-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPyPgSQL._pg_query): Upraveny argumenty
	výjimky v assertu na typ.
	(DBException.__init__): Opraveno volání konstruktoru pøedka.
	(DBDataPyPgSQL._pg_query): Akceptuj i hodnoty NULL.

	* lib/data/types_.py (Codebook.Mode): Hodnoty konstant zmìnìny na
	srozumitelné strings.
	(Codebook.__init__): Implicitní hodnota argumentu `mode' zmìnìna
	na `Mode.ONCE'.

	* lib/form/list.py (_List._ListTable.reshuffle)
	(_List._ListTable.GetValue): Doplnìno o¹etøování databázových
	chyb.
	(_DBOP): Nová globální konstanta.
	(_List._ListTable._get_value): Nová metoda.
	(_List._ListTable._reshuffle): Nová metoda.
	(_List.__init__): Nový parametr `frame' a atribut `_frame'.
	(_List._ListTable._panic): Nová metoda.

	* lib/form/dialog.py (db_operation): Nový argument `quiet'.
	(db_operation): Prohozeny argumenty `parent' a `operation'.
	(db_operation): `operation' smí být i tuple definující volání
	funkce.

	* lib/form/form.py: Drobné úpravy docstringù.
	(_DBOP): Nová globální konstanta.
	(EditForm._lock, EditForm._unlock, EditForm._edit_update)
	(EditForm._edit_delete, EditForm.changed, EditForm.set_row):
	Pou¾ívej _DBOP.

2001-10-13  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/test.py (transform_args): Pøi zpracování argumentù
	poèítej s tím, ¾e se nemusí jednat pouze o tøídy.

	* lib/form/_test.py (Dialog.check_interactive_password): Nový
	test.
	(DBOperation): Nová sada testù.

	* lib/form/dialog.py (Password): Nová tøída.
	(Message.run): Ulo¾ vytvoøený dialog do nového atributu `_dialog'.
	(db_operation): Dokonèeno.

	* lib/data/_test.py (DBExceptions.check_constructors): Update.
	(DBData.check_it): Zru¹en assert na zru¹enou metodu `bindings'.
	(TutorialTest.get_connection): Jako vedlej¹í efekt testuj mo¾nost
	zadání DB spojení funkcí.

	* lib/data/dbdata.py: Do v¹ech konstruktorù DBUserException a
	DBSystemException bez argumentù pøidán argument None.
	(DBException.__init__): Akceptuj libovolný poèet argumentù.
	(DBException.exception): Nová metoda.
	(DBException.__init__): Doplò `message', je-li None.
	(DBDataPostgreSQL.__init__): `dbconnection_spec' smí být i funkce.
	(DBDataPyPgSQL._pypg_add_notifications) 
	(DBDataPyPgSQL._pypg_new_connection) 
	(DBDataPyPgSQL._pypg_get_connection) 
	(DBDataPyPgSQL._pypg_return_connection): Zohledni pøedchozí zmìnu.

2001-10-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/inputfield.py (InputField.data_binding): Zru¹eno.
	(InputField.__init__): Zru¹eno vytahování specifikace dat.

	* lib/data/types_.py (Enumeration.values): Update docstringu --
	vrací nejen stringy.
	(Codebook): Update docstringu -- hodnotami mohou být i tuples
	stringù.
	(Codebook.__init__): Update docstringu -- klíèové sloupce
	parametru `data' musí být typu `String'.
	(Codebook.number_of_columns): Nová metoda.

	* lib/data/dbdata.py (DBException.__init__): Kompletnì pøekopáno.
	(DBException.message): Nová metoda.
	(DBLoginException): Nová tøída.
	Update v¹ech volaných výjimek pro nové tøídy.
	(DBData.bindings): Zru¹eno.
	(DBData.__init__): Zru¹ena zmìna z 2001-10-09.
	(DBData.binding): Nápodobnì.
	(PostgreSQLStandardBindingHandler.find_id) 
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands) 
	(PostgreSQLStandardBindingHandler._pdbb_table_row_lists): Update
	kvùli zru¹ené metodì `bindings'.

	* lib/form/_test.py (Dialog.check_interactive_message): Doplnìn
	test caption.
	(Dialog.check_interactive_question): Doplnìno testování
	implicitních tlaèítek.

	* lib/form/dialog.py (Message._create_dialog): Nezobrazuj tlaèítko
	Cancel.

2001-10-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/_test.py: Smazány v¹echny zastaralé testy.
	(pdm_tests): Zru¹eno.
	Pøidány varovné testy pro v¹echny netestované moduly.

	* lib/form/dialog.py (Question.run): `caption' obaleno _().
	(Message.__init__): Zmìnìn význam tøídy.
	(Message._create_dialog): Nová metoda.
	(Message._run_dialog): Nová metoda.
	(Message._customize_result): Nová metoda.
	(Message._select_message): Nová metoda.
	(Message.run): Pou¾ívej nové metody.  Smazán zakomentovaný
	SearchDialog.
	(Question.__init__): Argument `question', resp. `default',
	pøejmenován na `message', resp. `default_button'.  Atribut
	`_default' pøejmenován na `_default_button'.
	(Question.BUTTON_YES): Nová konstanta.
	(Question.BUTTON_NO): Nová konstanta.
	(Question.__init__): Hodnoty parametru `default_button' zmìnìny na
	novì zavedené konstanty.
	(Question._customize_result): Nová metoda.
	(Message.run): Akceptuj libovolné argumenty.
	(Message.__init__): Nový argument `caption'.
	(Question.run): Akceptuj libovolné argumenty a pouze volej metodu
	pøedka.
	(Question): Vyu¾ívej volby implicitního tlaèítka.
	(db_operation): Nová funkce.
	(Dialog.run): Akceptuj libovolné argumenty.

2001-10-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_List._ListTable.reshuffle): Opraveno více
	chyb souvisejících s indexem.

	* lib/data/dbdata.py (DBDataPostgreSQL._PgBuffer.__str__): Vypisuj
	i prvek na aktuální pozici.
	(DBDataPostgreSQL.PgBuffer.__str__): Dìlej mezi øádky nové øádky.

2001-10-10  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/inputfield.py (InputField.data_binding): nová metoda
	(InputField.__init__): zapamatuj si datovou vazbu (self._data_binding)
	(resolve): pøidána podpora pro typ Codebook
	(InputField.__init__): neva¾ wxEVT_KEY_DOWN na control, neloguj
	(BooleanInputField.set_value): Povol prázdný øetìzec jako FALSE
	(CodeBookInputField._create_control): nová metoda
	(CodeBookInputField._on_invoke_codebook): nová metoda
	(CodeBookInputField._on_key_down): pøi klávese INVOKE_CODEBOOK
	pouze zavolej `_on_invoke_codebook', zde nic pøímo neo¹etøuj

	* lib/form/form.py (EditForm._pack_fields): doplnìn zapomenutý
	pøevod z dlg units na pixely, label vertikálnì vycentrován

	* lib/view/view.py (GroupSpec.__init__): zmìna defaultních hodnot
	`gap' a `space'

2001-10-09  Tomas Cerha  <cerha@brailcom.cz>

	* lib/data/dbdata.py (DBData.__init__): vytvoø slovník pro pøístup
	k vazbám pøes id
	(DBData._db_column_binding): vyu¾ívej slovník namísto sekvenèního
	procházení, metoda pøejmenována na `DBData.binding' - zveøejnìna

	* lib/form/screen.py (MenuBar._assemble_menu): zru¹ena zapomenutá
	debugovací hlá¹ka...

	* lib/form/form.py (EditForm._on_parent_close): zvý¹en sleep na 150

	* lib/form/application.py (Application.on_load_form): nová metoda
	(Application.on_load_table): vyu¾ívej obrácené asociace klíèù MenuBaru
	
	* lib/form/screen.py (MenuBar): úprava docstringu
	(MenuBar._assemble_menu): pøevrácen zpùsob asociace klíè <->
	hodnota pro slovník self._id_dictionary
	(MenuBar.__getitem__): update docstringu

2001-10-09  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_List.GetValue): Neprovádìj datový "rozbìh"
	ani pro row==1.

	* lib/data/dbdata.py (DBDataPostgreSQL.skip): V logovací hlá¹ce
	uvádìj i poèet øádkù.
	(DBDataPostgreSQL.fetchone): Do volání `skip(0)' pøidán argument
	`direction'.
	(DBDataPostgreSQL.skip): Opraveny chyby korekce v blízkosti hranic
	bufferu.

2001-10-09  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/inputfield.py (InputField.validation_error): pøedávej
	self._parent konstruktoru `dialog.Message'
	(Module): importuj modul dialog

	* lib/form/form.py (EditForm.changed): nová metoda
	(EditForm._on_parent_close): Pokud byla data zmìnìna, vy¾aduj
	potvrzení od u¾ivatele.
	(EditForm._on_parent_close): doplnìní dokumentace, estetické
	úpravy kódu, hack na ztracený focus
	(EditForm._edit_insert): pøedávej self._parent konstruktoru
	`dialog.Message'
	(EditForm._edit_update): pøedávej self._parent konstruktoru
	`dialog.Message'
	(EditForm._edit_delete): pøedávej self._parent konstruktoru
	`dialog.Message'
	(EditForm._lock): pøedávej self._parent konstruktoru `dialog.Message'
	(EditForm._on_parent_close): pøedávej self._parent konstruktoru
	`dialog.Question'
	(EditForm._edit_delete): pøedávej self._parent konstruktoru
	`dialog.Question'

	* lib/form/dialog.py (Message.__init__): nový povinný atribut parent
	(Message.run): místo `wx.wxMessageBox' vytváøej `wx.wxMessageDialog'
	a volej na nìj ShowModal()
	(Question.__init__): nový povinný atribut parent
	(Question.run): místo `wx.wxMessageBox' vytváøej `wx.wxMessageDialog'
	a volej na nìj ShowModal()

	* lib/form/dialog.py (Question.__init__): podpora pro volbu
	dafaultního tlaèítka
	(Question.run): podpora pro volbu dafaultního tlaèítka, dialog má
	ikonu a titulek

	* lib/form/form.py (Form.__init__): pro EVT_CLOSE rodiè. okna
	volej `_on_parent_close'; nenastavuj `self._handler'
	(Form._on_key_down): nepou¾ívej `self._handler', o¹etøi události
	rovnou zde.
	(Form._on_leave_window): nová metoda
	(Form._on_parent_close): nová metoda
	(EditForm._on_ok): upraveno logování 
	(EditForm._on_cancel): neloguj
	(EditForm._close_form): neloguj; zatím volej self._parent.Close();
	pøidáno TODO
	(EditForm._on_parent_close): nová metoda
	(EditForm._create_buttons): zmìna poøadí tlaèítek

2001-10-08  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (EditForm._close_form): Jestli¾e je formuláø
	instancí lib.form.list.ListForm, aktualizuj jeho obsah.
	(EditForm.__init__): Volej na rodièe `Show(wx.TRUE) '.
	(EditForm._close_form): Volej na rodièe `Show(wx.FALSE)'.
	(PopupForm._popup_frame): Nový argument `parent'.
	(EditForm.__init__): Zohledni pøedchozí zmìnu.

	* lib/form/screen.py (FrameStack.window): Nová metoda.

	* lib/form/list.py (BrowseForm.on_edit_form): Je-li to mo¾né, zøiï
	instanci EditForm dle identifikátoru instance.
	(ListForm.reshuffle): Nová metoda.
	(BrowseForm.on_edit_form): Neukládej editaèní formuláø na frame stack.

	* lib/util/util.py (InstanceResolver._create_instance): Nastav
	nové instanci atribut '_instance_resolver_id'.

2001-10-07  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (BrowseForm.on_edit_form): Editaènímu formuláøi
	pøedhazuj kopii datového objektu; jedná se o doèasný hack.

	* lib/form/screen.py (FrameStack.push): Volej `Show' s wx.TRUE, ne
	TRUE.

	* lib/form/form.py (EditForm._close_form): Nová metoda.
	(EditForm._on_ok, EditForm._on_cancel): Volej ji.

	* lib/data/types_.py (Codebook.value_column): Nová metoda.
	(String._validate): Pøi chybì assertu reportuj i øetìzec.

	* lib/data/_test.py (DBDataDefaultClass.check_insert): Pøi testu
	vrácené hodnoty ignoruj oid.
	(DBDataDefaultClass.setUp): Vytváøej tabulku s multisloupcem.
	(DBMultiData): Nová sada testù.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Do `_pdbb_command_get_last' pøidán výbìr oid.

2001-10-06  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/util.py (xtuple): Nová funkce.

	* lib/data/dbdata.py
	(DBDataPostgreSQL._pg_make_row_from_raw_data)
	(PostgreSQLStandardBindingHandler): Dodána podpora pro typ
	Sequence.
	(DBColumnBinding.__init__): Zru¹eno roz¹íøení významu argumentu
	`column'.
	(DBMultiColumnBinding): Nová tøída.

	* lib/data/_test.py (Sequence.setUp): Nová metoda.
	(Sequence.check_len): Nový test.

	* lib/data/types_.py (Sequence.__len__): Nová metoda.
	(Codebook): Doplnìna podpora pro vícesloupcové hodnoty.

2001-10-05  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBColumnBinding.__init__): Argument `column'
	mù¾e být i tuple názvù sloupcù.

	* lib/data/_test.py (_TypeCheck._test_validity): Pøi chybì
	validace vypisuj i chybovou hlá¹ku.
	(Sequence): Nová sada testù.

	* lib/data/types_.py (Sequence): Nový typ.

2001-10-05  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/inputfield.py (resolve): assert na existenci datové
	specifikace pro dané id
	(InputField.get_value): oprava docstringu
	(InputField.create_label): pøejmenováno na _create_label
	(InputField.create_control): pøejmenováno na _create_control

	* lib/form/form.py (PopupForm._popup_frame): Odstranìn parametr
	size pøi konstrukci dialogu - velikost musí být nastavena
	dodateènì pomocí SetSize() a¾ po vytvoøení obsahu.
	(EditForm): pøidej PopupForm mezi pøedky
	(EditForm.__init__): kompletnì pøepsáno
	(EditForm._create_caption): nová metoda
	(EditForm._create_buttons): nová metoda
	(EditForm._create_group): nová metoda
	(EditForm._pack_fields): nová metoda
	(EditForm._on_ok): nová metoda
	(EditForm._on_cancel): nová metoda
	(_orientation2wx): nová funkce
	(dlg2px): nová funkce
	(char2px): vyu¾ívej ji

	* lib/view/view.py (GroupSpec): nová tøída
	(LayoutSpec): kompletní zmìna API tøídy
	(View.__init__): zru¹en atribut fields (políèka jsou teï souèástí
	parametru layout)
	(View.fields): metoda zru¹ena jako nepotøebná
	(View.field_groups): metoda zru¹ena jako nepotøebná
	(View._remember_fields): nová metoda
	(View._remember_columns): nová metoda

	* lib/form/list.py (ListForm.OnSetFocus): nová metoda

	* lib/form/form.py (EditForm.OnSetFocus): nová metoda

	* lib/form/screen.py (FrameStack._replace_window): na nové okno
	zavolej SetFocus()

2001-10-05  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL.fill): Nový argument
	`extra_move'.
	(DBDataPostgreSQL.fetchone): Zohledni ho.
	(DBDataPostgreSQL.fill): Neusekávej buffer pod velikost danou
	_PG_INITIAL_FETCH_SIZE.

2001-10-04  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL._PgBuffer.fetch)
	(DBDataPostgreSQL._PgBuffer.goto)
	(DBDataPostgreSQL._PgBuffer.reset)
	(DBDataPostgreSQL._PgBuffer.skip): Opraveno.
	(DBDataPostgreSQL.select): Pøi návratu na zaèátek volej na buffer
	`goto' s argumentem -1, ne 0.

	* lib/form/list.py (_List._ListTable.__init__): Nevolej
	AutoSizeColumns, není to ji¾ tøeba a grid z toho ¹ílí.


2001-10-03  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL._PgBuffer.__str__): Do
	výpisu pøidán _dbpointer.

	* lib/form/inputfield.py (CodeBookInputField._on_key_down):
	Nevolej na èíselník `fill'.
	* lib/form/application.py (Application.on_load_table): Nevolej na
	formuláø `fill'.

	* lib/form/list.py (_List): Pøepracováno na "poèítaný" grid.
	(ListForm.__init__): Pøedávej konstruktoru tøídy _List argument
	`data'.
	(ListForm.fill): Zru¹eno.

2001-10-02  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (ListForm.fill): Volej self._data.select
	s argumentem `reuse' TRUE.

	* lib/data/dbdata.py (DBDataPostgreSQL._PgBuffer): Nový atribut
	`_dbpointer'.
	(DBDataPostgreSQL._PgBuffer.copy): Opraveno.
	(DBDataPostgreSQL._PgBuffer.skip): Opraveno.
	(DBDataPostgreSQL._PgBuffer): Vìt¹inì metod doplnìny dokumentaèní
	øetìzce.
	(DBDataPostgreSQL.select): Opraveno cachování.
	(DBDataPostgreSQL._PgBuffer.__str__): Nevypisuj celý obsah
	bufferu.

2001-10-01  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (DBDataDefaultClassRefetch): Zru¹eno.
	(DBDataReuse.setUp): Nová sada testù.
	(DBDataFetchBuffer.setUp): Do velikosti dat pøidáno
	dbdata.DBDataPostgreSQL._PG_INITIAL_FETCH_SIZE.
	(DBDataFetchBuffer.check_skip_fetch): Zohlednìno
	dbdata.DBDataPostgreSQL._PG_INITIAL_FETCH_SIZE.
	(go): Nová funkce (pro jednodu¹¹í ladìní).

	* lib/data/dbdata.py (DBDataPostgreSQL._PgBuffer.goto): Nová
	metoda.
	(DBDataPostgreSQL.select): Vyu¾ívej ji.
	(DBDataPostgreSQL.fetchone): Zru¹ena rekonstrukce pøeru¹eného
	fetche.

2001-09-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (ListForm.Close): Doplnìno chybìjící `self' ve
	volání `Close'.

	* lib/data/dbdata.py (DBDataPostgreSQL._PG_INITIAL_FETCH_SIZE):
	Nová konstanta.
	(DBDataPostgreSQL._PG_FETCH_SIZE): Sní¾eno zpìt na 100.
	(DBDataPostgreSQL._PgBuffer.copy): Nová metoda.
	(DBDataPostgreSQL.select): Dokonèeno èásteèné cachování.
	(DBDataPostgreSQL._PgBuffer.fetch): Zru¹en argument `delete' a
	zru¹eno mazání naètených záznamù.
	(DBDataPostgreSQL.fetchone): Pøi prvním fillu stahuj poèet øádkù
	dle _PG_INITIAL_FETCH_SIZE.
	(DBDataPostgreSQL.__init__): Nový atribut _pg_initial_select.
	(DBDataPostgreSQL._PgBuffer.fetch): Zru¹en test na None.
	(DBDataPostgreSQL._PgBuffer): Zmìnìna sémantika atributù _pointer
	a _dbposition.
	(DBDataPostgreSQL._PgBuffer.fill): Zachovávej i èást pøedchozích
	dat.
	(DBDataPostgreSQL._PgBuffer.skip): Nová metoda.
	(DBDataPostgreSQL._PgBuffer.correction): Zru¹eno.
	(DBDataPostgreSQL.skip): Pou¾ívej _PgBuffer.skip místo
	_PgBuffer.correction.
	(DBDataPostgreSQL._PgBuffer.__str__): Nová metoda.

2001-09-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (Data.select, MemData.select): Nový argument
	`reuse'.

	* lib/form/screen.py (MenuBar.keys): Nová metoda.

	* lib/form/application.py (Application.on_exit): Staronová metoda.
	(Application.on_load_table): Staronová metoda.
	(Application._menubar_forms): Nový atribut.

	* lib/form/list.py (ListForm.Close): Nová metoda.

	* lib/util/util.py (super): Nová funkce.

	* lib/data/dbdata.py (DBDataPyPgSQL._listen): Volej `reduce'
	s iniciální hodnotou.
	(DBDataPostgreSQL.select): Nový argument `reuse'.
	(DBDataPostgreSQL.select): Odchytávej pouze DBException.
	(DBDataPostgreSQL.__init__): Nový atribut `_pg_number_of_rows'.
	(DBDataPostgreSQL._PgBuffer.fetch): Nový argument `delete'.
	(DBDataPostgreSQL._PG_FETCH_SIZE): Zvý¹eno na 1000.
	(DBDataPostgreSQL.__init__): Nový atribut `_pg_changed'.
	(DBDataPyPgSQL._listen): Nastavuj jej pøi oznámení o zmìnì.
	(DBDataPostgreSQL.select): Resetuj jej.

2001-09-27  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (_List): Kompletnì pøedìláno, na grid.
	(ListForm.fill): Nepou¾ívej wx metody vnitøního listu.

2001-09-27  Tomas Cerha  <cerha@brailcom.cz>

	* lib/view/view.py (MultiFieldSpec): tøída zru¹ena
	(FieldSpec.__init__): zru¹en atribut a metoda `help'.
	(FieldSpec.__init__): nový atribut a metoda `hint'.
	(FieldSpec.__init__): defaultní hodnota `label' je '' namísto None

	* lib/form/form.py: neimportuj lib.data._types,	importuj inputfield
	(InputField): tøída pøesunuta do nového modulu
	`inputfield.py' a zcela pøepracována.
	(EditForm._validate): Validace pøenechána na
	metodì validate ka¾dého políèka. Doplnìn docstring.

	* lib/form/inputfield.py: nový modul.

2001-09-26  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (FrameStack.push): Volej opìt Show a ne
	ShowModal, které zpùsobí nezobrazení seznamu.

2001-09-25  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (CodeBook.__init__): Nech» je rodièem novì
	vytvoøený frame.
	(CodeBook._on_activation): Neodstraòuj se z frame stacku, sám se
	zavøi.
	(CodeBook): Buï potomkem tøídy form.PopupForm.
	(CodeBook.__init__): Zru¹en argument frame_stack.

	* lib/form/form.py (PopupForm.__init__): Nová tøída.
	(EditForm._on_key_down): Zohledni zmìnu poètu argumentù tøídy
	list.CodeBook.
	(Form.parent): Nová metoda.

	* lib/data/_test.py (Date.check_validation): Nová sada testù.
	(DateTime.check_export): Nový test.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Mapuj `date' na nový typ `Date'.

	* lib/data/types_.py (Date): Nová tøída.
	(DateTime.export): Nový argument `dateonly'.
	(DateTime.DATE, DateTime.TIME): Nové konstanty.
	(Value.export): Umo¾ni exporty s argumenty.

	* lib/util/util.py (InstanceResolver.__init__): Nový parametr
	`nocache'.
	(InstanceResolver.__getitem__): Zohledni ho.

	* lib/form/screen.py (FrameStack._replace_window): Uzavírej okno a
	odstraòuj je z framu.
	(FrameStack.pop): Do docstringu pøidán zákaz pøepou¾ití instance.
	(FrameStack.push): Zru¹eno nevyu¾ité pøiøazení `static'.
	(FrameStack.push): Jestli¾e rodiè vkládaného okna není frame
	zásobníku, volej `ShowModal' na tohoto rodièe.
	(FrameStack.push): Pou¾ívej Form.parent, ne wxWindow.GetParent.

2001-09-23  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Codebook._validate): Volej metodu pøedka
	`_validate', ne `validate'.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_select): Zji¹»uj a vracej
	poèet selectovaných øádkù.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Vytváøej SQL pøíkaz pro poèítání øádkù.
	(DBDataPostgreSQL.skip): Loguj pouze na úrovni DEBUG.

	* lib/form/list.py (_List.insert): Kontrola argumentu zmìnìna na
	assert.
	(ListForm.fill): Nový argument `force'.
	(ListForm.fill): O¹etøuj DB chybu.
	(_List._on_paint): Volej `fill' s argumentem `force'.

2001-09-22  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (Float.check_validation): Nová sada testù.

	* lib/data/types_.py (Float.export): Nová metoda.
	(Float.__init__): Nová metoda.
	(Value.export): Cachuj exportovanou hodnotu.
	(Value.__init__): Nový atribut `_exported'.
	(Float.precision): Nová metoda.
	(Type._validate): Nová metoda.
	(Type.validate): Provádìj cachování hodnot.
	(Type): Nové atributy související s cachováním.
	V¹echny podìdìné metody `validate' pøejmenovány na `_validate'.

	* lib/util/log.py (Logger._is_accepted): Neimportuj config.
	(Logger.__init__): Zaøaï modul `config' do globals.

2001-09-21  Milan Zamazal  <pdm@brailcom.org>

	* banka.py: Doplnìna podpora profilování.

	* lib/util/log.py (Logger._prefix): Uvádìj té¾ jméno tøídy a id
	instance.

	* lib/data/dbdata.py: Na více místech doplnìno logování.
	(DBDataPyPgSQL.CONNECTION_POOL): Nenastavuj hodnotu ihned.
	(DBDataPyPgSQL.__init__): Inicializuj CONNECTION_POOL.

2001-09-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (EditForm._lock): Nová metoda.
	(EditForm._unlock): Nová metoda.

	* lib/view/view.py (ColumnSpec.__init__): V docstringu upøesnìn
	parametr `width'.
	(ColumnSpec.width): Opraven docstring.

	* lib/data/_test.py (DBDataDefaultClass.check_lock): Nový test.
	(DBDataDefaultClass.setUp): Nová tabulka `self.dstat1'.

	* lib/data/dbdata.py (DBDataPostgreSQL.lock_row): Odladìno.
	(DBDataPyPgSQL._pg_query, DBDataPostgreSQL._pg_query)
	(DBDataPyPgSQL._pypg_get_connection): Nový argument
	`outside_transaction'.
	(DBDataPyPgSQL._pg_query): Odstranìn zapomenutý print.
	(DBDataPostgreSQL._pg_make_row_from_raw_data): O¹etøuj NULLs.

	* lib/data/data.py (Data.lock_row): Upøesnìna návratová hodnota.
	(Data.locked_row): Nová metoda.

2001-09-18  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (DBDataDefaultClass.check_update): Update
	testu.
	(DBDataDefaultClass.check_row): Update testu.

	* lib/data/dbdata.py (DBDataPostgreSQL.lock_row): Nová metoda.
	(DBDataPostgreSQL.unlock_row): Nová metoda.
	(DBDataPostgreSQL._PG_LOCK_TABLE): Nová konstanta.
	(DBDataPostgreSQL._pg_locking_process): Nová metoda.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Pøidej do vyzvedávaných sloupcù metody `row' sloupec `oid'.
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Pøidej ke sloupcùm oid.

	* lib/data/data.py (Data.lock_row): Nová metoda.
	(Data.unlock_row): Nová metoda.
	(Data.__init__): Nový atribut `_locked_row'.

2001-09-17  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_register_notifications):
	Zru¹eno.
	(DBDataPyPgSQL._pypg_add_notifier): Pøejmenováno na
	`_pypg_add_notifications' a pøekopáno.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Místo vytváøení notifikaèních SQL pøíkazù vytvoø seznam objektù
	pro LISTEN.
	(DBDataDefaultClass.__init__): Volej zru¹enou metodu
	`_pg_add_notifications' místo zru¹ené metody
	`_pg_register_notifications'.
	(DBDataPyPgSQL.__init__): Volej `_pypg_add_notifications' se
	seznamem notifikací.
	(DBDataPyPgSQL._listen): Registruj poslouchání notifikací pro
	ka¾dé získané spojení.
	(DBDataPyPgSQL._listen): Opravy chyb ve zpracování notifikací.
	(DBDataPyPgSQL._register): Nová metoda.
	(DBDataPyPgSQL.__init__): Vytváøej i zámek pro spojení.

2001-09-16  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/log.py (Logger._prefix): Opraveno zji¹tìní jména
	modulu.

	* lib/util/_test.py (Gettext): Zru¹eno.

	* lib/_test.py: Kvùli svému stavu vyøazeny testy modulu lib.form.

	* lib/data/dbdata.py (DBData.sleep): Volej `close'.
	(DBDataPyPgSQL._pypg_add_notifier): Nová metoda.
	(DBDataPyPgSQL.__init__): Volej ji.
	(DBDataPyPgSQL._pg_begin_transaction): Nová metoda.
	(DBDataPyPgSQL._pg_commit_transaction): Nová metoda.
	(DBDataPyPgSQL._pg_rollback_transaction): Nová metoda.
	(DBDataPyPgSQL._pypg_allocate_connection): Nová metoda.
	(DBDataPyPgSQL._pypg_deallocate_connection): Nová metoda.

	* lib/data/_test.py (DBDataDefaultClass.setUp): Nech» `_to_kill'
	je list.
	(DBDataDefaultClassRefetch.setUp): Pøidej `self.list' do
	`_to_kill'.

2001-09-15  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (DBConnection.setUp, DBConnection.check_it):
	Opraveno.

	* lib/util/util.py (identity): Nová funkce.
	Není-li definován globální symbol `_', definuj ho jako identickou
	funkci.

	* banka.py: Pøehozeno poøadí importù, kvùli podtr¾ítku.
	Pou¾ívej anonymní funkci pro definici "nouzového" podtr¾ítka.

	* lib/data/dbdata.py (_pypg_new_connection): Nová funkce.
	(PostgreSQLStandardBindingHandler._pg_update): Pøidávej `value' do
	argumentù, i kdy¾ není sekvencí.

2001-09-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (DBConnection.check_cmp): Nový test.

	* lib/data/dbdata.py (DBConnection.__cmp__): Nová metoda.
	(_DBConnectionPool): Nová tøída.
	(DBDataPyPgSQL._PgNotifier): Nová tøída.
	(DBDataPyPgSQL.sleep): Zru¹eno.
	(DBDataPyPgSQL._pypg_start_listener, DBDataPyPgSQL._pypg_listen):
	Zru¹eno.
	(DBDataPyPgSQL._pypg_ensure_connection): Zru¹eno.
	(DBDataPyPgSQL._pypg_new_connection): Nová metoda.
	(DBDataPyPgSQL._pypg_get_connection): Nová metoda.
	(DBDataPyPgSQL._pg_query): Upraveno pro nové mechanismy.
	(DBDataPyPgSQL._pypg_return_connection): Nová metoda.

2001-09-14  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/form.py (char2px): nová funkce

	* lib/form/list.py (_List.__init__): vyu¾ívej ji

	* lib/form/form.py (EditForm.create_control): vyu¾ívej ji

	* lib/view/view.py (Width): tøída zru¹ena
	(ColumnSpec.__init__): `width' je ve znacích, ne v pixelech, zmìna
	defaultní hodnoty na 10.

2001-09-13  Tomas Cerha  <cerha@brailcom.cz>

	* lib/view/view.py (FieldSpec.__init__): nové argumenty width a height
	(FieldSpec.width): nová metoda
	(FieldSpec.height): nová metoda

	* lib/form/form.py (EditForm.__init__): sizer nastavuj sám sobì,
	ne rodièovskému framu (metody SetSizer() a SetAutoLayout()).
	(EditForm.create_control): ¹íøku a vý¹ku controlu nastav podle
	specifikace

	* banka.py (go): místo `form.application.Application' vytváøej
	instanci `defs.application.Application'

	* lib/form/application.py (Module): neimportuj defs
	(Application.__init__): parametrizaci statických prvkù nenaèítej z defs,
	ale z návratových hodnot vlastních metod (které je mo¾né pøedefinovat)
	(Application.title): nová metoda
	(Application.menu): nová metoda
	(Application.buttons): nová metoda
	(Application.status_fields): nová metoda
	(Application.on_menu): zru¹eno - pøesunuto do defs.application
	(Application.on_load_table): nápodobnì

	* lib/form/list.py (ListForm._on_size): loguj DEBUG informace,
	vracej wx.TRUE
	
2001-09-12  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/dialog.py: Neimportuj lib.util.log, importuj lib.util
	jako celek.
	Souboru pøekódován do ISO 8559-2.

	* config/config.py: Neimportuj lib.util.log, importuj lib.util
	jako celek.
	(application_name): Nová promìnná.

	* lib/data/dbdata.py: Neimportuj lib.util.log.

	* test_osnova.py: Neimportuj podtr¾ítko.

	* lib/form/form.py: Neimportuj podtr¾ítko a lib.util.log.

	* lib/view/view.py: Neimportuj podtr¾ítko.

	* lib/util/test.py: Neimportuj podtr¾ítko.

	* lib/data/data.py: Neimportuj podtr¾ítko.

	* lib/data/types_.py: Neimportuj podtr¾ítko.

	* banka.py: Nainstaluj gettext.
	Neimportuj lib.util.log, importuj lib.util jako celek.

	* lib/util/util.py (_): Zru¹eno.

	* lib/util/log.py (Logger): Nová tøída.
	(StreamLogger): Nová tøída.
	(SyslogLogger): Nová tøída.
	Odkaz na mo¾nost hvìzdièkového importu lib.util.
	(_host): Pøesunuto do `Logger'.
	(logger): Nová promìnná.
	(log): Pou¾ívej `logger' místo dosavadní implementace.

	* lib/util/__init__.py: Hvìzdièkovì importuj `log'.
	Neimportuj podtr¾ítko více.

	* lib/form/application.py (Application.on_frame_size): Nová metoda.
	Neimportuj lib.util.log, importuj lib.util jako celek.

	* lib/form/list.py (ListForm._on_size): Pøejmenováno na `OnSize'.
	(ListForm.OnSize): Volej na sebe `SetSize'.
	(ListForm.__init__): `_on_size' -> `OnSize'.
	Neimportuj podtr¾ítko a lib.util.log.

	* lib/form/screen.py (FrameStack.replace): Do docstringu doplnìna
	specifikace chování bez døíve existujícího vnitøního okna.
	(FrameStack.size_notification): Nová metoda.
	(FrameStack._replace_window): Volej ji.
	(FrameStack.push, FrameStack.pop, FrameStack.replace): Do
	docstringu pøidána informace o zmìnì velikosti.
	Neimportuj podtr¾ítko a lib.util.log.

2001-09-11  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (DualForm): Nový docstring.
	(BrowseDualForm): Nová tøída.
	(EditDualForm): Nová tøída.

2001-09-10  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/application.py (Application.push): Oprava docstringu

	* banka.py: volání locale.setlocale() pøesunuto a¾ do funkce go()
	za import lib.form.application, která teprve importuje wxWindows.
	
	* lib/form/form.py (Form.__init__): `Form' ji¾ není odvozen pøímo z
	`wxWindow', ale `wxPanel' (ten v¹ak je z `wxWindow' odvozen).

	* lib/form/list.py (_List.__init__): Nepoèítej ¹íøku a nevolej
	self.SetSize()
	(_List._on_size): nová metoda - zatím zakomentováno a pøidán
	komentáø a TODO s vysvìtlením...
	(_List._on_paint): FALSE zmìnìno na wx.FALSE
	(ListForm.__init__): nevytváøej sizer, EVT_SIZE je o¹etøen
	callbackem _on_size()
	(ListForm._on_size): nová metoda - volá self._list.SetSize()

2001-09-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (EditForm._on_key_down): Vyu¾ívej resolver pro
	èíselníky.

	* lib/form/list.py (BrowseForm.on_edit_form): Vyu¾ívej resolver
	pro editaèní formuláøe.

	* lib/form/application.py (Application.on_menu): Vyu¾ívej resolver
	pro prohlí¾ecí formuláøe.

	* lib/util/_test.py (Configuration): Nová sada testù.
	(InstanceResolver): Nová sada testù.

	* lib/util/util.py (Resolver): Nová tøída.
	(InstanceResolver): Nová tøída.
	(Configuration.__getattr__): Definováno chování pøi neexistujícím
	po¾adovaném parametru.
	(Configuration.__init__): Upøesnìn argument 'dictionary'.
	(Object): Nová tøída.

2001-09-02  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL._pg_already_present):
	Jestli¾e klíè je nekompletní, vra» FALSE.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands): Nový
	pøíkaz `_pddb_command_get_last'.
	(PostgreSQLStandardBindingHandler._pg_insert): Vlo¾ený øádek
	vytahuj pomocí oid.
	(DBDataPyPgSQL._pg_query): Do výjimky o chybném typu vkládej také
	dotyènou hodnotu.
	(DBDataPostgreSQL.update): Nenadávej, pokud má nový øádek stejný
	klíè jako øádek pùvodní.

	* lib/form/screen.py (FrameStack._replace_window): Neodstraòuj
	uzavíraná dìcka, wxWindows nemá rádo sirotky a obèas se pøi
	pohledu na nì hroutí.

	* lib/form/list.py (CodeBook._on_activation)
	(_List._on_activation, BrowseForm.on_edit_form): Vracej hodnotu.
	(_List._on_paint): Vracej wx.FALSE, ne FALSE.

	* lib/form/application.py: Odstranìn zakomentované kusy kódu.
	(Application.load_form): Pøi chybì zhasni a zavøi form.

	* lib/form/form.py (EditForm._InputField.__init__): `parent' musí
	být instance `Form'.
	(EditForm._InputField._on_key_down): Volej na codebook `fill'.
	(EditForm._InputField._on_key_down): Pøedávej codebooku správná
	data.
	(EditForm._InputField._on_key_down): Nastav codebooku správného
	ta»ku.
	(EditForm._on_key_down): Vracej hodnotu.
	(EditForm._edit_insert, EditForm._edit_update)
	(EditForm._edit_delete): Vracej pravdivostník konstanty wx.
	(EditForm._on_key_down): Opraveno mapování sloupcù.
	(EditForm._InputField.__init__.create_control): Disabluje
	needitovatelné polo¾ky.
	(EditForm._validate): Nevaliduj read-only políèka.
	(EditForm.__init__): Pøiøaï self._fields, teprve a¾ má `fields'
	finální hodnotu.
	(EditForm._validate): Pøi chybì v dialogu uvádìj i chybnou
	hodnotu.
	(EditForm._edit_insert): Po úspì¹ném vlo¾ení updatuj obsah
	formuláøe.
	(EditForm._edit_update): Nápodobnì.

	* lib/form/_test.py (ListForm.setUp, CodeBook.check_columns):
	Update.

2001-09-01  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (BrowseForm.on_edit_form): EVT -> EVENT.

	* lib/view/view.py (FieldSpec.__init__): Nový argument a atribut
	`editable'.
	(FieldSpec.editable): Nová metoda.
	(FieldSpec.__init__): Nový atribut `_codebook'.
	(FieldSpec.codebook): Nová metoda.

	* lib/form/form.py (EditForm._InputField.__init__): Odstranìny
	zapomenuté printy.
	(EditForm.set_row): U výjimek loguj jejich argumenty, ne výjimky
	samotné.
	(EditForm._InputField.__init__): Nový atribut _subfields.
	(EditForm.__init__): Eviduj podpolíèka multipolíèek.
	(EditForm._InputField.__init__): Odstranìn redundantí test na
	instanci MultiFieldSpec.
	(EditForm._InputField.__init__): Vytváøej podpolíèka jako instance
	`_InputField'.
	(EditForm._InputField__init__): Nech» argument `view' je
	FieldSpec, ne View.
	(EditForm.__init__): Zohledni tuto zmìnu.
	(EditForm._InputField.__init__.create_label): O¹etøuj pøípad, kdy
	label je None.
	(EditForm._InputField__init__): Nový atribut `_superfield'.
	(EditForm._InputField): `view' v¹ude pøejmenováno na `spec'.
	(EditForm._InputField._on_key_down): Dopsáno (av¹ak pìkný hnus).
	(EditForm._InputField.__init__): Nový atribut `_data'.

2001-08-31  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (WxKey._TRANS_TABLE): Doplnìn pøevod
	`Delete'.

	* lib/form/list.py (_List._on_paint): Nová metoda.
	(_List.__init__): Registruj ji jako callback pro událost `PAINT'.
	(_List.__init__): Nové atributy `_parent', `_changed' a
	`_in_paint'.
	(_List.on_data_change): Nová metoda.
	(ListForm.__init__): Registruj callback vnitøního listu pro zmìnu
	dat.
	(BrowseForm.on_edit_form): Pøi chybì uvádìj id sloupce místo
	celého sloupce.

	* lib/data/types_.py (Codebook): Hodnoty èíselníkového typu smí
	být pouze stringy.

	* lib/form/form.py (EditForm.label): Oprava návratové hodnoty
	v docstringu.
	(EditForm._validate): Vkládej do hlá¹ení skuteènì slovní oznaèení
	políèka.
	(EditForm.data): Pøejmenováno na `data_column'.
	(EditForm.__init__): `_data' pøejmenováno na `_data_column'.
	(EditForm._on_key_down): Zpracovávej klávesu pro smazání záznamu.
	(EditForm._edit_delete): Nová metoda.
	(EditForm.set_row): Opraveno `EVT' -> `EVENT'.
	(EditForm.__init__): Nenavì¹uj handler na klávesové události
	políèek formuláøe.
	(EditForm._InputField.create_control): Navì¹uj na políèka handler
	zpracování klávesové události.
	(EditForm._InputField.__init__): Nový atribut `_parent'.
	(EditForm._InputField._on_key_down): Nová metoda.
	(EditForm._InputField.__init__): Pøedávej do `create_control'
	self.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._pg_update): O¹etøi pøípad, kdy
	je `value' tuple.
	(DBDataPostgreSQL._pg_value): Provádìj test instance
	`Enumeration' na typ pùvodní hodnoty, ne zkonvertované hodnoty.
	(DBDataPostgreSQL._pg_value): Zpracovávej enumerations separátnì,
	exportuj je a obaluj apostrofy.

2001-08-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Codebook.export): Doplnìno chybìjící
	`return'.

	* lib/form/form.py (EditForm._edit_insert): Odchytávej databázové
	výjimky.
	(EditForm._edit_update): Nápodobnì.

	* config/config.py (logging): Místo funkce obyèejná konfiguraèní
	volba.

	* lib/util/log.py (log): Pou¾ívej novou konfiguraci.

	* banka.py (_process_options): Nová funkce.
	(go): Volej ji.
	(_USAGE): Nová konstanta.
	(_usage): Nová funkce.
	(_EXIT_OK): Nová konstanta.
	(_EXIT_USAGE): Nová konstanta.

	* lib/data/dbdata.py (DBDataPyPgSQL.__init__): Inicializuj
	`_pypg_lock'.
	(DBDataPyPgSQL._pypg_start_listener): Nemìò `_pypg_lock'.
	(DBException.__init__): Nová metoda.
	(DBDataPostgreSQL._pg_value): Obaluj apostrofy i výètové typy.

2001-08-29  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPyPgSQL.protect): Connection socket
	není file object, nýbr¾ file descriptor, zavírej jej tedy funkcí
	`os.close'.

	* lib/form/list.py (ListForm.__init__): Nech» rodièem listu je
	form samotný, ne jeho rodiè.
	(ListForm.__init__): Aplikuj sizer na form, ne list.
	(ListForm.Show): Zru¹eno.

	* lib/form/screen.py (Menu.__init__): Klíè není jazykovì závislý.
	(Menu.__init__): `key' -> `id' (aby se nepletlo s klávesami).
	(Menu.key): Nápodobnì.
	(MItem.__init__): Nápodobnì.
	(MItem.__init__): Klíè není jazykovì závislý.
	(MenuBar.__init__): `key' -> `id'.
	(MenuBar.__getitem__): Nápodobnì.
	(MenuBar._assemble_menu): Nápodobnì.
	(MenuBar._assemble_menu): Pøidávej do nápisu menu horkou klávesu.
	(FrameStack._replace_window): Volej na okna `Enable'.

	* lib/form/form.py: Doplnìn docstring.
	(_InputField): Pøesunuto do tøídy `EditForm'.
	(EditForm.set_value): Podporuj i checkboxy.
	(EditForm.set_row): Nápodobnì.
	(EditForm._validate): Nová metoda.
	(EditForm._edit_update): Dopsáno.
	(EditForm._edit_insert): Dopsáno.
	(EditForm.__init__): Nech» rodièem prvkù je form samotný, ne jeho
	rodiè.
	(EditForm.__init__): Provedena duchaøina se sizerem, aby byl
	zobrazen obsah celého okna; proè to funguje zrovna takto, nevím.
	(EditForm._InputField.get_value): Nová metoda.
	(EditForm.Show): Zru¹eno.
	(EditForm._on_key_down): Doplnìno chybìjící self ve volání pøedka.

	* lib/form/_test.py (Dialog): Nová sada testù.

	* lib/form/dialog.py: Doplnìn docstring.
	(Dialog): Nápodobnì.
	(Dialog.run): Nová metoda.
	(MessageBox): Pøejmenováno na `Message' a napsáno.
	(MessageBoxQuestion): Pøejmenováno na `Question' a napsáno.
	(SearchDialog): Zakomentováno.

2001-08-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (ListForm.__init__): Zpracovávej klávesu
	návratu v seznamu.
	(BrowseForm.on_edit_form): Pøidán docstring.
	(BrowseForm.on_edit_form): Nastav øádek do formuláøe.
	(Form._on_key_down): Nová metoda.

	* lib/form/screen.py (MItem.__init__): Upøesnìna specifikace
	parametru `hotkey'.
	(MItem.__init__): Odkomentován assert na typ parametru
	`activation'.
	(WxKey): Nová tøída.
	(FrameStack.__str__): Nová metoda.

	* banka.py (go): Volej Application.run místo Application.MainLoop.

	* lib/form/application.py (Application.frame): Pøejmenováno na
	`wx_frame'.
	(Application.run): Nová metoda.
	(Application.on_menu): frame -> wx_frame.
	(Application.OnInit): Zpracovávej klávesu návratu.

	* lib/form/form.py (_InputField.create_control): Zohlednìní zmìny
	hodnot orientace ve view.
	(EscapeHandler): Pøejmenováno na
	`lib.form.screen.WxEscapeHandler'.
	(Form.__init__): Zpracovávej klávesu návratu.
	(EditForm.__init__): Zpracovávej klávesu návratu ve vstupních
	políèkách.
	(EditForm.__init__): Nový atribut `_fields'.
	(EditForm.set_row): Nová metoda.
	(EditForm.__init__): Nový atribut `_key'.
	(EditForm._on_key_down): Nová metoda.
	(Form.__init__): Nový atribut `_handler'.
	(EditForm._on_key_down): Nová metoda.
	(EditForm._edit_insert): Nová metoda.

	* lib/view/view.py: Odstranìn import wx.
	(Orientation): Nová tøída.
	(MultiFieldSpec.__init__): Hodnoty argumenty `orientation' zmìnìny
	na konstanty tøídy `Orientation'.
	(MultiFieldSpec.orientation): Zmìna návratové hodnoty na jednu
	z konstant tøídy `Orientation' a vylep¹ení docstringu.

2001-08-27  Milan Zamazal  <pdm@brailcom.org>

	* config/config.py (log): Nová funkce.

	* lib/util/log.py (log): Neloguj hlá¹ky, jejich¾ druh je
	v config.exclude.
	(config): Pøesunuto do config.config.
	(_conf): Nová promìnná pro konfiguraci.

	* lib/form/application.py (Application.on_menu): Pøedávej do
	browse formu frame stack.
	Upraveny importy.
	(Application.on_menu): Loguj id.

	* lib/form/form.py (Form): StackFrame -> FrameStack v docstringu.
	(Form.__init__): Nový argument `frame_stack' a atribut
	`_frame_stack'.
	(_InputField.control): Úprava docstringu.
	(EditForm.__init__): Nový argument `frame_stack'.
	(Form.__init__): Nový atribut `_parent'.
	(EscapeHandler): Nová tøída.

	* lib/form/list.py (BrowseForm.__init__): Doplnìn dokumentaèní
	øetìzec.
	(BrowseForm.__init__): `parent' musí být instance `wx.wxFrame'.
	(BrowseForm.on_edit_form): Nová metoda.
	(BrowseForm.__init__): Registruj ji jako callback.
	(BrowseForm.__init__): Nový argument `frame_stack'.
	(ListForm.__init__): Nový nepovinný argument `frame_stack'.
	(CodeBook.__init__): Zru¹en atribut `_frame_stack', frame stack
	pøedáván konstruktoru rodièe.
	(CodeBook.Show): Pøesunuto do ListForm.

2001-08-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/test.py (transform_args): Nová funkce.
	* lib/form/_test.py: Vyu¾ívej ji.
	* lib/data/_test.py: Nápodobnì.

	* lib/form/screen.py (FrameStack.push): Znemo¾ni pushnutí na
	zásobníku ji¾ ulo¾ené instance vnitøního okna.

	* banka.py: Nastavuj `locale.LC_NUMERIC' na `C'.

	* COPYING: Nový soubor.

2001-08-24  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/screen.py (MenuBar): Zdokumentován zpùsob získání wx id
	polo¾ek menu pomocí textového klíèe.
	(MItem.__init__): Nový povinný argument `key'. Pøidány asserty na
	datové typy parametrù.
	(MItem.key): Nová metoda
	(Menu.__init__): Nový povinný argument `key'. Pøidány asserty na
	datové typy parametrù.
	(Menu.key): Nová metoda
	(MenuBar.__getitem__): Nová metoda; Vrací wx id polo¾ky menu pøes
	textový klíè.
	(MenuBar._assemble_menu): Nový povinný argument `key', roz¹íøení
	algoritmu o naplnìní slovníku identifikátorù.

	* lib/form/application.py (Application.on_menu): Nový callback pro
	obsluhu libovolné události menu.
	(Application.load_form):  Nová metoda
	(Application.on_uc_denik): Zru¹eno
	(Application.on_uc_osnova): Zru¹eno

	* lib/form/screen.py (MenuBar.__init__): Argument `form'
	pøejmenován na `parent' (konzistence; krom toho je form nesmysl)
	(StatusBar.__init__): Argument `frame' a atribut `_frame' pøejmenovány
	na `parent' a `_parent' (konzistence)
	(ButtonBar.__init__): Argument `frame' a atribut `_frame' pøejmenovány
	na `parent' a `_parent' (konzistence)
	(StatusBar): Oprava pøíkladu pou¾ití v dokumentaci.
	(MenuBar): Úprava pøíkladu pou¾ití v dokumentaci.

2001-08-23  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (TutorialTest.check_it): Updatováno pro nové
	rysy èíselníku.

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Nastav column_value èíselníku.
	(DBColumnBinding.__init__): Upravena specifikace argumentù
	'related_to' a 'enumerator'.

	* lib/data/types_.py (Codebook.__init__): Zru¹en atribut
	`_nonkey_col_ids'.
	(Codebook.__init__): Zmìnìna specifikace v docstringu -- nyní jsou
	ji¾ podstatné pouze klíèové sloupce.
	(Codebook._update_enumeration.extract): Vracej v¾dy tuple.
	(Codebook.validate): V¾dy pøevádìj `object' na tuple.
	(Codebook.__init__): Nový argument `value_column'.
	(Codebook._update_enumeration): Nech» je vnitøní hodnotou
	`self._value_column'.
	(Codebook.export): Nová metoda.
	(Codebook.is_valid): Nová metoda.

2001-08-23  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/application.py (Application.on_uc_denik): Nový callback
	pro zobrazení úèetního deníku.
	(Application.on_uc_osnova): Nový callback pro zobrazení úèetní
	osnovy.

	* lib/form/screen.py (FrameStack.count): Nová metoda.

	* lib/form/list.py (BrowseForm.__init__): Pøidán argument
	data (oddìlení datové a prezentaèní specifikace).

	* lib/view/view.py (MultiFieldSpec): Nová tøída.
	(FieldSpec.__init__): Nový nepovinný argument codebook.

	* lib/form/form.py (EditForm.__init__): volej parent.SetSizer()
	namísto self.SetSizer(). Stejnì tak pro SetAutoLayout().
	(_InputField.__init__): Pøidána podpora pro políèka slo¾ená z
	nìkolika vstupních polí.

	* lib/form/list.py (ListForm.__init__): volej parent.SetSizer()
	namísto self.SetSizer(). Stejnì tak pro SetAutoLayout().

2001-08-21  Tomas Cerha  <cerha@brailcom.cz>

	* config/config.py: Atributy spojení na databázi jsou nyní
	definovány jako instance tøídy DBConnection.

	* lib/view/view.py: Oprava dokumentace (odstranìní specifikace
	datové vazby ze specifikace view).
	(View._data): Atribut zru¹en.
	(View.data): Metoda zru¹ena.

	* lib/form/list.py (CodeBook.__init__): Oddìlení view a data (viz
	`Form.__init__'). Pøidány asserty na datové typy.

	* lib/form/list.py (ListForm.__init__): Oddìlení view a data (viz
	`Form.__init__'). Vytvoøení sizeru pøesunuto sem.

	* lib/form/form.py (_InputField): Ji¾ není potomkem wxBoxSizeru,
	ani jiného wx prvku. Zdokumentováno.
	(Form.__init__): specifikace view a data oddìlena - nový argument
	`data'. Sizer ji¾ není definován na úrovni tøídy Form - zru¹en
	atribut `Form._sizer' a argument `orientation'. Ka¾dá podtøída si
	mù¾e v oknì vytvoøit sizer podle potøeby... Pøidány asserty na
	datové typy.
	(EditForm.__init__): Oddìlení view a data (viz `Form.__init__')

2001-08-21  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (ListForm.__init__): Updatováno pro zmìnu
	pøedka `Form'.
	(CodeBook._on_activation): Nevolej `Show' na self._list.
	(CodeBook.Show): Nová metoda.

	* lib/form/form.py (Form): Buï potomkem wx.wxWindow.
	(Form.window): Zru¹eno.
	(Form): Zru¹en atribut `_parent'.

	* lib/form/_test.py
	(CodeBookSelection.check_interactive_selection): Nastav velikosti
	oken.

2001-08-20  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (Form.__init__): Obaluj se oknem.
	(Form.window): Nová metoda.

	* lib/util/log.py (log): Odchytávej výjimky z inspectu.

	* lib/form/list.py (List.__init__): Opraveny chybné zápisy volání.
	(CodeBook.__init__): Argumenty `field' a `field_column' slouèeny
	do nového argumentu `fields'.
	(CodeBook._on_activation): Nastav v¹echna políèka a odstraòuj se
	ze zásobníku nepodmínìnì.
	(CodeBook.__init__): Nový argument `frame_stack'.
	(CodeBook._on_activation): Aplikuj `pop' na frame stack.

	* lib/view/view.py (View.__init__): Opravy gramatických chyb
	v docstringu.

	* lib/form/_test.py: Nastav LC_NUMERIC na `C'.
	(CodeBook.check_interactive_selection): Nový test.

	* lib/data/data.py (Row.__init__): Pøi chybách vypisuj i pøíslu¹né
	hodnoty.

	* lib/form/application.py (Application.OnInit): Nedìlej prosté
	okno pøes celou obrazovku, udìlej normální okno, o zbytek se
	postará wm.
	(Application.OnInit): Nenastavuj velikost okna vùbec -- nech to na
	externí specifikaci (wm, resources, ...).

2001-08-20  Tomas Cerha  <cerha@brailcom.cz>

	* lib/view/view.py (View.__init__): Opravena chyba s mutable
	objektem v pøiøazení defaultní hodnoty argumentu.

	* lib/util/util.py: Pøejmenován konfliktní import (import types as
	pytypes).
	

2001-08-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/_test.py (get_pdm_tests): Nová funkce.

	* lib/form/application.py (Application): Pou¾ívej
	screen.FrameStack místo pùvodní vlastní implementace.
	(Application.__init__): Zru¹eno, inicializace se musí provádìt
	v `OnInit'.

	* lib/form/screen.py (FrameStack): Nová tøída.

	* lib/form/list.py (CodeBook.__init__): Nové argument 'field' a
	'field_column'.
	(CodeBook): Aktualizován docstring.
	(CodeBook._on_activation): Nová metoda.
	(CodeBook.__init__): Registruj ji jako callback pro aktivaci.
	(List.set_activation_callback): Nová metoda.
	(List.__init__): Nový atribut `_callback'.
	(List._on_activation): Nová metoda.
	(List.__init__): Nastav ji jako callback pro aktivaci.

	* lib/form/form.py: Opraveno odsazování ze 3 na 4 mezery.
	(_InputField): Opravy docstringù a nové specifikace.
	(_InputField.set_value): Nová metoda.

2001-08-18  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/form.py (_InputField.__init__): Odstranìny printy
	vedoucí ke zhroucení.

	* lib/form/list.py (List.insert): Vyvolej výjimku jestli¾e
	po¾adovaná pozice je a¾ za koncem seznamu.
	(List.insert): `n' smí být 0 (oprava docstringu).

	* lib/form/_test.py (_Application.OnInit): Pøidáno tlaèítko "OK" a
	v¹echna tlaèítka ulo¾ena do atributù.
	(_Application.OnInit): V¹echna tlaèítka zneviditelnìna.
	(_WxTestCase._ask_question): Patøièná tlaèítka zviditelnìna.
	(Application): Nová sada testù.
	(_WxTestCase._ask_question): Pøidávej za otázku otazník.

2001-08-17  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/_test.py (_WxTestCase._create_application): Nová metoda.
	(_WxTestCase.setUp): Pou¾ívej ji.

	* lib/form/application.py (Application._replace_window):
	Nepøevádìj okno, je-li ji¾ ve framu.
	(Application._replace_window): Patøiènì skrývej a odkrývej okna.
	(Application.frame): Nová metoda.
	(Application.push): Update docstringu.
	(Application.pop): Nápodobnì.
	(Application.replace): Nápodobnì.
	(Application._replace_window): Nový argument `close'.
	(Application.pop): Vyu¾ij ho.
	(Application.replace): Nápodobnì.

2001-08-17  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/form.py (EditForm.__init__): Rozdìlení do sloupcù
	urèeno podle rozdìlení políèek do skupin. Optimalizace zobrazení
	formuláøe. Pou¾ití `_InputField'.
	(_InputField): Základní implementace rozeznávající Boolean,
	ostatní políèka jsou zatím v¾dy `wxTextCtrl' 

	* lib/view/view.py (LayoutSpec): Zru¹en atribut `_cols', metoda
	`cols()' a argument `cols' metody `__init()'. Rozdìlení do sloupcù
	je urèeno rozdìlením polí do skupin (viz `View.__init__()').
	(View.__init__): Argument `fields' pøejmenován na `field_groups',
	algoritmus zpracování definic vstupních polí roz¹íøen o mo¾nost
	rozdìlení polí do skupin.
	(View.field_groups): Nová metoda.

2001-08-16  Tomas Cerha  <cerha@brailcom.cz>

	* test_osnova.py: upraveno pro testování editaèního formuláøe.

	* lib/form/form.py (EditForm.__init__): implementován základ pro
	vytvoøení formuláøe na základì pøedlo¾ené specifikace.
	(_InputField): Nová tøída
	(Form): Doplnìna dokumentace.

	* lib/form/list.py (ListForm.__init__): odstranìno volání
	self.Fit(parent)

	* lib/view/view.py (LayoutSpec.border): Nová metoda.

2001-08-15  Tomas Cerha  <cerha@brailcom.cz>

	* lib/view/view.py (LayoutSpec.spacing): Metoda zru¹ena.
	(LayoutSpec.hgap): Nová metoda.
	(LayoutSpec.vgap): Nová metoda.

	* lib/util/util.py (is_dictionary): Nová funkce.

	* lib/view/view.py (Width): Nová tøída.
	(ColumnSpec._data): Atribut zru¹en.
	(ColumnSpec.__init__): Vypu¹tìn argument data
	(FieldSpec): Doplnìna základní implementace. 
	(LayoutSpec): Nová tøída. 
	(View._layout): Nový atribut.
	(View._fields): Nový atribut.
	(View._fielddict): Nový atribut.
	(View.__init__): Nové povinné argumenty fields a layout (zmìna
	poøadí!). Doplnìn assert na datový typ argumentù a ka¾dé polo¾ky
	sekvencí columns a fields.
	(View.fields): Nová metoda.
	(View.field): Nová metoda.
	(View.layout): Nová metoda.

	* lib/form/__init__.py: `list' importuj hvìzdièkovì, stejnì jako `form'

2001-08-14  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/screen.py (Restorable): Nová tøída.
	(MenuBar): Do seznamu pøedkù pøidáno `Restorable' a 'Active'.
	(ButtonBar): Do seznamu pøedkù pøidáno `Restorable'.
	(StatusBar): Nápodobnì.
	(ButtonBar.save): Nová metoda.
	(ButtonBar.restore): Nová metoda.
	(StatusBar.save): Nová metoda.
	(StatusBar.restore): Nová metoda.
	(MenuBar._assemble_menu): Testuj nejen na MItem, ale i na
	lib.form.screen.MItem (nìjaká pythonovina?).

	* banka.py: Nový soubor, zárodek startovacího skriptu celé
	aplikace.

2001-08-14  Tomas Cerha  <cerha@brailcom.cz>

	* config/config.py (db_host): DB byla pøesunuta na nový stroj. 

2001-08-13  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/__init__.py: Kromì `form' neimportuj submoduly
	hvìzdièkovì.

	* lib/form/application.py: Nový modul.

	* lib/form/screen.py (ButtonBar.activate): Nová metoda, zatím
	prázdná.
	(ButtonBar): Do seznamu pøedkù pøidáno `Active'.
	(MenuBar): Nápodobnì.
	(MenuBar.activate): Volej metodu pøedka `Active'.
	(Active): Nová tøída.
	(_Activation): V docstringu pøidán odkaz na `Active'.

2001-08-10  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/types_.py (Value.export): Nová metoda.
	(Value): Pøidán odkaz na ni v dokumentaèním øetìzci.

	* lib/form/list.py (List.insert): Pro výpis hodnoty pou¾ívej
	`.export', ne `str'.

	* lib/data/data.py (MemData._mem_find_index): Zprovoznìno.
	(MemData._mem_create_row): Opraveny chybné závorky u volání
	`append'.

	* lib/form/_test.py (List): Doplnìny interaktivní testy.
	(ListForm): Nápodobnì.
	(ListForm.setUp): Pøedávej do `insert' instanci `Row', ne seznam.

2001-08-09  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (MemData.insert): Doplnìna typová kontrola.
	(MemData._mem_create_row): Opraveno vyta¾ení klíèe.

	* lib/form/_test.py: Update pro nový kód.
	(ListForm): Doplnìny interaktivní testy.
	(ListForm.setUp): Vytvoø instanci `row'.

	* lib/form/list.py (CodeBook): Opraven dokumentaèní øetìzec.
	(BrowseForm.switch_mode): Odstranìno volání `Refresh'.

2001-08-09  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/screen.py (StatusBar): Doplnìna dokumentace.

2001-08-08  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/test.py (InteractiveTestCase.ask_user): Pøekopáno,
	rozdìleno na nìkolik men¹ích metod.

	* lib/form/list.py (List.__init__): Roztáhni seznam na celou
	velikost okna.

	* lib/form/_test.py (_WxTestCase.setUp): Buï potomkem
	`InteractiveTestCase'.
	(_Application.OnInit): Pøidána tlaèítka YES a NO.
	(_Application.exit_ok): Nová metoda.
	(_Application.exit_fail): Nová metoda.
	(_WxTestCase): Pøedefinovány metody podìdìné
	z `InteractiveTestCase'.

	* lib/_test.py (tests): Pøidány testy z lib.form.

2001-08-08  Tomas Cerha  <cerha@brailcom.cz>

	* lib/view/view.py (View): Doplnìní dokumentace.

	* lib/form/form.py (Form._view): atribut pøesunut z ListForm (je
	to spoleèný atribut v¹ech typù formuláøù)
	(Form.__init__): pøidán arument view

	* lib/form/list.py (CodeBook.__init__): Pøidán argument id, kvùli
	novému zpùsobu specifikace èíselníkù.
	(CodeBook.columns): Chování podle nového zpùsobu specifikace
	èíselníkù.
	(CodeBook.__init__): Takté¾
	(ListForm._view): pøesunutí atributu _view do rodiè. tøídy Form

	* lib/view/view.py (ColumnSpec.in_codebook): Zru¹eno
	(ColumnSpec._in_codebook): Zru¹eno
	(ColumnSpec.__init__): Zru¹en argument in_codebook
	(View.__init__): Pøidán atribut codebooks
	(View.columns): Zmìna chování - argument codebook je nyní
	identifikátorem èíselníku.

	* test_osnova.py (Application.OnInit): Pøepracováno kvùli pou¾ití
	sizerù.

	* lib/form/list.py (List.__init__): Pøidáno SetSize(), aby nadøízený
	sizer znal rozmìry tabulky.
	(List.column_count): Pøejmenováno na `_column_count'.
	(ListForm.__init__): Pøepracováno kvùli pou¾ití sizerù.
	(ListForm.fill): Pøidány DEBUG logovací zprávy.
	(ListForm._total_width): Metoda zru¹ena - pøi pou¾ití sizerù ji¾
	není tøeba.
	(CodeBook.__init__): Zru¹ena, proto¾e v tuto chvíli se neli¹í od
	metody rodièovské tøídy
	(BrowseForm.__init__): Takté¾.

	* lib/form/form.py (Form): Formuláøe jsou nyní odvozeny z tøídy
	wxBoxSizer. 

2001-08-07  Milan Zamazal  <pdm@brailcom.org>
	
	* lib/form/_test.py: Dokonèena základní kostra testù.

	* lib/form/screen.py (_Activation.isactive): Pøejmenováno na
	`is_active'.
	(MItem.__init__): Upøesnìn argument `callback'.
	(MenuBar): Oprava pøeklepu v docstringu.
	(MenuBar): Opravena chyba v pøíkladu.
	(ButtonBar._add_button): Volej button_spec.label, ne
	button_spec.title.
	(Help.__init__): Opravena srandovní pravopisná chya.

	* lib/form/list.py (BrowseForm.switch_mode): Opraven pøeklep
	v nastavování daného módu.

	* lib/data/_test.py (Data.check_it): Zdokumentována absence testù
	pro data.MemData.

	* lib/data/data.py (MemData): Nová tøída.

2001-08-07  Tomas Cerha  <cerha@brailcom.cz>

	* lib/form/dialog.py: Zru¹en hvìzdièkový import wx.

	* lib/form/form.py: Zru¹en hvìzdièkový import wx.

	* lib/form/screen.py (MenuBar): Je nyní pøímým potomkem
	'wxMenuBar' (døíve samostatná tøída s atributem uchovávajícím
	instanci 'wxMenuBar').

	* test_osnova.py: Zru¹en hvìzdièkový import wx.

2001-08-06  Milan Zamazal  <pdm@brailcom.org>

	* lib/view/view.py (View.__init__): Pøidány typové kontroly.

	* lib/form/_test.py: Pùvodní obsah zru¹en, zahájena tvorba
	skuteèných testù.

	* lib/form/list.py: Neimportuj wx hvìzdièkovì.
	(BrowseForm.switch_mode): Doplnìna chybìjící `self'.
	(List.insert): První øádek má èíslo 0.
	(List.append): Nápodobnì.
	(ListForm.columns): Upøesnìna návratová hodnota.

	* lib/data/_test.py (get_tests): Odstranìn omylem ponechaný
	profiling.

	* lib/form/screen.py (ButtonBar._del_button): Opraveny staré názvy
	promìnných.

2001-08-05  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List._colindex): Pøejmenováno na `_col_index'.
	(List.clear): Nová metoda.
	(ListForm.fill): Nevytváøej nový seznam, místo toho volej
	`List.clear'.

	* lib/form/screen.py: Neimportuj wx hvìzdièkovì.
	(Menu.__init__): Obaluj jazykovì závislé
	promìnné pøekladovou funkcí.
	(MItem.__init__): Nápodobnì.
	(MenuBar.__init__): Pøidávej hot key pouze pokud má `item' metodu
	`hotkey'.
	(MenuBar._assemble_menu): Item -> MItem.
	(StatusBar.show_message): Oprava jména promìnné.
	(_Activation): Nová tøídy.
	(ACT_DEFAULT): Nech» je hodnotou instance tøídy `_Activation'.
	(MenuBar.activate): Nová metoda (zatím prázdná).
	(ButtonSpec): Nová tøída.
	(ButtonBar): Pøepracovány dokumentaèní øetìzce.
	(ButtonBar.__init__): Nový argument button_specs.
	(ButtonBar.add_button): Pøejmenováno na `_add_button'.
	(ButtonBar.del_button): Pøejmenováno na `_del_button'.
	(ButtonBar.add_buttons): Nová metoda.
	(ButtonBar.del_buttons): Nová metoda.
	(ButtonBar._exist): Pøejmenováno na `_exists'.
	(ButtonBar.frame): Zmìnìn na privátní.
	(ButtonBar._add_button): Ké¾ je argumentem `ButtonSpec'.
	(ButtonBar._add_button): Men¹í úpravy kódu.
	(ButtonBar._del_button): Nápodobnì.

2001-08-04  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (DBDataNotification.check_side_notification):
	Oprava v kvalifikaci modulu.

	* lib/util/log.py (log): Implementováno zji¹tìní modulu.

	* lib/form/screen.py: Úpravy dokumentaèních øetìzcù.
	(Help): Nová tøída.
	(wxID_STATUSBAR): Odstranìno.
	(Item): Pøejmenováno na `MItem'.
	(StatusBar.get_message): Zru¹en argument `text'.
	(StatusBar.get_message): Pøejmenováno na message.
	(StatusBar.field_number): Pøejmenováno na `_field_number'.
	(Menu.parse_menu): Pøesunuto do `MenuBar'.
	(Menu.get_title): Pøejmenováno na `title'.
	(Menu.__init__): `items' zmìnìno na jediný parametr.
	(Menu.items): Nová metoda.
	(ACT_DEFAULT): Nová konstanta.
	(MItem.__init__): Parametr `isactive' zmìnìn na `activation.
	(MItem.isactive): Pøejmenováno na `activation'.
	(MItem.title): Vra» pouze prostý titulek, bez kombinace s hotkey.
	(MenuBar.__init__): Pøekopáno.
	(MenuBar.parse_menu): Pøejmenováno na `_assemble_menu'.

	* lib/view/__init__.py: Upøesnìna dokumentace modulu -- ne v¹echny
	specifikaèní tøídy se nachází zde.
	* lib/form/__init__.py: Analogicky.

	* lib/form/list.py (ListForm.__init__): Atributy tøídy uèinìny
	privátními.
	(ListForm.total_width): Pøejmenováno na _total_width.
	(ListForm.fill): Vytvoø nový _list, ne¾ jej zaène¹ plnit.
	(ListForm): Úpravy dokumentaèních øetìzcù.
	(CodeBook): Nápodobnì.
	(BrowseForm): Nápodobnì.
	(BrowseForm.__init__): Pou¾ívej `self', ne `BrowseForm'.
	(BrowseForm.mode): Zru¹en argument `mode'.
	(BrowseForm.switch_mode): Pøidán argument `mode'.
	(BrowseForm.switch_mode): Pøepsáno.

2001-08-03  Milan Zamazal  <pdm@brailcom.org>

	* lib/form/list.py (List.colindex): Pøejmenováno na '_colindex'.
	(List._colindex): Pøi neexistujícím sloupci vra» None, ne -1.
	(List): Úpravy dokumentaèních øetìzcù.

	* lib/view/view.py: Dopsány a pøepracovány dokumentaèní øetìzce,
	celkové proèi¹tìní souboru.

	* lib/data/__init__.py: `import data' zmìnìno na
	`from data import *'.

	* lib/view/__init__.py: Komentáø nahrazen dokumentaèním øetìzcem.
	* lib/form/__init__.py: Nápodobnì.

	* lib/util/util.py (Configuration): Nová tøída (pøesunuta
	z log.py).
	* lib/util/log.py (_Configuration): Pøesunuto do util.py.

	* lib/util/test.py (InteractiveTestCase.ask_user): Nová tøída.
	(TestSuite.add): Pøidávej metody s prefixem `check_interactive_'
	dle konfiguraèní volby.
	* config/config.py (test_run_interactive): Nová konfiguraèní
	promìnná.

2001-08-02  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPyPgSQL._pypg_listen): Pøidány
	debugovací hlá¹ky o ukonèení.
	(DBDataPyPgSQL._pypg_listen): Pøi øízeném ukonèení zavolej na
	staré spojení `finish'.

	* lib/data/_test.py (DBDataFetchBuffer.tearDown): Volej `sleep',
	ne pouze `close'.
	(DBDataDefaultClassRefetch.tearDown): Nevolej `close'.
	(_DBBaseTest.tearDown): Explicitnì ukonèi spojení pøes `finish'.

2001-07-31  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py
	(PostgreSQLStandardBindingHandler._db_bindings_to_column_spec):
	Ciselnik -> Codebook.
	(DBDataPostgreSQL._pg_make_row_from_raw_data): Nápodobnì.
	(DBData.__init__): Pøidána kontrola typu argumentu `bindings'.
	(DBDataPostgreSQL.skip): Oprav poèet øádkù dle parametrù bufferu.
	(DBDataPostgreSQL._PgBuffer.correction): Nová metoda.
	(DBDataPostgreSQL.skip): Neprovádìj SQL pøíkaz, pokud by mìlo
	dojít k nulovému posuvu.

	* lib/data/types_.py (Ciselnik): Pøejmenováno na `Codebook'.

	* lib/util/test.py: Doplnìn dokumentaèní øetìzec.

	* lib/data/_test.py (DBDataNotification): Nový test.
	(DBDataFetchBuffer): Nový test.
	(_DBBaseTest): Nová pomocná tøída.

	* lib/data/data.py (Data.add_callback_on_change): Pøidán chybìjící
	argument self.
	(Data.remove_callback_on_change): Nápodobnì.

2001-07-30  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL.skip): Nová metoda.
	(DBDataPostgreSQL._pg_skip): Nová metoda.
	(DBDataPostgreSQL.fetchone): Nehledej poslední øádek, je-li None.
	(DBDataPostgreSQL._pg_fetchone): Zmìnìno na _pg_fetchmany.
	(DBDataPostgreSQL.fetchone): Zohledni tu zmìnu.
	(DBDataPostgreSQL): Poznámky k implementaci podtøíd pøesunuty
	z dokumentaèního øetìzce do komentáøe.
	(DBDataPostgreSQL._Pg_Buffer): Nová vnitøní tøída.
	(DBDataPostgreSQL.__init__): Inicializuj ji.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Pøidej count do fetch pøíkazù.
	(PostgreSQLStandardBindingHandler._pg_skip): Nová metoda.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Pøidány pøíkazy pro _pg_skip.
	(DBDataPostgreSQL.select): Resetuj fetch buffer.
	(DBDataPostgreSQL.fetchone): Ber data z bufferu.
	(DBDataPostgreSQL.fetchone): Zdokumentováno, ¾e metoda nereaguje
	na notifikace o zmìnì dat.

	* lib/data/data.py: V dokumentaèních øetìzcích doplnìny za názvy
	funkcí závorky, aby pydoc vytvoøil odpovídající linky.
	(Data.skip): Nová metoda.

2001-07-29  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL._PG_FETCH_SIZE): Nový
	atribut.
	(DBDataPostgreSQL.fetchone): Kontroluj hodnotu 'direction'.

	* lib/data/_test.py (TutorialTest.check_it): Uspi datové instance.

2001-07-28  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (DBDataDefaultClass.tearDown): Pou¾ívej
	`sleep' místo zneplatnìní datového objektu.

	* lib/data/dbdata.py (DBData.sleep): Nová metoda.
	(DBData): Odkaz na ni.
	(DBDataPyPgSQL.sleep): Nová metoda.
	(DBDataPyPgSQL._lock): Pøejmenováno na `_pypg_lock'.

2001-07-27  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (DBDataDefaultClass.check_select_fetch): Na
	konci zavolej `Data.close'.
	(DBDataDefaultClass.check_select_fetch_direction): Nápodobnì.
	(DBDataDefaultClass.check_select_condition): Nápodobnì.
	(DBDataDefaultClassRefetch.tearDown): Nápodobnì, nová metoda.

	* lib/data/data.py (Data.__init__): Nový atribut
	`_on_change_callbacks'.
	(Data.add_callback_on_change): Nová metoda.
	(Data.remove_callback_on_change): Nová metoda.
	(Data._call_on_change_callbacks): Nová metoda.

	* lib/data/dbdata.py (DBDataPostgreSQL.insert): Po¹li notifikace.
	(DBDataPostgreSQL.update): Nápodobnì.
	(DBDataPostgreSQL.delete): Nápodobnì.
	(PostgreSQLStandardBindingHandler._pg_send_notifications): Nová
	metoda.
	(PostgreSQLStandardBindingHandler._pg_register_notifications):
	Nová metoda.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Vytvoø notifikaèní SQL pøíkazy.
	(DBDataDefaultClass.__init__): Zavolej registraci notifikací.
	(DBDataPyPgSQL._pg_query): Pøi selhání pokusu o znovuspojení
	reportuj poslední nastalou výjimku.
	(DBDataPyPgSQL._pypg_start_listener): Nová metoda.
	(DBDataPyPgSQL._pypg_listen): Nová metoda.
	(DBDataPyPgSQL._pypg_ensure_connection): Volej
	`_pypg_start_listener'.
	Uzavøi socket starého spojení.
	(DBDataPyPgSQL._pg_query): Pracuj se spojením pod zámkem.

2001-07-26  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/data.py (Row.__setitem__): Opraven pøeklep
	v dokumentaèním øetìzci.
	(Row): Nápodobnì.
	(Row.keys): Vylep¹en dokumentaèní øetìzec.

2001-07-24  Milan Zamazal  <pdm@brailcom.org>

	* lib/util/log.py: Doplnìna nedokonèená vìta v dokumentaèním
	øetìzci modulu.

	* lib/data/_test.py (DBDataDefaultClassRefetch): Nová sada testù.

	* lib/data/dbdata.py (DBDataPostgreSQL.fetchone): Pøi rekonstrukci
	neprovádìj zpìtný fetch pøi BACKWARD.
	(DBDataPostgreSQL._pg_last_fetch_direction): Zru¹eno.
	(DBDataPostgreSQL.fetchone): Opravy chyb.
	(DBDataPostgreSQL.fetchone): Doplnìn dokumentaèní øetìzec
	popisující zpùsob rekonstrukce po pøeru¹ení.

2001-07-22  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py
	(DBDataDefaultClass.check_select_fetch_direction): Nový test.
	(DBDataDefaultClass.check_select_condition): Nový test.

	* lib/data/__init__.py: Pøidána "dokumentace" modulu.

	* lib/data/dbdata.py (DBDataPostgreSQL.select): Inicializuj
	promìnné potøebné pro kontinuální fetch.
	(DBDataPostgreSQL.fetchone): Jedná-li se o pøeru¹ený fetch, otevøi
	fetch znovu a pokus se dostat na aktuální pozici.
	(PostgreSQLStandardBindingHandler._pg_select): Zohledòuj podmínku.
	(PostgreSQLStandardBindingHandler._pdbb_create_sql_commands):
	Nápodobnì.
	(PostgreSQLStandardBindingHandler._pdbb_tabcol): Nová metoda,
	místo lokální funkce.
	(PostgreSQLStandardBindingHandler._pdbb_btabcol): Nová metoda,
	místo lokální funkce.
	(PostgreSQLStandardBindingHandler._pdbb_condition2sql): Nová
	metoda.
	(DBDataPyPgSQL._pg_query): Pøidáno logování.

	* lib/data/data.py (EQ): Doplnìn popis argumentù.
	(AND): Nápodobnì.
	(Data.Operator): Pøejmenováno na `_Operator'.
	(Data.fetchone): Upøesnìn význam smìru.
	(Data.args): Vracej nìco!

	* lib/data/types_.py (Ciselnik): Upøesnìna dokumentace.
	(Ciselnik.extract): Uzavøi datový zdroj po získání informací
	z nìj.

2001-07-20  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/dbdata.py (DBDataPostgreSQL.row): Pøi chybì proveï
	rollback.
	(DBDataPostgreSQL.select): Nápodobnì.
	(DBDataPostgreSQL.fetchone): Nápodobnì.
	(DBDataPostgreSQL.insert): Nápodobnì.
	(DBDataPostgreSQL.update): Nápodobnì.
	(DBDataPostgreSQL.delete): Nápodobnì.
	(DBDataPostgreSQL._pg_already_present): Není-li klíè kompletní,
	vra» FALSE.
	(DBDataPostgreSQL.close): Nová metoda.
	(DBDataPostgreSQL._pg_value): Nová metoda.
	(_db_value): Zru¹eno.
	(PostgreSQLStandardBindingHandler._pg_fetchone): Nový argument
	`direction'.
	(PostgreSQLStandardBindingHandler._pg_select): Nový argument
	`condition', zatím ignorovaný.

	* lib/data/data.py (Row.__cmp__): Porovnávej i klíèe.
	(Row.__str__): Oddìluj polo¾ky sloupce èárkami.
	(Row.__init__): Kontroluj argument 'data'.
	(Data.__init__): Kontroluj argumenty.
	(Data.insert): Upøesnìno chování bez hodnot klíèe.
	(FORWARD): Nová konstanta.
	(BACKWARD): Nová konstanta.
	(_Operator): Nová tøída.
	(Data.UnsupportedOperation): Nová vnitøní tøída.
	(Data.Operator): Nová vnitøní tøída.
	(Data.fetchone): Nový argument `direction'.
	(Data.select): Nový argument `condition'.
	(EQ): Nová funkce.
	(AND): Nová funkce.
	(Data.close): Nová metoda.
	
	* lib/data/types_.py (Ciselnik.validate): Akceptuj i jednoprvkové
	tuple.

2001-07-19  Milan Zamazal  <pdm@brailcom.org>

	* lib/data/_test.py (DBDataDefaultClass.check_update): Opravena
	výroba `k2'.
	(_TypeCheck._test_validity): Testuj `export'.

	* lib/data/types_.py (Type.validate): Argumentem mù¾e být
	libovolný objekt, nejen string.
	(Type.export): Nová metoda.
	(Ciselnik.extract): Vyu¾ij ji.
