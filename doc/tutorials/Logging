#title Logování

* Cíle a základní principy

U každého programu často potřebujeme vědět, co se děje uvnitř.  Když něco
vůbec nefunguje, funguje špatně nebo je nutné zjistit historické události, je
každá informace programu o sobě samém, o tom, co udělal a proč to udělal,
velmi cenná.  Naopak program v podobě černé skříňky, která o sobě nenechá
žádný záznam, v takových situacích způsobuje skřípění zubů.  Proto je
důležité definovat nějaký mechanismus, který programu umožňuje snadno
zaznamenávat informace o svém běhu.  To je cílem *logování*.

Logování tedy slouží k zaznamenávání důležitých informací o událostech
v systému, zejména:

- Informace pro administrátora o stavu systému.  Pokud dojde k nějakému
  technickému problému, administrátor by měl být schopen z logu zjistit,
  o jaký problém jde nebo alespoň jak se přesně problém projevuje.

- Záznam uživatelských akcí pro případnou pozdější diagnostiku problémů.
  Pokud provozovatel systému oznámí chybné chování, měli bychom být z logu
  schopni zrekonstruovat postup, jakým se k chybě došlo.  To je v našem
  případě obzvlášť důležité, protože nějaké chyby se určitě objeví a vzhledem
  ke vzdálenosti zákazníka půjde mnohdy o jedinou možnost jak zjistit, co se
  vlastně *přesně* stalo.

- Změny všech dat.  Slouží ke stejnému účelu jako záznam uživatelských akcí.
  Naopak to neslouží jako forma zálohy pro rekonstrukci dat -- to bude
  zajištěno jiným (spolehlivějším) způsobem[1].

- Ladící informace potřebné pouze během vývoje programu, které se nikdy
  nelogují za ostrého běhu aplikace.  Tyto slouží jako naše pomůcka pro
  rychlejší odhalování chyb -- zaznamenávají redundantní informace o datech a
  událostech v mezikrocích, které bychom jinak museli stejně zjišťovat
  analýzou kódu nebo v debuggeru.

Logování musí dostatečně vyhovět dvěma protichůdným požadavkům:

1. Zaznamenání co nejvíce informací o události.

2. Snadnost použití pro vývojáře.

Kromě toho je ještě důležitá možnost rozumné práce s výstupem logování, ale
tento problém lze obvykle zajistit vhodnou implementací rozhraní a netýká se
přímo definice rozhraní.

Aby tyto požadavky byly splněny, musí logování vše, co může zjistit samo,
zaznamenat bez jakékoliv asistence vývojáře, dále umožnit vývojáři zaznamenat
prakticky cokoliv a přitom tak činit co nejjednodušší formou (co nejméně
funkcí s co nejméně argumenty).


* Použití
  
Logování zajišťuje modul =pytis.util.log=.  Vzhledem k charakteru tohoto modulu
je explicitně dovoleno jej importovat způsobem =from pytis.util.log import *=.

Základní použití modulu je velmi jednoduché.  Modul definuje funkci =log=,
která je v podstatě jediným rozhraním k logování.  Tato funkce má tři
parametry: druh události, slovní popis události a libovolný pythonový objekt.
Volání funkce =log= může vypadat například takto:

<example>
import pytis.util
...
pytis.util.log(pytis.util.OPERATIONAL, 'Pád systému', exception)
</example>

První argument specifikuje, o jaký druh události jde.  S ohledem na na
začátku deklarované účely logování se může jednat o událost provozní,
uživatelskou nebo ladící.  Pro jednotlivé druhy událostí jsou v modulu
definovány příslušné konstanty.  V uvedeném příkladu se jedná o událost
provozní, označenou konstantou =OPERATIONAL=.

Druhý argument je vždy řetězec ve formě čitelné pro lidi.

Další informace obecně není třeba zaznamenávat, protože logovací systém
automaticky doplní celou řadu dalších informací jako datum a čas, uživatele,
jméno modulu, apod.  Pokud je potřeba poskytnout ještě nějakou specifickou
doplňující informaci (data), využije se třetí argument funkce =log=, který je
nepovinný a kterým může být libovolný pythonový objekt.  V našem příkladě je
to odchycená výjimka předaná prostřednictvím proměnné =exception=.


* Zásady psaní logovacích hlášek

Logovací hlášky se píší v češtině (v souladu s obecnými jazykovými pravidly
naší aplikace) a *neobalují* se podtržítkem, protože pro ně platí jiná pravidla
než pro ostatní hlášky v systému (překládají se vždy do angličtiny, aby jim
rozuměl administrátor systému i my), což se zajišťuje uvnitř logovacího
modulu.

U logovacích hlášek je důležitá *stručnost* a *srozumitelnost*.  Hlášky nesmí
svou délkou činit log nepřehledný a špatně čitelný.  Přitom jim musí čtenář
rozumět a musí být pokud možno srozumitelné jak samostatně, tak i v kontextu
okolních hlášek.

"Formátovací" pravidla pro logovací hlášky:

- Hláška začíná velkým písmenem a neukončuje se tečkou.

- Používá se trpný rod (je stručnější).

- Interpunkce se omezuje na minimum.

- Do hlášek se nevkládají *žádná* data, pro ty slouží volitelný argument funkce
  =log=.


Footnotes: 
[1]  Denní zálohou serveru mimo pracovní dobu a štosem papírů za každý den
     práce.

