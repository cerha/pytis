#title Testování

Pro testování nyní používáme pytest a všechny nové testy píšeme v pytest stylu,
tj. přímo jednoduché asserty.  Mnoho stávajících testů je napsáno ještě ve
stylu unittest, tj. self.assertEqual & spol.  Je dobré testy příležitostně
přepsat na přehlednějšíí pytest zápis, ale daleko užitečnější je napsat nové
testy zvyšující pokrytí.


* Zprovoznění testovacího prostředí

pip install pytest
pip install pytest-benchmark

PYTHONPATH=lib ./tools/gsql.py pytis.dbdefs.db_pytis_crypto > /tmp/pytis-crypto.sql

sudo -u postgres createdb test
sudo -u postgres psql test -f /tmp/pytis-crypto.sql
sudo -u postgres psql test -c 'create extension tsearch;'
sudo -u postgres psql test -c 'create extension pgcrypto;'

Může být potřeba také:
sudo -u postgres psql test -c "alter database test set default_text_search_config to 'simple'"
sudo -u postgres psql test -c "grant create on database test to $USER;"

make test


* Pokrytí

Pokrytí kódu testy lze sledovat pomocí coverage.  Vegenerování (aktualizaci) coverage
statistik lze jednoduše spustit pomocí:

make coverage

nebo ručně dle příkladu z Makefile


V Emacsu je pro lepší přehled o pokrytí kódu testy možné použít
pycoverage-mode:

Stáhnout https://github.com/mattharrison/pycoverage.el

V adresáři cov2emacs spustit:

pip install .

Elisp potom stačí nainstalovat přes MELPA:

package-install pycoverage
pycoverage-mode

